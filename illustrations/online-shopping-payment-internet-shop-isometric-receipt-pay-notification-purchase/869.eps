%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: cartoon_banners_1_08.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 12/19/2018
%%BoundingBox: 0 0 600 400
%%HiResBoundingBox: 0 0 600 400
%%CropBox: 0 0 600 400
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 88 8%%BeginData: 11018 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7FD68FF
%B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7BDFD68FFFD17B7
%C4FD68FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD69FF
%B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7B8B7B7B7C4FD69FFB7B7B2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7C4FD69FFFD16B7FD6AFFB2B7
%B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2C4FD6AFFB8B7B7B7B8B7B7
%B7B8B7B7B7B8B7B7B7B8B7B7B7B8CBFD6AFFB2B7B7B7B2B7B7B7B2B7B7B7
%B2B7B7B7B2FD04B7FD43FFA9FFA9AFA9FD23FFFD14B7C4FD42FFAFAFA9FF
%AFAFA9FD0BFFA9FD16FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7
%CAFD41FFA9AFA9AFA9AFA9AFA9AFAFFD07FFA9AFA9FD15FFB7B7B8B7B7B7
%B8B7B7B7B8B7B7B7B8B7B7B7B8BEFD41FFA9FFAFFFA9FFAFFFA9FFAFFFAF
%FD07FFAFFD16FFB7B7B2B7B7B7B2B7B7B7B2B7B7B7B2FD04B7FD2FFFA8FD
%11FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFFD1CFFFD12B7CBFD2FFFAF5A
%AFFD0EFFAFFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9AFAFFD1AFFB2B7B7B7
%B2B7B7B7B2B7B7B7B2B7B7B7BEFD31FFA9AF8485A8FD0CFFAFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9FD19FFB8B7B7B7B8B7B7B7B8B7B7B7B8
%BECBFD34FFA9FFAFA97EFD0BFFA9FFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA9
%FFAFFFA9FD18FFB2B7B7B7B2B7B7B7B2B7B7C4CAFD35FFA9AFA9AFA9AF5A
%FD09FFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFAFFD15
%FFFD08B7C4CAFD39FFAFFFAFFFAFA9A9FFAFAFA9FD05FFAFAFA9FFAFAFA9
%FFAFAFA9FFAFAFA9FFAFAFA9FFAF852F542F84FD13FFCBC4B7BEBDBEC4FD
%3BFFA8AFA9AFA9AF84A9A8AFA9AFA9AFA8FFA9AFA9AFA9AFA9AFA9AFA9AF
%A9AFA9AFA9AFA9AF845306060629065AFD56FFAFA9FFAFAF845A84FFA9A9
%2FA9AFFFAFFFA9FFAFFFA9FFAFFFA8BEA2FFA9FFAFFF8554062F062F062F
%2FFD58FFA9AF84A92F302F530629A8FFA9AFA9AFA9AFA9AFA9AFA9C4B2B7
%95A9A9AF845306290628062906297EFD58FFA9AFA8302F36292906A9AFAF
%A9FFAFAFA9FFAFAFA9FFC4B7B7B78F9CA97E2F29062F0629062F067EFD4B
%FF7E84FD0CFFA8A9A87D2F2F060684FFA9AFA9AFA9AFA9AFA9AFA9C4B7B7
%B2B7B2959CFF7E2F06290606062959FD4AFF84A95AFD0BFFA8FFAFFFA9A8
%2F2F06AFAFFFA9FFA9FFA9FFAFFFA9FFC4B7CAC4FD04B7FFFFFF84292F06
%2F067EFD4BFF84AFFD0AFFA884A8AFA9AF5A53062884FFA9AFA9855AAFA9
%AFA9AFA9C4B7B7BDC4BDB78EFD05FF532806295AFD57FFA85A5A84842F30
%282F06A9AFFFAFAF5A8584AFA9FFAFAFA9C4B7B7B7BEB7B2FD06FFA85306
%7EFD57FFA15A365A2F2F2F2E062984FFA9AFA9AF84AF7E5AA8AFA9AFA9A9
%95B7B2B78EFD08FF847EFD57FFCAFD045A2F30282F06A9AFFFAFFFA9615A
%AFA9AF5AAFA9FFAFFF78BEB7B7A9FD5AFFCABEB2B7B7CBA25A365A2F5A84
%A92F29A8FFA9AFA9AF5A5A3685A9A95AA9A9AFA984FFC4785459FD59FFFD
%05B7BEA8365A5A85A9FFAFAF84A9AFAFA9FFAF855A5A85AFA9FFAFAFA9FF
%85FFFFFFAF842FA8FD57FFFD04B7B2B7A25A305A5AAFA9AFA85A7DFFA9AF
%A9AFFD055AAFA9AFA9AFA9A9FD04FFAFAF5953A8FD08FFC4B7C4FD1BFF7E
%7E84AF7EFFA8FF7EFF7EAFA8A97EFF7E7EA9FF7E84FF847EA87EFFA87EA8
%A87EA97E8484FD0AFFCBBDC3BDC4BEA85A5B36302F857E2F0684AFFFA9FF
%AF855A855A85A9FFAFFFA9FF85FD07FF855A53FD07FFBDFFB7FD1BFF297E
%7E59297E7E5929FF28537E06532F2959FF84532F7E067E2F595353532F2F
%53068406A8FD0BFFCFCACAC3CAA85A305AFD042F062884FFA9AFA9AF5A5A
%5AA95A5A84AFA9AFA9A9FD08FFAF842F7EFD05FFCBB7CBFD1BFF067E7E7E
%062F7E5906A90629592FA9A8067EFFA928537E297E59532F06A906532F2F
%FF29FD0BFF5A36A8C3CA84CB5A5A30362F30062F06A8AFFFAFAFA9857E5A
%7EFF8585A9FFAFAF84FD0BFF535AFD22FF067D7E5906067E06297D29067E
%06FF7E0684FF842F06FF06A92F7EA80684292F2F2FFF06FD0AFF85365A84
%CAC9A85AFF595A2F2F2F29062983FFA9AFA9AF7E855A843085A9AFA9AFA9
%85FD0BFFA906FD22FF06AF7E7E067E592F597E065A7E2F535A0684A9A92F
%5A7E2F7E59A8FF53592F53532FFF2FFD0AFF5A5A5A5BA8A95A5BA9FF7D5A
%2F30062F2FFFAFFFAFFFA9A9848585AF5A85A9FFAFFF84FD0BFFAF5AA8FD
%21FFA8A8FFA8A8A8AFA8FFA8A9A9FFA8A8A9A884FFA9A9A8FFA8A8A8FFFF
%FF7EFFA8FF84FFA8FD09FF5A5A2F5A305A365A3084FFAFA9852F2F59FFFF
%FFA9AFA985FD045A84AFA9AFA9AFA9A9FFFFAFFD09FF59A9FD4EFF5A365A
%5A5A365A365A5AFFAFAFA9AFA9FFFFFFAFAFA9FFA9855AAFA9855AAFAFAF
%A9FF85FFFFFFAFFD08FF7EA8FD4EFF7E5A2F5A365A305A365A84AFA9AFA9
%AFA9FFFFFFA9AFA9AF8585A8AFA9A95AA9A9AFA9A9A9FFAFFFFFAFA9FD05
%FF59A8FD4EFFCAA1FD055A305A5AFFAFFFA9FFAFFFAFFFAFFFA9FFA98584
%AFAFFFA9FFAFFFA9FF85FFAFFD05FFAFFD04FF7EA8FD21FFA984A884A9A8
%A884A984A984A984A984AF84847EA9A8A984A97E847E8484AFFD0EFFC9CA
%305A365A305A365A84FFFFAFA9AFA9FFFFFFA9AFA9AF5A845AAFA9AFA9AF
%A9AFA9A9A9FFA9FD05FFAFFFFFFF59A8FD21FFA885A8A97EAF848584A984
%A984A9A9A9A8A984A9A8AFA8A984A984A984A9AFFD0EFFCAA85A365A5A5A
%7ECACAFD05FFAFFFFFFFA9FFAFAFA9855A85A9FFAFAFA9FFAFAF84FFAFFD
%0AFF7EA8FD22FFA8FFA9FFA8FFFFFFA8FFFFFFA8FFA8FFA8FD05FFA8FD05
%FFA8FFA8AFA8FD06FF842F5AA9AFA7A8365A305A5AA8C3FD0AFFAFA9AFA9
%AF5A855A5A84AFA9AFA9AFA985A9FFA9FD09FF53A9FD21FF84A984A97EA9
%7E8484A9A9AF7EA984A984A9848484A984A97E84848584A984A97EA984A9
%A8FFFFFFA95B5A5A5ACA7E5A5A5B5ACAC9A8AFFD09FFA9FFAFFFA9855A85
%5AAFAFFFA9FFAFFF84FFAFFD0AFF7EA8FD05FFA9FD1BFFA9A8A9A8A9A8A9
%7EA9A8AFA8A9A8AFA8AFA8A9A8AFA8A9A9A984A9A8A9A8A9A8A9A8A9A8FF
%FFFFAFA9305A365A2F7E365A5ACAA15A30AFA9AFAFFD05FFA9AFA9AFA9AF
%5A857EA98485A9AFA9AFA985A9FFAFAFFD08FF59A9FD04FF5A85FD41FFA9
%FF855A365A5A5A30847ECAA15A5A5AA9FFAFAF84FFFFFFA9AFAFAFA9FFAF
%AF845B85AF85AFAFAFA9FF85FD05FFAFFD06FF7EA8FFFFFF7E85FD41FFA9
%AFA9A9365A305A365AA2CAA85A305A30AFA9AFA9AFA9AF847EA9AFA9AFA9
%AFA9AFA8855AA9A9AFA9AFA9A9FD0CFF59A8FD47FFAFFFA95A5A5B5A5A5A
%A9CAFFFF7E2F84A9FFAFFFA9FFAFAFA9FFAFFFA9FFAFFFA9FFAFAF5AFFAF
%FFA9FF85FD0CFF7EA8FD22FFBDB7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7
%B2B7B7CAFD10FFA9AFA95A305A365A7EAFAFAF2F2FA9AFA9AFA9AFA9AFA9
%AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9AFA9A9FD0CFF59A8FD21FFBEFD04
%B7BEC4C4BEC4BDC4BDFD04C4BEFD05B7FD12FFA906292F5A5AA9A9842959
%A9FFAFAFA9FFAFAFA9FF857E7E7EA9AFA9FFAFAFA9FFAFAFA9FFAFAF84FD
%0CFF7EA8FD21FFBEB2B7B7B7B2C4FFC4C4C4CABEFFCACAFFBEB7B7B7B2B7
%CAFD11FF53290629065A7E2F0685A9AFA9AFA9AFA9AFA9A92F2F0606062F
%7EAFA9AFA9AFA9AFA9AFA9AFA97EA9FD0BFF53A9FD21FFBDB8B7B7B7B8BE
%CBC4C4BECBB7CBC4CBC4BEB7B7B7B8B7FD12FF7E062F2F2F062F5AAFAFFF
%A9FFAFFFA9FFA97E2F2F062F062F065AA9FFAFFFA9FFAFFFA9FFAFFF5AFF
%AFFD0AFF7EA8FD21FFCBFD04B7B2B7B7B7B2B7B7B7B2B7B7B7B2B7B7B7B2
%CBFD12FF5929062F062984AFA9AFA9AFA9AFA9AF5A5A0628062906280629
%06A9A9AFA9AFA9AFA9AFA9AF85535AAF84AFA9FD07FF59A9FD23FFCACBCA
%CBCACBCACBCACBCACBCACBCACBCACBCAFD14FFA8062F2F2906FFAFAFA9FF
%AFAFA9A95A53062F0629062F0629062F7EAFA9FFAFAFA9FFAFAFA9842929
%2F2F29A9A9FD06FF7EA8FD4AFF840606530606FFFF5AAFA9AF845A7EAFA9
%7E0629060606290606067EA9AFA9AFA9AFA9AFA9AF2F292906065A065984
%AFA9FFFFFF53BECAFD4AFF062F592F06FFFFA92F858485A9FFAFFFA9AF59
%2F062F062F062F7EFFA9FFAFFFA9FFAFFF5A542F2F0653062F2F2F7EAFA9
%FFBEB7B7B8C4FD49FF28067E0628FFFFAFAF5A2F7EFFA9AFA9AFA9AF842F
%062906280684A9AFA9AFA9AFA9AF845A282F282F062F28282F2F2FAFA2FD
%04B7B2FD49FF2F297E2F06FFFFFFAFAFA95A2FA9AFFFAFAFA9FFAF85282F
%06295AFFAFAFA9FFAFAFA95A062F2F5328FD052F062FAFCB8FB2958F8FFD
%49FF8459A90629FD04FFAFAFA9A92F54A8FFA9AFA9AFA9AF592F065AA9AF
%A9AFA9AFA95A062F06062F2F2929282F06537EFF7E8F8E958E8FFD49FF5A
%8584532FFD07FFAFFF845A7EFFAFFFAFFFA9FFA95A2FA9AFFFA9FFA97E7E
%5A2F85592F062F062F2F84AFFF2F788FB2958F8FFD48FF845A5AFF5AA9A8
%FD07FFA9AFA97E2F84A9FFA9AFA9AFA9A92F8584855A84A9AFA97E2F2F06
%53062853FFA89B71A8A28F8E958E8FFD49FF5AFF845A5AFD0BFFA9FF535A
%A8FFAFAFA9FFAFAFA9A985AFA9FFAFAFA9AF5A2F59A9A9FF77FD04B7BE8F
%8F8FB28FFD4BFF8436AFFD0CFFA9AF842F2FFFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AFA9AF7E7EA9A928778EB7B7B78F8F8E958E8FFD51FFCBC4BDB7B7B8
%B7BEC4FFFFFFA9852F84AFFFAFFFA9FFAFFFA9FFAFFFA9FFAFFFA95953AF
%A1B28FB28FB88F8F8FB28FFD0DFFAFFFFFFFAF5A5A597E84FD39FFC4B7B2
%B7B7B7B2B7B7A2A2FFFFAFA9AF592F7EFFA9AFA9AFA9AFA9AFA9AFA9FF59
%2F7EAFA9A28E8F8E8F958F8E958E8FFD0CFFA9AFFFFFA92F302F362F302F
%5A7EA9FD34FFA99CB7B7B7958F8F8FA9AFAFA9FFFFFFA9FFA95A2FAFFFFF
%A9FFAFAFA9FFFFA80684AFAFA9FFA18F8FB28FB78FB2958F8FFD0BFFA9FF
%AFFFA9FD0C2F5384A9FD25FFA9FD0AFF84305453716A8F6A8F54AFA9AFA8
%FFFFFFA9AFA9852F5AA9FFA9AFA9FF842F59A9A9AFA8CBFFC48E8F8E8F95
%958E958E9BFD08FFA9AFA9AFA9AFFF2F5A2F302F5A2F302F5A2F302F5A2F
%5AA9FD23FFAFFD0BFF7E5B5A5A54958F956BAFAFFFA9FD07FFA9FF7E307E
%AFA8A92F5AA9FFA9FFBEB7B7BEC38F8FB28FBEAFC595CBAFFD07FFAFFFAF
%FFA9FFAF2F2F2F302F2F2F302F2F2F302F2F2F302F5AFD24FFA9FD0AFF7E
%2F5A365A305A5AA9A9AFA95A84FD07FFA9AFA95A292F2F84A9AFA9FF9BFD
%04B7BD8E8F8E8F95FFA9AFA9FD07FFA9AFA9AFA9AFA9AF362F302F362F30
%2F362F302F362F302F362FFD2FFF7E302F5A5A5A365A53AF845A2FA9FD0A
%FFAFAFA9FFAFFD04FFC48FB78F8F9BB78F8F8FC4FD09FFAFA9FFAFAFA9FF
%AFAFA9FD122F7EFD2FFF2F2F2F302F30065A2F2F2F30A9FD0BFFA9AFA9FD
%05FF9C8F8E8F8EC4A99B95A9A9FD07FFA9AFA9AFA9AFA9AFA9AFA9AF5A2F
%302F5A2F302F5A2F302F5A2F302F5A2F7EFD2FFFA92F5A2F302F2F2F302F
%5A84FD14FFC48FB28F8F9CFFAFFFAFFD07FFA9FFAFFFA9FFAFFFA9FFAFFF
%A92F302F2F2F302F2F2F302F2F2F302F2F2F302FFD2FFFAFA95A5A2F2F06
%302F7EA9FD15FFA28F8E8F8FC4FD0AFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%302F362F302F362F302F362F302F362F302F36A8FD2FFFAFAFA9FFAFAFA9
%FFAFFD17FFA99C95FD0BFFA9FFAFAFA9FFAFAFA9FFAFAFA9FFAFFD132F84
%FD32FFA9FFA9AFA9FD19FFA9AFA9FD09FFA9AFA9AFA9AFA9AFA9AFA9AFA9
%AFA9AF302F5A2F302F5A2F302F5A2F302F5A2F302F5A5AFD5DFFA9FFAFFF
%A9FFAFFFA9FFAFFFA9FFAF2F2F2F302F2F2F302F2F2F302F2F2F302F2F2F
%30A9FD5BFFAFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF362F302F362F302F36
%2F302F362F302F362F302FA9FD5CFFAFAFA9FFAFAFA9FFAFAFA9FFAFAFA9
%FD142F7EFD5DFFA9AFA9AFA9AFA9AFA9AFA9AFA9AF5A2F302F5A2F302F5A
%2F302F5A2F302F5A2F302FA9FD5EFFA9FFAFFFA9FFAFFFA9FFAFFFA92F30
%2F2F2F302F2F2F302F2F2F302F2F2F302F2FA8FD5EFFAFA9AFA9AFA9AFA9
%AFA9AFA9AF302F362F302F362F302F362F302F362F302F3684FD60FFAFA9
%FFAFAFA9FFAFAFA9FFAFFD122F7EFD61FFA9AFA9AFA9AFA9AFA9AFA9AF30
%2F5A2F302F5A2F302F5A2F302F5A2F3084FD63FFA9FFAFFFA9FFAFFFA9FF
%AF7E847E847E847E847E847E847E847E8484FD65FFA9FFAFFFA9FFAFFFA9
%FDFCFFFD04FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 8 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">600_450_clean</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2018-12-19T11:21:09+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2018-12-19T11:21:09+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2018-12-19T11:21:09+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>148</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAlAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8An/lLyHFonmS3ufM2pWFi&#xA;9mPrUVi9xH6zhSeEpUkUjDITy/yczsmUyj6QS9v2x7T4Z4TixXchuTtQ6/qepW/mvRr+6S20i8td&#xA;UkNfWW1uYJGiVePxOoflx+MVoD223zG8IgXKx8HheMHluxX87tf1fRPJpvNJmkt7k3EMZuYmI9NG&#xA;bkxNPEoq/Tm07E08MuepixR273L0kBLJR7lT8n/O+teZvLyS63HS95SehdIgSOeKLgrN8JoHV3od&#xA;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&#xA;f//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:instanceID>
            <stRef:documentID>xmp.did:f2dc8929-16d6-cc4f-a44c-9f8ea8746a5d</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:22c32bc7-c7d8-6845-9a2a-19cae6f2b628</stEvt:instanceID>
                  <stEvt:when>2018-12-19T11:21:09+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>400.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=216 G=137 B=43</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>216</xmpG:red>
                           <xmpG:green>137</xmpG:green>
                           <xmpG:blue>43</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=180 B=42</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>180</xmpG:green>
                           <xmpG:blue>42</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=232 G=162 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>232</xmpG:red>
                           <xmpG:green>162</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=238 G=173 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>238</xmpG:red>
                           <xmpG:green>173</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=253 G=215 B=98</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>253</xmpG:red>
                           <xmpG:green>215</xmpG:green>
                           <xmpG:blue>98</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=1 G=200 B=239</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>1</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>239</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=119 B=184</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>119</xmpG:green>
                           <xmpG:blue>184</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=178 G=211 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>178</xmpG:red>
                           <xmpG:green>211</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=196 G=217 B=232</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>196</xmpG:red>
                           <xmpG:green>217</xmpG:green>
                           <xmpG:blue>232</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=17 G=37 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>17</xmpG:red>
                           <xmpG:green>37</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=20 B=207</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>207</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=114 G=27 B=213</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>114</xmpG:red>
                           <xmpG:green>27</xmpG:green>
                           <xmpG:blue>213</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=126 G=35 B=220</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>126</xmpG:red>
                           <xmpG:green>35</xmpG:green>
                           <xmpG:blue>220</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=138 G=42 B=227</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>138</xmpG:red>
                           <xmpG:green>42</xmpG:green>
                           <xmpG:blue>227</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=194 G=133 B=249</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>194</xmpG:red>
                           <xmpG:green>133</xmpG:green>
                           <xmpG:blue>249</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=210 G=159 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>210</xmpG:red>
                           <xmpG:green>159</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=152 G=59 B=233</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>152</xmpG:red>
                           <xmpG:green>59</xmpG:green>
                           <xmpG:blue>233</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=180 G=94 B=244</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>180</xmpG:red>
                           <xmpG:green>94</xmpG:green>
                           <xmpG:blue>244</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=234 B=234</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>234</xmpG:green>
                           <xmpG:blue>234</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -400 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 400 li
600 400 li
600 0 li
cp
clp
361.383 182.673 mo
375.989 174.24 li
361.383 165.808 li
346.776 174.24 li
332.17 182.673 li
346.776 191.106 li
361.383 199.539 li
375.989 191.106 li
361.383 182.673 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.147219 .0154116 0 0 cmyk
f
361.383 161.667 mo
361.383 99.8252 li
375.989 91.3926 li
375.989 153.234 li
361.383 161.667 li
cp
1 .866484 .240818 .0951247 cmyk
f
361.383 99.8252 mo
346.776 91.3926 li
346.776 153.234 li
361.383 161.667 li
361.383 99.8252 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
375.989 91.3926 mo
361.383 82.959 li
346.776 91.3926 li
361.383 99.8252 li
375.989 91.3926 li
cp
.147219 .0154116 0 0 cmyk
f
375.989 164.479 mo
361.383 156.046 li
361.383 161.667 li
375.989 170.101 li
375.989 164.479 li
cp
.451545 0 .836393 0 cmyk
f
346.776 170.101 mo
346.776 125.124 li
361.383 116.691 li
361.383 161.667 li
346.776 170.101 li
cp
.172946 .892424 1 .0698253 cmyk
f
346.776 125.124 mo
332.17 116.691 li
332.17 161.667 li
346.776 170.101 li
346.776 125.124 li
cp
.0920424 .8215 .999756 .0120546 cmyk
f
361.383 116.691 mo
346.776 108.259 li
332.17 116.691 li
346.776 125.124 li
361.383 116.691 li
cp
.0108949 .772579 .92517 0 cmyk
f
346.776 170.101 mo
346.776 125.124 li
361.383 116.691 li
361.383 161.667 li
346.776 170.101 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
346.776 125.124 mo
332.17 116.691 li
332.17 161.667 li
346.776 170.101 li
346.776 125.124 li
cp
.657221 .328313 0 0 cmyk
f
361.383 116.691 mo
346.776 108.259 li
332.17 116.691 li
346.776 125.124 li
361.383 116.691 li
cp
.147219 .0154116 0 0 cmyk
f
361.383 178.533 mo
361.383 153.234 li
375.989 144.802 li
375.989 170.101 li
361.383 178.533 li
cp
1 .866484 .240818 .0951247 cmyk
f
361.383 153.234 mo
346.776 144.802 li
346.776 170.101 li
361.383 178.533 li
361.383 153.234 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
375.989 144.802 mo
361.383 136.368 li
346.776 144.802 li
361.383 153.234 li
375.989 144.802 li
cp
.147219 .0154116 0 0 cmyk
f
-.000244141 0 mo
-.000244141 86.5703 li
7.89624 92.6133 18.4353 94.2598 27.905 90.6885 cv
75.7556 72.6406 li
83.573 69.6924 89.7429 63.5225 92.6912 55.7051 cv
110.739 7.85449 li
111.706 5.29102 112.281 2.64746 112.5 0 cv
-.000244141 0 li
cp
0 .912535 0 0 cmyk
f
80.8132 174.45 mo
80.8132 153.137 li
89.5681 153.137 li
89.5681 155.823 li
84.696 155.823 li
84.696 162.02 li
88.5906 162.02 li
88.5906 164.758 li
84.696 164.758 li
84.696 174.45 li
80.8132 174.45 li
cp
1 .866484 .240818 .0951247 cmyk
f
91.7273 174.45 mo
91.7273 153.137 li
95.5574 153.137 li
95.5574 174.45 li
91.7273 174.45 li
cp
f
98.8357 174.45 mo
98.8357 153.137 li
101.51 153.137 li
106.729 165.207 li
106.729 153.137 li
109.943 153.137 li
109.943 174.45 li
107.397 174.45 li
102.127 161.763 li
102.127 174.45 li
98.8357 174.45 li
cp
f
116.974 166.969 mo
119.828 166.969 li
118.401 158.214 li
116.974 166.969 li
cp
112.025 174.45 mo
116.357 153.137 li
120.407 153.137 li
124.726 174.45 li
121.114 174.45 li
120.253 169.501 li
116.563 169.501 li
115.689 174.45 li
112.025 174.45 li
cp
f
126.821 174.45 mo
126.821 153.137 li
129.495 153.137 li
134.715 165.207 li
134.715 153.137 li
137.928 153.137 li
137.928 174.45 li
135.383 174.45 li
130.112 161.763 li
130.112 174.45 li
126.821 174.45 li
cp
f
146.837 174.707 mo
145.92 174.707 145.11 174.592 144.407 174.36 cv
143.704 174.129 143.124 173.808 142.665 173.396 cv
142.207 172.984 141.834 172.475 141.547 171.866 cv
141.26 171.258 141.058 170.604 140.943 169.906 cv
140.827 169.208 140.769 168.421 140.769 167.547 cv
140.769 160.117 li
140.769 159.191 140.829 158.371 140.949 157.655 cv
141.069 156.939 141.27 156.275 141.553 155.663 cv
141.836 155.05 142.207 154.547 142.665 154.152 cv
143.124 153.758 143.702 153.449 144.401 153.227 cv
145.099 153.004 145.911 152.893 146.837 152.893 cv
147.899 152.893 148.807 153.034 149.562 153.316 cv
150.316 153.6 150.912 154.016 151.348 154.563 cv
151.786 155.112 152.103 155.753 152.301 156.485 cv
152.497 157.218 152.595 158.073 152.595 159.05 cv
152.595 160.875 li
148.855 160.875 li
148.855 159.063 li
148.855 158 148.8 157.284 148.688 156.916 cv
148.465 156.196 147.921 155.811 147.055 155.759 cv
146.849 155.759 li
146.524 155.759 146.239 155.798 145.995 155.875 cv
145.751 155.952 145.552 156.074 145.397 156.241 cv
145.243 156.408 145.118 156.586 145.024 156.774 cv
144.929 156.963 144.859 157.21 144.812 157.514 cv
144.764 157.818 144.735 158.099 144.722 158.355 cv
144.709 158.613 144.703 158.938 144.703 159.333 cv
144.703 168.356 li
144.703 169.608 144.859 170.499 145.172 171.031 cv
145.485 171.563 146.044 171.828 146.849 171.828 cv
147.124 171.828 147.366 171.796 147.576 171.731 cv
147.786 171.667 147.962 171.586 148.103 171.487 cv
148.244 171.389 148.364 171.247 148.463 171.063 cv
148.561 170.879 148.636 170.707 148.688 170.549 cv
148.739 170.391 148.778 170.17 148.803 169.887 cv
148.829 169.604 148.844 169.364 148.848 169.167 cv
148.852 168.97 148.855 168.7 148.855 168.356 cv
148.855 166.454 li
152.595 166.454 li
152.595 168.203 li
152.595 169 152.54 169.716 152.428 170.35 cv
152.317 170.983 152.127 171.579 151.856 172.137 cv
151.587 172.693 151.237 173.156 150.809 173.524 cv
150.381 173.894 149.832 174.183 149.164 174.393 cv
148.495 174.603 147.719 174.707 146.837 174.707 cv
cp
f
155.282 174.45 mo
155.282 153.137 li
164.204 153.137 li
164.204 155.875 li
159.165 155.875 li
159.165 161.994 li
163.149 161.994 li
163.149 164.731 li
159.165 164.731 li
159.165 171.764 li
164.268 171.764 li
164.268 174.45 li
155.282 174.45 li
cp
f
176.815 162.238 mo
177.754 162.238 li
178.901 162.238 179.718 161.994 180.202 161.505 cv
180.686 161.017 180.928 160.181 180.928 158.998 cv
180.928 157.858 180.719 157.043 180.299 156.55 cv
179.879 156.057 179.107 155.811 177.985 155.811 cv
176.815 155.811 li
176.815 162.238 li
cp
172.932 174.45 mo
172.932 153.137 li
177.817 153.137 li
178.94 153.137 179.904 153.229 180.71 153.413 cv
181.515 153.598 182.216 153.906 182.811 154.339 cv
183.407 154.771 183.853 155.358 184.148 156.1 cv
184.444 156.841 184.593 157.747 184.593 158.818 cv
184.593 160.155 184.393 161.248 183.994 162.097 cv
183.595 162.945 182.938 163.562 182.021 163.947 cv
184.977 174.45 li
181.083 174.45 li
178.538 164.719 li
176.815 164.719 li
176.815 174.45 li
172.932 174.45 li
cp
f
187.535 174.45 mo
187.535 153.137 li
196.457 153.137 li
196.457 155.875 li
191.418 155.875 li
191.418 161.994 li
195.402 161.994 li
195.402 164.731 li
191.418 164.731 li
191.418 171.764 li
196.521 171.764 li
196.521 174.45 li
187.535 174.45 li
cp
f
202.64 162.199 mo
203.887 162.199 li
204.984 162.199 205.725 161.983 206.111 161.55 cv
206.497 161.117 206.689 160.322 206.689 159.166 cv
206.689 158.506 206.664 157.996 206.612 157.636 cv
206.561 157.276 206.441 156.948 206.253 156.652 cv
206.063 156.356 205.783 156.153 205.41 156.042 cv
205.038 155.931 204.534 155.875 203.9 155.875 cv
202.64 155.875 li
202.64 162.199 li
cp
198.758 174.45 mo
198.758 153.137 li
204.889 153.137 li
208.523 153.137 210.341 155.155 210.341 159.191 cv
210.341 161.171 209.844 162.622 208.849 163.543 cv
207.855 164.464 206.454 164.925 204.645 164.925 cv
202.64 164.925 li
202.64 174.45 li
198.758 174.45 li
cp
f
217.237 171.661 mo
217.508 171.772 217.831 171.828 218.208 171.828 cv
218.585 171.828 218.906 171.772 219.172 171.661 cv
219.437 171.55 219.649 171.403 219.808 171.224 cv
219.967 171.044 220.091 170.808 220.181 170.517 cv
220.271 170.226 220.331 169.934 220.361 169.643 cv
220.391 169.352 220.406 169.004 220.406 168.602 cv
220.406 158.921 li
220.406 158.407 220.381 157.979 220.329 157.636 cv
220.277 157.293 220.177 156.97 220.027 156.665 cv
219.877 156.361 219.652 156.134 219.352 155.984 cv
219.052 155.834 218.671 155.759 218.208 155.759 cv
217.745 155.759 217.361 155.834 217.057 155.984 cv
216.753 156.134 216.528 156.361 216.383 156.665 cv
216.236 156.97 216.138 157.293 216.087 157.636 cv
216.035 157.979 216.01 158.407 216.01 158.921 cv
216.01 168.602 li
216.01 169.004 216.024 169.352 216.054 169.643 cv
216.085 169.934 216.144 170.226 216.234 170.517 cv
216.325 170.808 216.447 171.044 216.601 171.224 cv
216.756 171.403 216.968 171.55 217.237 171.661 cv
cp
218.208 174.707 mo
216.013 174.707 214.441 174.111 213.49 172.921 cv
212.539 171.729 212.063 169.985 212.063 167.688 cv
212.063 159.821 li
212.063 158.69 212.17 157.709 212.385 156.877 cv
212.598 156.046 212.944 155.326 213.42 154.718 cv
213.895 154.109 214.531 153.653 215.328 153.349 cv
216.126 153.045 217.085 152.893 218.208 152.893 cv
220.393 152.893 221.964 153.479 222.919 154.653 cv
223.875 155.828 224.352 157.55 224.352 159.821 cv
224.352 167.688 li
224.352 168.803 224.243 169.782 224.025 170.626 cv
223.806 171.47 223.459 172.203 222.983 172.824 cv
222.508 173.445 221.872 173.915 221.074 174.231 cv
220.277 174.549 219.322 174.707 218.208 174.707 cv
cp
f
231.076 162.238 mo
232.014 162.238 li
233.162 162.238 233.978 161.994 234.463 161.505 cv
234.947 161.017 235.189 160.181 235.189 158.998 cv
235.189 157.858 234.979 157.043 234.559 156.55 cv
234.139 156.057 233.368 155.811 232.246 155.811 cv
231.076 155.811 li
231.076 162.238 li
cp
227.193 174.45 mo
227.193 153.137 li
232.078 153.137 li
233.201 153.137 234.165 153.229 234.97 153.413 cv
235.776 153.598 236.476 153.906 237.072 154.339 cv
237.668 154.771 238.114 155.358 238.409 156.1 cv
238.705 156.841 238.853 157.747 238.853 158.818 cv
238.853 160.155 238.654 161.248 238.255 162.097 cv
237.856 162.945 237.199 163.562 236.282 163.947 cv
239.238 174.45 li
235.344 174.45 li
232.799 164.719 li
231.076 164.719 li
231.076 174.45 li
227.193 174.45 li
cp
f
243.88 174.45 mo
243.88 156.003 li
240.305 156.003 li
240.305 153.137 li
251.219 153.137 li
251.219 156.003 li
247.761 156.003 li
247.761 174.45 li
243.88 174.45 li
cp
f
176.498 253.333 mo
92.6609 253.333 li
86.2 253.333 80.9626 248.096 80.9626 241.635 cv
80.9626 235.174 86.2 229.937 92.6609 229.937 cv
176.498 229.937 li
182.959 229.937 188.196 235.174 188.196 241.635 cv
188.196 248.096 182.959 253.333 176.498 253.333 cv
cp
0 .912535 0 0 cmyk
f
109.014 246.844 mo
109.014 238.298 li
107.359 238.298 li
107.359 236.97 li
112.415 236.97 li
112.415 238.298 li
110.813 238.298 li
110.813 246.844 li
109.014 246.844 li
cp
0 0 0 0 cmyk
f
115 241.187 mo
115.434 241.187 li
115.967 241.187 116.344 241.073 116.569 240.847 cv
116.793 240.62 116.905 240.233 116.905 239.686 cv
116.905 239.157 116.808 238.779 116.614 238.551 cv
116.419 238.322 116.061 238.208 115.542 238.208 cv
115 238.208 li
115 241.187 li
cp
113.201 246.844 mo
113.201 236.97 li
115.465 236.97 li
115.984 236.97 116.43 237.013 116.804 237.098 cv
117.177 237.184 117.502 237.326 117.778 237.526 cv
118.053 237.728 118.26 237.999 118.397 238.343 cv
118.534 238.686 118.602 239.105 118.602 239.602 cv
118.602 240.222 118.51 240.728 118.326 241.121 cv
118.141 241.514 117.837 241.8 117.412 241.979 cv
118.781 246.844 li
116.977 246.844 li
115.798 242.336 li
115 242.336 li
115 246.844 li
113.201 246.844 li
cp
f
121.336 246.844 mo
121.336 243.086 li
119.323 236.97 li
121.003 236.97 li
122.223 240.9 li
123.39 236.97 li
125.052 236.97 li
123.051 243.086 li
123.051 246.844 li
121.336 246.844 li
cp
f
128.941 246.844 mo
128.941 236.97 li
130.716 236.97 li
130.716 246.844 li
128.941 246.844 li
cp
f
133.199 246.844 mo
133.199 238.298 li
131.544 238.298 li
131.544 236.97 li
136.599 236.97 li
136.599 238.298 li
134.998 238.298 li
134.998 246.844 li
133.199 246.844 li
cp
f
140.363 246.844 mo
140.363 236.97 li
141.602 236.97 li
144.02 242.562 li
144.02 236.97 li
145.509 236.97 li
145.509 246.844 li
144.33 246.844 li
141.887 240.966 li
141.887 246.844 li
140.363 246.844 li
cp
f
149.222 245.552 mo
149.347 245.604 149.498 245.629 149.673 245.629 cv
149.846 245.629 149.996 245.604 150.119 245.552 cv
150.242 245.5 150.341 245.433 150.414 245.349 cv
150.487 245.266 150.545 245.156 150.587 245.021 cv
150.628 244.887 150.656 244.751 150.67 244.616 cv
150.683 244.481 150.69 244.32 150.69 244.134 cv
150.69 239.649 li
150.69 239.411 150.678 239.213 150.655 239.054 cv
150.631 238.896 150.585 238.745 150.514 238.604 cv
150.445 238.464 150.342 238.358 150.202 238.289 cv
150.063 238.22 149.886 238.185 149.673 238.185 cv
149.458 238.185 149.28 238.22 149.139 238.289 cv
148.998 238.358 148.894 238.464 148.827 238.604 cv
148.759 238.745 148.714 238.896 148.689 239.054 cv
148.666 239.213 148.654 239.411 148.654 239.649 cv
148.654 244.134 li
148.654 244.32 148.661 244.481 148.675 244.616 cv
148.688 244.751 148.717 244.887 148.758 245.021 cv
148.8 245.156 148.856 245.266 148.927 245.349 cv
148.999 245.433 149.097 245.5 149.222 245.552 cv
cp
149.673 246.963 mo
148.656 246.963 147.927 246.687 147.486 246.135 cv
147.046 245.583 146.826 244.775 146.826 243.711 cv
146.826 240.066 li
146.826 239.542 146.875 239.088 146.974 238.703 cv
147.074 238.317 147.233 237.984 147.454 237.702 cv
147.675 237.42 147.969 237.209 148.339 237.068 cv
148.708 236.927 149.152 236.856 149.673 236.856 cv
150.684 236.856 151.412 237.129 151.855 237.673 cv
152.298 238.217 152.519 239.015 152.519 240.066 cv
152.519 243.711 li
152.519 244.228 152.469 244.681 152.367 245.072 cv
152.265 245.463 152.105 245.803 151.885 246.091 cv
151.664 246.378 151.37 246.596 151 246.742 cv
150.631 246.89 150.188 246.963 149.673 246.963 cv
cp
f
154.907 246.844 mo
153.496 236.97 li
155.009 236.97 li
155.818 243.336 li
156.872 236.97 li
158.081 236.97 li
159.159 243.342 li
159.969 236.97 li
161.452 236.97 li
160.041 246.844 li
158.605 246.844 li
157.492 240.251 li
156.384 246.844 li
154.907 246.844 li
cp
f
84.8727 200.352 mo
81.6911 200.352 li
81.6911 191.966 li
82.4851 191.966 li
82.4851 199.761 li
84.8727 199.761 li
84.8727 200.352 li
.472602 .264286 .0650339 0 cmyk
f
86.987 200.448 mo
86.6804 200.448 86.4225 200.399 86.2136 200.302 cv
86.0047 200.204 85.8396 200.056 85.7205 199.856 cv
85.6003 199.658 85.5154 199.425 85.4645 199.156 cv
85.4138 198.889 85.3894 198.565 85.3894 198.187 cv
85.3894 196.528 li
85.3894 195.767 85.5066 195.2 85.7429 194.829 cv
85.9793 194.458 86.3932 194.273 86.987 194.273 cv
87.5838 194.273 87.9998 194.457 88.2341 194.826 cv
88.4685 195.195 88.5856 195.763 88.5856 196.528 cv
88.5856 198.187 li
88.5856 198.565 88.5602 198.889 88.5095 199.156 cv
88.4597 199.425 88.3738 199.658 88.2546 199.856 cv
88.1346 200.056 87.9704 200.204 87.7614 200.302 cv
87.5525 200.399 87.2937 200.448 86.987 200.448 cv
86.987 194.839 mo
86.8592 194.839 86.7479 194.857 86.6531 194.89 cv
86.5594 194.924 86.4813 194.978 86.4206 195.054 cv
86.2741 195.297 li
86.237 195.383 86.2088 195.495 86.1902 195.633 cv
86.1717 195.772 86.16 195.902 86.155 196.025 cv
86.1502 196.148 86.1472 196.303 86.1472 196.488 cv
86.1472 198.229 li
86.1472 198.414 86.1502 198.568 86.155 198.691 cv
86.16 198.814 86.1717 198.944 86.1902 199.083 cv
86.2088 199.222 86.237 199.333 86.2741 199.419 cv
86.4206 199.662 li
86.4813 199.738 86.5594 199.793 86.6531 199.826 cv
86.7479 199.86 86.8592 199.877 86.987 199.877 cv
87.1395 199.877 87.2673 199.85 87.3718 199.794 cv
87.4764 199.738 87.5584 199.668 87.617 199.584 cv
87.6755 199.499 87.7204 199.38 87.7508 199.225 cv
87.781 199.069 87.8005 198.921 87.8094 198.779 cv
87.8181 198.638 87.822 198.454 87.822 198.229 cv
87.822 196.488 li
87.822 196.263 87.8181 196.078 87.8094 195.936 cv
87.8005 195.795 87.781 195.646 87.7508 195.491 cv
87.7204 195.337 87.6755 195.217 87.617 195.133 cv
87.5584 195.048 87.4764 194.978 87.3718 194.923 cv
87.2673 194.867 87.1395 194.839 86.987 194.839 cv
f
90.448 200.352 mo
89.6892 200.352 li
89.6892 194.363 li
90.448 194.363 li
90.448 195.188 li
90.6296 194.885 90.8426 194.66 91.0877 194.516 cv
91.3318 194.37 91.5789 194.298 91.8288 194.298 cv
91.9596 194.303 li
91.9596 195.122 li
91.8522 195.079 91.7303 195.057 91.5954 195.057 cv
91.1101 195.057 90.7272 195.289 90.448 195.755 cv
90.448 200.352 li
f
94.2214 200.448 mo
93.6482 200.448 93.2352 200.271 92.9822 199.918 cv
92.7293 199.563 92.6033 198.958 92.6033 198.102 cv
92.6033 196.589 li
92.6033 196.006 92.6629 195.543 92.782 195.201 cv
92.9022 194.858 93.0779 194.618 93.3083 194.48 cv
93.5398 194.342 93.8454 194.273 94.2264 194.273 cv
94.4793 194.273 94.695 194.306 94.8737 194.371 cv
95.0525 194.437 95.2009 194.53 95.3191 194.652 cv
95.4373 194.773 95.531 194.937 95.5994 195.146 cv
95.6688 195.352 95.7165 195.582 95.7439 195.833 cv
95.7712 196.084 95.784 196.387 95.784 196.741 cv
95.779 197.282 li
93.361 197.282 li
93.361 198.178 li
93.361 198.798 93.4216 199.236 93.5408 199.492 cv
93.6608 199.749 93.8856 199.877 94.2166 199.877 cv
94.4793 199.877 94.6813 199.794 94.823 199.627 cv
94.9646 199.46 95.0358 199.157 95.0358 198.719 cv
95.0358 198.304 li
95.779 198.304 li
95.779 198.638 li
95.779 199.218 95.658 199.665 95.4148 199.978 cv
95.1726 200.292 94.7742 200.448 94.2214 200.448 cv
94.2214 194.839 mo
93.9012 194.839 93.6775 194.95 93.5515 195.173 cv
93.4246 195.395 93.361 195.818 93.361 196.442 cv
93.361 196.848 li
95.0358 196.848 li
95.0358 196.351 li
95.0358 196.143 95.031 195.969 95.0202 195.83 cv
95.0104 195.692 94.9889 195.555 94.9577 195.418 cv
94.9256 195.282 94.8807 195.175 94.823 195.097 cv
94.7663 195.019 94.6863 194.957 94.5856 194.91 cv
94.4841 194.862 94.363 194.839 94.2214 194.839 cv
f
102.365 200.352 mo
101.646 200.352 li
101.646 195.648 li
101.646 195.321 101.596 195.094 101.495 194.966 cv
101.393 194.838 101.249 194.773 101.059 194.773 cv
100.679 194.78 100.303 194.987 99.9314 195.395 cv
99.9382 195.497 99.9421 195.574 99.9421 195.628 cv
99.9421 200.352 li
99.2342 200.352 li
99.2342 195.648 li
99.2342 195.321 99.1814 195.094 99.0769 194.966 cv
98.9724 194.838 98.8259 194.773 98.6365 194.773 cv
98.2556 194.78 97.8835 194.987 97.5193 195.395 cv
97.5193 200.352 li
96.8054 200.352 li
96.8054 194.363 li
97.5193 194.363 li
97.5193 194.971 li
97.9206 194.495 98.3903 194.258 98.9304 194.258 cv
99.4294 194.258 99.7429 194.521 99.8709 195.047 cv
100.289 194.521 100.782 194.258 101.348 194.258 cv
101.645 194.258 101.888 194.364 102.079 194.579 cv
102.269 194.793 102.365 195.143 102.365 195.628 cv
102.365 200.352 li
f
106.436 200.352 mo
105.678 200.352 li
105.678 194.363 li
106.436 194.363 li
106.436 200.352 li
106.442 193.539 mo
105.678 193.539 li
105.678 192.508 li
106.442 192.508 li
106.442 193.539 li
f
108.47 202.325 mo
107.712 202.325 li
107.712 194.363 li
108.47 194.363 li
108.47 194.864 li
108.791 194.47 109.174 194.273 109.618 194.273 cv
109.841 194.273 110.036 194.318 110.203 194.409 cv
110.369 194.5 110.501 194.618 110.597 194.764 cv
110.693 194.908 110.77 195.089 110.83 195.305 cv
110.888 195.521 110.928 195.733 110.946 195.944 cv
110.965 196.155 110.973 196.394 110.973 196.66 cv
110.973 197.925 li
110.973 198.241 110.961 198.524 110.933 198.774 cv
110.906 199.024 110.859 199.256 110.792 199.47 cv
110.724 199.684 110.636 199.861 110.526 200.001 cv
110.417 200.141 110.279 200.251 110.114 200.33 cv
109.949 200.409 109.757 200.448 109.537 200.448 cv
109.149 200.448 108.794 200.258 108.47 199.877 cv
108.47 202.325 li
109.401 194.869 mo
109.094 194.869 108.784 195.023 108.47 195.33 cv
108.47 199.412 li
108.747 199.702 109.062 199.847 109.416 199.847 cv
109.551 199.847 109.666 199.819 109.76 199.764 cv
109.854 199.708 109.931 199.632 109.99 199.536 cv
110.049 199.439 110.095 199.309 110.129 199.143 cv
110.163 198.979 110.185 198.802 110.197 198.615 cv
110.209 198.428 110.216 198.201 110.216 197.935 cv
110.216 196.66 li
110.216 196.02 110.161 195.561 110.053 195.284 cv
109.945 195.008 109.728 194.869 109.401 194.869 cv
f
113.401 200.448 mo
112.926 200.448 112.546 200.295 112.261 199.988 cv
111.975 199.682 111.813 199.267 111.772 198.744 cv
112.41 198.552 li
112.45 199.007 112.554 199.342 112.723 199.556 cv
112.892 199.771 113.128 199.877 113.431 199.877 cv
113.695 199.877 113.902 199.8 114.053 199.645 cv
114.199 199.496 114.271 199.297 114.271 199.048 cv
114.271 199.012 li
114.261 198.614 114.018 198.217 113.543 197.818 cv
112.728 197.125 li
112.442 196.886 112.233 196.651 112.101 196.422 cv
111.973 196.2 111.909 195.94 111.909 195.644 cv
111.909 195.205 112.041 194.866 112.304 194.627 cv
112.56 194.391 112.906 194.273 113.341 194.273 cv
113.782 194.273 114.122 194.414 114.36 194.697 cv
114.597 194.98 114.73 195.363 114.757 195.846 cv
114.22 196.022 li
114.197 195.621 114.115 195.324 113.975 195.13 cv
113.836 194.937 113.634 194.839 113.371 194.839 cv
113.134 194.839 112.946 194.905 112.804 195.036 cv
112.666 195.165 112.597 195.337 112.597 195.553 cv
112.597 195.748 112.633 195.916 112.703 196.056 cv
112.774 196.195 112.904 196.347 113.093 196.509 cv
113.937 197.267 li
114.09 197.398 114.213 197.514 114.309 197.613 cv
114.405 197.713 114.508 197.836 114.615 197.982 cv
114.723 198.13 114.804 198.288 114.855 198.458 cv
114.908 198.629 114.935 198.812 114.939 199.007 cv
114.939 199.466 114.801 199.82 114.524 200.072 cv
114.248 200.323 113.874 200.448 113.401 200.448 cv
f
116.669 200.443 mo
116.368 200.443 116.139 200.332 115.98 200.109 cv
115.822 199.887 115.743 199.572 115.743 199.164 cv
115.743 194.363 li
116.507 194.363 li
116.507 199.007 li
116.507 199.311 116.552 199.526 116.643 199.654 cv
116.734 199.782 116.878 199.847 117.073 199.847 cv
117.414 199.847 117.767 199.651 118.135 199.26 cv
118.135 194.363 li
118.894 194.363 li
118.894 200.352 li
118.135 200.352 li
118.135 199.689 li
117.69 200.192 117.201 200.443 116.669 200.443 cv
f
125.611 200.352 mo
124.892 200.352 li
124.892 195.648 li
124.892 195.321 124.841 195.094 124.741 194.966 cv
124.639 194.838 124.495 194.773 124.305 194.773 cv
123.924 194.78 123.549 194.987 123.178 195.395 cv
123.184 195.497 123.188 195.574 123.188 195.628 cv
123.188 200.352 li
122.48 200.352 li
122.48 195.648 li
122.48 195.321 122.428 195.094 122.323 194.966 cv
122.218 194.838 122.072 194.773 121.883 194.773 cv
121.502 194.78 121.13 194.987 120.765 195.395 cv
120.765 200.352 li
120.051 200.352 li
120.051 194.363 li
120.765 194.363 li
120.765 194.971 li
121.167 194.495 121.636 194.258 122.177 194.258 cv
122.676 194.258 122.989 194.521 123.117 195.047 cv
123.535 194.521 124.028 194.258 124.595 194.258 cv
124.891 194.258 125.135 194.364 125.325 194.579 cv
125.515 194.793 125.611 195.143 125.611 195.628 cv
125.611 200.352 li
f
130.174 200.448 mo
129.658 200.448 129.288 200.255 129.063 199.867 cv
128.839 199.479 128.727 198.835 128.727 197.935 cv
128.727 196.827 li
128.727 196.496 128.739 196.207 128.762 195.957 cv
128.786 195.707 128.83 195.474 128.893 195.254 cv
128.958 195.035 129.042 194.857 129.146 194.718 cv
129.251 194.579 129.386 194.471 129.552 194.392 cv
129.716 194.312 129.912 194.273 130.138 194.273 cv
130.533 194.276 130.884 194.449 131.195 194.794 cv
131.195 191.966 li
131.954 191.966 li
131.954 200.352 li
131.195 200.352 li
131.195 199.928 li
130.891 200.271 130.551 200.445 130.174 200.448 cv
130.305 194.869 mo
129.984 194.869 129.768 195.004 129.655 195.272 cv
129.542 195.54 129.485 195.977 129.485 196.584 cv
129.485 197.995 li
129.485 198.649 129.543 199.122 129.658 199.412 cv
129.772 199.702 129.995 199.847 130.325 199.847 cv
130.619 199.847 130.909 199.715 131.195 199.452 cv
131.195 195.294 li
130.891 195.011 130.594 194.869 130.305 194.869 cv
f
134.599 200.448 mo
134.293 200.448 134.035 200.399 133.826 200.302 cv
133.617 200.204 133.452 200.056 133.333 199.856 cv
133.213 199.658 133.128 199.425 133.077 199.156 cv
133.026 198.889 133.002 198.565 133.002 198.187 cv
133.002 196.528 li
133.002 195.767 133.119 195.2 133.355 194.829 cv
133.592 194.458 134.006 194.273 134.599 194.273 cv
135.196 194.273 135.612 194.457 135.846 194.826 cv
136.081 195.195 136.198 195.763 136.198 196.528 cv
136.198 198.187 li
136.198 198.565 136.173 198.889 136.122 199.156 cv
136.072 199.425 135.986 199.658 135.867 199.856 cv
135.747 200.056 135.583 200.204 135.374 200.302 cv
135.165 200.399 134.906 200.448 134.599 200.448 cv
134.599 194.839 mo
134.471 194.839 134.36 194.857 134.265 194.89 cv
134.172 194.924 134.094 194.978 134.033 195.054 cv
133.886 195.297 li
133.849 195.383 133.821 195.495 133.802 195.633 cv
133.784 195.772 133.772 195.902 133.767 196.025 cv
133.763 196.148 133.76 196.303 133.76 196.488 cv
133.76 198.229 li
133.76 198.414 133.763 198.568 133.767 198.691 cv
133.772 198.814 133.784 198.944 133.802 199.083 cv
133.821 199.222 133.849 199.333 133.886 199.419 cv
134.033 199.662 li
134.094 199.738 134.172 199.793 134.265 199.826 cv
134.36 199.86 134.471 199.877 134.599 199.877 cv
134.752 199.877 134.88 199.85 134.984 199.794 cv
135.089 199.738 135.171 199.668 135.229 199.584 cv
135.288 199.499 135.333 199.38 135.363 199.225 cv
135.393 199.069 135.413 198.921 135.422 198.779 cv
135.43 198.638 135.434 198.454 135.434 198.229 cv
135.434 196.488 li
135.434 196.263 135.43 196.078 135.422 195.936 cv
135.413 195.795 135.393 195.646 135.363 195.491 cv
135.333 195.337 135.288 195.217 135.229 195.133 cv
135.171 195.048 135.089 194.978 134.984 194.923 cv
134.88 194.867 134.752 194.839 134.599 194.839 cv
f
138.109 200.352 mo
137.345 200.352 li
137.345 191.966 li
138.109 191.966 li
138.109 200.352 li
f
140.82 200.448 mo
140.513 200.448 140.256 200.399 140.047 200.302 cv
139.838 200.204 139.673 200.056 139.553 199.856 cv
139.433 199.658 139.348 199.425 139.298 199.156 cv
139.247 198.889 139.222 198.565 139.222 198.187 cv
139.222 196.528 li
139.222 195.767 139.34 195.2 139.576 194.829 cv
139.812 194.458 140.226 194.273 140.82 194.273 cv
141.417 194.273 141.833 194.457 142.067 194.826 cv
142.301 195.195 142.419 195.763 142.419 196.528 cv
142.419 198.187 li
142.419 198.565 142.393 198.889 142.342 199.156 cv
142.293 199.425 142.207 199.658 142.088 199.856 cv
141.968 200.056 141.804 200.204 141.594 200.302 cv
141.385 200.399 141.127 200.448 140.82 200.448 cv
140.82 194.839 mo
140.692 194.839 140.581 194.857 140.486 194.89 cv
140.392 194.924 140.314 194.978 140.254 195.054 cv
140.107 195.297 li
140.07 195.383 140.042 195.495 140.023 195.633 cv
140.005 195.772 139.993 195.902 139.988 196.025 cv
139.983 196.148 139.98 196.303 139.98 196.488 cv
139.98 198.229 li
139.98 198.414 139.983 198.568 139.988 198.691 cv
139.993 198.814 140.005 198.944 140.023 199.083 cv
140.042 199.222 140.07 199.333 140.107 199.419 cv
140.254 199.662 li
140.314 199.738 140.392 199.793 140.486 199.826 cv
140.581 199.86 140.692 199.877 140.82 199.877 cv
140.972 199.877 141.1 199.85 141.205 199.794 cv
141.309 199.738 141.391 199.668 141.45 199.584 cv
141.509 199.499 141.553 199.38 141.584 199.225 cv
141.614 199.069 141.633 198.921 141.642 198.779 cv
141.651 198.638 141.655 198.454 141.655 198.229 cv
141.655 196.488 li
141.655 196.263 141.651 196.078 141.642 195.936 cv
141.633 195.795 141.614 195.646 141.584 195.491 cv
141.553 195.337 141.509 195.217 141.45 195.133 cv
141.391 195.048 141.309 194.978 141.205 194.923 cv
141.1 194.867 140.972 194.839 140.82 194.839 cv
f
144.28 200.352 mo
143.521 200.352 li
143.521 194.363 li
144.28 194.363 li
144.28 195.188 li
144.462 194.885 144.675 194.66 144.92 194.516 cv
145.164 194.37 145.411 194.298 145.661 194.298 cv
145.792 194.303 li
145.792 195.122 li
145.684 195.079 145.562 195.057 145.427 195.057 cv
144.942 195.057 144.559 195.289 144.28 195.755 cv
144.28 200.352 li
f
150.031 200.448 mo
149.555 200.448 149.176 200.295 148.89 199.988 cv
148.605 199.682 148.443 199.267 148.402 198.744 cv
149.04 198.552 li
149.08 199.007 149.184 199.342 149.353 199.556 cv
149.522 199.771 149.758 199.877 150.061 199.877 cv
150.325 199.877 150.532 199.8 150.683 199.645 cv
150.829 199.496 150.901 199.297 150.901 199.048 cv
150.901 199.012 li
150.891 198.614 150.648 198.217 150.173 197.818 cv
149.358 197.125 li
149.072 196.886 148.863 196.651 148.731 196.422 cv
148.603 196.2 148.539 195.94 148.539 195.644 cv
148.539 195.205 148.671 194.866 148.933 194.627 cv
149.19 194.391 149.536 194.273 149.97 194.273 cv
150.412 194.273 150.752 194.414 150.99 194.697 cv
151.227 194.98 151.36 195.363 151.387 195.846 cv
150.85 196.022 li
150.827 195.621 150.745 195.324 150.605 195.13 cv
150.466 194.937 150.263 194.839 150.001 194.839 cv
149.764 194.839 149.576 194.905 149.434 195.036 cv
149.296 195.165 149.227 195.337 149.227 195.553 cv
149.227 195.748 149.262 195.916 149.333 196.056 cv
149.404 196.195 149.534 196.347 149.722 196.509 cv
150.567 197.267 li
150.719 197.398 150.842 197.514 150.939 197.613 cv
151.035 197.713 151.137 197.836 151.245 197.982 cv
151.353 198.13 151.433 198.288 151.485 198.458 cv
151.538 198.629 151.565 198.812 151.569 199.007 cv
151.569 199.466 151.43 199.82 151.154 200.072 cv
150.878 200.323 150.504 200.448 150.031 200.448 cv
f
153.262 200.352 mo
152.505 200.352 li
152.505 194.363 li
153.262 194.363 li
153.262 200.352 li
153.268 193.539 mo
152.505 193.539 li
152.505 192.508 li
153.268 192.508 li
153.268 193.539 li
f
155.954 200.429 mo
155.546 200.429 155.264 200.316 155.109 200.092 cv
154.954 199.868 154.875 199.54 154.871 199.108 cv
154.871 194.869 li
154.148 194.869 li
154.148 194.363 li
154.871 194.363 li
154.871 192.513 li
155.63 192.513 li
155.63 194.363 li
156.627 194.363 li
156.627 194.869 li
155.63 194.869 li
155.63 199.037 li
155.63 199.341 155.666 199.549 155.736 199.662 cv
155.807 199.775 155.95 199.832 156.166 199.832 cv
156.304 199.832 156.446 199.818 156.592 199.791 cv
156.592 200.362 li
156.365 200.406 156.153 200.429 155.954 200.429 cv
f
160.582 200.448 mo
160.231 200.448 159.943 200.319 159.718 200.062 cv
159.491 199.804 159.379 199.484 159.379 199.104 cv
159.379 198.904 159.395 198.727 159.428 198.569 cv
159.463 198.413 159.526 198.266 159.619 198.127 cv
159.712 197.988 159.812 197.866 159.922 197.76 cv
160.032 197.654 160.187 197.541 160.389 197.421 cv
160.592 197.302 160.795 197.191 160.997 197.09 cv
161.199 196.989 161.464 196.866 161.791 196.721 cv
161.791 196.291 li
161.791 195.741 161.739 195.362 161.634 195.155 cv
161.53 194.948 161.334 194.844 161.048 194.844 cv
160.494 194.844 160.218 195.187 160.218 195.871 cv
160.218 196.089 li
159.469 196.063 li
159.469 195.966 159.47 195.904 159.474 195.881 cv
159.498 195.318 159.644 194.909 159.915 194.654 cv
160.184 194.4 160.575 194.273 161.088 194.273 cv
161.617 194.273 161.993 194.43 162.216 194.743 cv
162.438 195.057 162.549 195.56 162.549 196.25 cv
162.549 199.164 li
162.549 199.646 162.568 200.042 162.605 200.352 cv
161.932 200.352 li
161.821 199.523 li
161.73 199.786 161.576 200.006 161.358 200.183 cv
161.141 200.36 160.883 200.448 160.582 200.448 cv
161.791 197.222 mo
161.695 197.272 li
161.53 197.359 161.403 197.428 161.315 197.475 cv
161.227 197.521 161.123 197.581 161 197.651 cv
160.876 197.723 160.784 197.781 160.723 197.828 cv
160.513 198.001 li
160.342 198.19 li
160.233 198.395 li
160.157 198.641 li
160.143 198.727 160.136 198.821 160.136 198.926 cv
160.136 199.22 160.203 199.437 160.334 199.581 cv
160.466 199.725 160.631 199.796 160.83 199.796 cv
161.032 199.796 161.219 199.727 161.388 199.586 cv
161.559 199.446 161.693 199.28 161.791 199.088 cv
161.791 197.222 li
f
169.217 200.352 mo
168.498 200.352 li
168.498 195.648 li
168.498 195.321 168.447 195.094 168.346 194.966 cv
168.245 194.838 168.1 194.773 167.911 194.773 cv
167.53 194.78 167.154 194.987 166.783 195.395 cv
166.79 195.497 166.794 195.574 166.794 195.628 cv
166.794 200.352 li
166.086 200.352 li
166.086 195.648 li
166.086 195.321 166.033 195.094 165.928 194.966 cv
165.824 194.838 165.677 194.773 165.488 194.773 cv
165.107 194.78 164.735 194.987 164.371 195.395 cv
164.371 200.352 li
163.657 200.352 li
163.657 194.363 li
164.371 194.363 li
164.371 194.971 li
164.772 194.495 165.242 194.258 165.782 194.258 cv
166.281 194.258 166.594 194.521 166.722 195.047 cv
167.14 194.521 167.634 194.258 168.2 194.258 cv
168.497 194.258 168.74 194.364 168.93 194.579 cv
169.121 194.793 169.217 195.143 169.217 195.628 cv
169.217 200.352 li
f
171.837 200.448 mo
171.263 200.448 170.85 200.271 170.597 199.918 cv
170.344 199.563 170.218 198.958 170.218 198.102 cv
170.218 196.589 li
170.218 196.006 170.278 195.543 170.397 195.201 cv
170.517 194.858 170.693 194.618 170.924 194.48 cv
171.155 194.342 171.461 194.273 171.842 194.273 cv
172.094 194.273 172.31 194.306 172.489 194.371 cv
172.668 194.437 172.816 194.53 172.934 194.652 cv
173.052 194.773 173.146 194.937 173.215 195.146 cv
173.284 195.352 173.332 195.582 173.359 195.833 cv
173.386 196.084 173.399 196.387 173.399 196.741 cv
173.394 197.282 li
170.976 197.282 li
170.976 198.178 li
170.976 198.798 171.037 199.236 171.156 199.492 cv
171.276 199.749 171.501 199.877 171.832 199.877 cv
172.094 199.877 172.297 199.794 172.438 199.627 cv
172.58 199.46 172.651 199.157 172.651 198.719 cv
172.651 198.304 li
173.394 198.304 li
173.394 198.638 li
173.394 199.218 173.273 199.665 173.03 199.978 cv
172.788 200.292 172.389 200.448 171.837 200.448 cv
171.837 194.839 mo
171.516 194.839 171.293 194.95 171.167 195.173 cv
171.04 195.395 170.976 195.818 170.976 196.442 cv
170.976 196.848 li
172.651 196.848 li
172.651 196.351 li
172.651 196.143 172.646 195.969 172.636 195.83 cv
172.626 195.692 172.604 195.555 172.573 195.418 cv
172.541 195.282 172.496 195.175 172.438 195.097 cv
172.382 195.019 172.301 194.957 172.201 194.91 cv
172.099 194.862 171.978 194.839 171.837 194.839 cv
f
175.843 200.429 mo
175.434 200.429 175.153 200.316 174.998 200.092 cv
174.842 199.868 174.763 199.54 174.76 199.108 cv
174.76 194.869 li
174.037 194.869 li
174.037 194.363 li
174.76 194.363 li
174.76 192.513 li
175.518 192.513 li
175.518 194.363 li
176.515 194.363 li
176.515 194.869 li
175.518 194.869 li
175.518 199.037 li
175.518 199.341 175.554 199.549 175.625 199.662 cv
175.696 199.775 175.839 199.832 176.054 199.832 cv
176.193 199.832 176.335 199.818 176.48 199.791 cv
176.48 200.362 li
176.254 200.406 176.042 200.429 175.843 200.429 cv
f
177.411 201.561 mo
177.254 201.228 li
177.432 201.126 177.559 201.009 177.636 200.873 cv
177.712 200.738 177.75 200.565 177.75 200.352 cv
177.295 200.352 li
177.295 199.225 li
178.144 199.225 li
178.144 200.271 li
178.144 200.608 178.089 200.874 177.977 201.068 cv
177.866 201.262 177.677 201.427 177.411 201.561 cv
f
182.797 200.448 mo
182.524 200.448 182.29 200.408 182.094 200.327 cv
181.898 200.246 181.743 200.141 181.629 200.011 cv
181.514 199.881 181.424 199.71 181.358 199.498 cv
181.293 199.285 181.249 199.07 181.226 198.853 cv
181.205 198.636 181.194 198.378 181.194 198.081 cv
181.194 196.686 li
181.194 196.25 181.218 195.889 181.264 195.601 cv
181.311 195.313 181.395 195.065 181.514 194.859 cv
181.635 194.653 181.798 194.505 182.006 194.412 cv
182.213 194.319 182.475 194.273 182.792 194.273 cv
183.042 194.273 183.258 194.303 183.439 194.363 cv
183.622 194.425 183.769 194.508 183.882 194.614 cv
183.995 194.721 184.085 194.857 184.15 195.021 cv
184.216 195.187 184.261 195.361 184.287 195.545 cv
184.312 195.728 184.325 195.943 184.325 196.189 cv
184.325 196.473 li
183.622 196.473 li
183.622 196.189 li
183.622 195.677 183.561 195.324 183.439 195.13 cv
183.318 194.937 183.105 194.839 182.803 194.839 cv
182.458 194.839 182.23 194.961 182.119 195.206 cv
182.007 195.45 181.952 195.901 181.952 196.559 cv
181.952 198.238 li
181.952 198.852 182.012 199.278 182.132 199.518 cv
182.252 199.758 182.476 199.877 182.807 199.877 cv
182.949 199.877 183.068 199.856 183.167 199.816 cv
183.264 199.776 183.342 199.721 183.401 199.649 cv
183.461 199.579 183.507 199.481 183.541 199.356 cv
183.574 199.231 183.596 199.099 183.606 198.959 cv
183.617 198.819 183.622 198.643 183.622 198.431 cv
183.622 198.102 li
184.325 198.102 li
184.325 198.395 li
184.325 198.658 184.313 198.886 184.292 199.078 cv
184.269 199.271 184.226 199.456 184.16 199.637 cv
184.094 199.817 184.007 199.964 183.897 200.077 cv
183.788 200.189 183.64 200.28 183.455 200.348 cv
183.269 200.415 183.05 200.448 182.797 200.448 cv
f
186.818 200.448 mo
186.511 200.448 186.254 200.399 186.045 200.302 cv
185.836 200.204 185.671 200.056 185.552 199.856 cv
185.431 199.658 185.346 199.425 185.296 199.156 cv
185.245 198.889 185.22 198.565 185.22 198.187 cv
185.22 196.528 li
185.22 195.767 185.338 195.2 185.574 194.829 cv
185.81 194.458 186.224 194.273 186.818 194.273 cv
187.415 194.273 187.831 194.457 188.065 194.826 cv
188.3 195.195 188.417 195.763 188.417 196.528 cv
188.417 198.187 li
188.417 198.565 188.391 198.889 188.341 199.156 cv
188.291 199.425 188.205 199.658 188.086 199.856 cv
187.966 200.056 187.801 200.204 187.593 200.302 cv
187.384 200.399 187.125 200.448 186.818 200.448 cv
186.818 194.839 mo
186.69 194.839 186.579 194.857 186.484 194.89 cv
186.39 194.924 186.312 194.978 186.252 195.054 cv
186.105 195.297 li
186.068 195.383 186.04 195.495 186.021 195.633 cv
186.003 195.772 185.991 195.902 185.986 196.025 cv
185.981 196.148 185.978 196.303 185.978 196.488 cv
185.978 198.229 li
185.978 198.414 185.981 198.568 185.986 198.691 cv
185.991 198.814 186.003 198.944 186.021 199.083 cv
186.04 199.222 186.068 199.333 186.105 199.419 cv
186.252 199.662 li
186.312 199.738 186.39 199.793 186.484 199.826 cv
186.579 199.86 186.69 199.877 186.818 199.877 cv
186.971 199.877 187.098 199.85 187.203 199.794 cv
187.307 199.738 187.389 199.668 187.448 199.584 cv
187.507 199.499 187.551 199.38 187.582 199.225 cv
187.612 199.069 187.632 198.921 187.64 198.779 cv
187.649 198.638 187.653 198.454 187.653 198.229 cv
187.653 196.488 li
187.653 196.263 187.649 196.078 187.64 195.936 cv
187.632 195.795 187.612 195.646 187.582 195.491 cv
187.551 195.337 187.507 195.217 187.448 195.133 cv
187.389 195.048 187.307 194.978 187.203 194.923 cv
187.098 194.867 186.971 194.839 186.818 194.839 cv
f
192.579 200.352 mo
191.82 200.352 li
191.82 195.709 li
191.82 195.405 191.774 195.19 191.681 195.062 cv
191.589 194.934 191.444 194.869 191.249 194.869 cv
190.922 194.869 190.578 195.054 190.217 195.421 cv
190.217 200.352 li
189.458 200.352 li
189.458 194.363 li
190.217 194.363 li
190.217 194.986 li
190.659 194.511 191.139 194.273 191.659 194.273 cv
191.955 194.273 192.182 194.383 192.341 194.604 cv
192.5 194.825 192.579 195.14 192.579 195.547 cv
192.579 200.352 li
f
195.067 200.448 mo
194.592 200.448 194.212 200.295 193.926 199.988 cv
193.641 199.682 193.479 199.267 193.438 198.744 cv
194.076 198.552 li
194.116 199.007 194.22 199.342 194.389 199.556 cv
194.558 199.771 194.794 199.877 195.097 199.877 cv
195.361 199.877 195.568 199.8 195.719 199.645 cv
195.865 199.496 195.937 199.297 195.937 199.048 cv
195.937 199.012 li
195.927 198.614 195.684 198.217 195.209 197.818 cv
194.394 197.125 li
194.108 196.886 193.899 196.651 193.767 196.422 cv
193.639 196.2 193.575 195.94 193.575 195.644 cv
193.575 195.205 193.707 194.866 193.969 194.627 cv
194.226 194.391 194.572 194.273 195.007 194.273 cv
195.448 194.273 195.788 194.414 196.026 194.697 cv
196.263 194.98 196.396 195.363 196.423 195.846 cv
195.886 196.022 li
195.863 195.621 195.781 195.324 195.641 195.13 cv
195.502 194.937 195.3 194.839 195.037 194.839 cv
194.8 194.839 194.612 194.905 194.47 195.036 cv
194.332 195.165 194.263 195.337 194.263 195.553 cv
194.263 195.748 194.299 195.916 194.369 196.056 cv
194.44 196.195 194.57 196.347 194.759 196.509 cv
195.603 197.267 li
195.756 197.398 195.879 197.514 195.975 197.613 cv
196.071 197.713 196.174 197.836 196.281 197.982 cv
196.389 198.13 196.47 198.288 196.521 198.458 cv
196.574 198.629 196.601 198.812 196.605 199.007 cv
196.605 199.466 196.467 199.82 196.19 200.072 cv
195.914 200.323 195.54 200.448 195.067 200.448 cv
f
198.962 200.448 mo
198.388 200.448 197.975 200.271 197.722 199.918 cv
197.469 199.563 197.343 198.958 197.343 198.102 cv
197.343 196.589 li
197.343 196.006 197.403 195.543 197.522 195.201 cv
197.642 194.858 197.818 194.618 198.049 194.48 cv
198.28 194.342 198.586 194.273 198.967 194.273 cv
199.219 194.273 199.435 194.306 199.614 194.371 cv
199.793 194.437 199.941 194.53 200.059 194.652 cv
200.177 194.773 200.271 194.937 200.34 195.146 cv
200.409 195.352 200.457 195.582 200.484 195.833 cv
200.512 196.084 200.524 196.387 200.524 196.741 cv
200.519 197.282 li
198.101 197.282 li
198.101 198.178 li
198.101 198.798 198.162 199.236 198.281 199.492 cv
198.401 199.749 198.626 199.877 198.957 199.877 cv
199.219 199.877 199.422 199.794 199.563 199.627 cv
199.705 199.46 199.776 199.157 199.776 198.719 cv
199.776 198.304 li
200.519 198.304 li
200.519 198.638 li
200.519 199.218 200.398 199.665 200.155 199.978 cv
199.913 200.292 199.514 200.448 198.962 200.448 cv
198.962 194.839 mo
198.641 194.839 198.418 194.95 198.292 195.173 cv
198.165 195.395 198.101 195.818 198.101 196.442 cv
198.101 196.848 li
199.776 196.848 li
199.776 196.351 li
199.776 196.143 199.771 195.969 199.761 195.83 cv
199.751 195.692 199.729 195.555 199.698 195.418 cv
199.666 195.282 199.621 195.175 199.563 195.097 cv
199.507 195.019 199.426 194.957 199.326 194.91 cv
199.224 194.862 199.103 194.839 198.962 194.839 cv
f
203.038 200.448 mo
202.765 200.448 202.531 200.408 202.335 200.327 cv
202.139 200.246 201.984 200.141 201.87 200.011 cv
201.756 199.881 201.665 199.71 201.599 199.498 cv
201.534 199.285 201.49 199.07 201.468 198.853 cv
201.446 198.636 201.435 198.378 201.435 198.081 cv
201.435 196.686 li
201.435 196.25 201.459 195.889 201.506 195.601 cv
201.552 195.313 201.636 195.065 201.756 194.859 cv
201.876 194.653 202.039 194.505 202.247 194.412 cv
202.454 194.319 202.717 194.273 203.033 194.273 cv
203.283 194.273 203.499 194.303 203.68 194.363 cv
203.863 194.425 204.011 194.508 204.123 194.614 cv
204.236 194.721 204.326 194.857 204.391 195.021 cv
204.457 195.187 204.503 195.361 204.528 195.545 cv
204.554 195.728 204.566 195.943 204.566 196.189 cv
204.566 196.473 li
203.863 196.473 li
203.863 196.189 li
203.863 195.677 203.802 195.324 203.68 195.13 cv
203.559 194.937 203.346 194.839 203.044 194.839 cv
202.699 194.839 202.471 194.961 202.36 195.206 cv
202.249 195.45 202.193 195.901 202.193 196.559 cv
202.193 198.238 li
202.193 198.852 202.254 199.278 202.373 199.518 cv
202.493 199.758 202.718 199.877 203.049 199.877 cv
203.19 199.877 203.309 199.856 203.408 199.816 cv
203.506 199.776 203.584 199.721 203.642 199.649 cv
203.702 199.579 203.748 199.481 203.782 199.356 cv
203.815 199.231 203.838 199.099 203.847 198.959 cv
203.858 198.819 203.863 198.643 203.863 198.431 cv
203.863 198.102 li
204.566 198.102 li
204.566 198.395 li
204.566 198.658 204.554 198.886 204.533 199.078 cv
204.511 199.271 204.468 199.456 204.401 199.637 cv
204.336 199.817 204.248 199.964 204.138 200.077 cv
204.029 200.189 203.882 200.28 203.696 200.348 cv
203.51 200.415 203.291 200.448 203.038 200.448 cv
f
206.994 200.429 mo
206.586 200.429 206.304 200.316 206.149 200.092 cv
205.994 199.868 205.915 199.54 205.911 199.108 cv
205.911 194.869 li
205.188 194.869 li
205.188 194.363 li
205.911 194.363 li
205.911 192.513 li
206.67 192.513 li
206.67 194.363 li
207.667 194.363 li
207.667 194.869 li
206.67 194.869 li
206.67 199.037 li
206.67 199.341 206.706 199.549 206.776 199.662 cv
206.847 199.775 206.99 199.832 207.206 199.832 cv
207.344 199.832 207.486 199.818 207.632 199.791 cv
207.632 200.362 li
207.405 200.406 207.193 200.429 206.994 200.429 cv
f
209.978 200.448 mo
209.405 200.448 208.992 200.271 208.739 199.918 cv
208.486 199.563 208.36 198.958 208.36 198.102 cv
208.36 196.589 li
208.36 196.006 208.42 195.543 208.539 195.201 cv
208.659 194.858 208.835 194.618 209.065 194.48 cv
209.297 194.342 209.602 194.273 209.983 194.273 cv
210.236 194.273 210.452 194.306 210.631 194.371 cv
210.809 194.437 210.958 194.53 211.076 194.652 cv
211.194 194.773 211.288 194.937 211.356 195.146 cv
211.425 195.352 211.473 195.582 211.501 195.833 cv
211.528 196.084 211.541 196.387 211.541 196.741 cv
211.536 197.282 li
209.118 197.282 li
209.118 198.178 li
209.118 198.798 209.178 199.236 209.298 199.492 cv
209.418 199.749 209.642 199.877 209.973 199.877 cv
210.236 199.877 210.438 199.794 210.58 199.627 cv
210.721 199.46 210.793 199.157 210.793 198.719 cv
210.793 198.304 li
211.536 198.304 li
211.536 198.638 li
211.536 199.218 211.415 199.665 211.172 199.978 cv
210.93 200.292 210.531 200.448 209.978 200.448 cv
209.978 194.839 mo
209.658 194.839 209.434 194.95 209.308 195.173 cv
209.181 195.395 209.118 195.818 209.118 196.442 cv
209.118 196.848 li
210.793 196.848 li
210.793 196.351 li
210.793 196.143 210.788 195.969 210.777 195.83 cv
210.767 195.692 210.746 195.555 210.715 195.418 cv
210.682 195.282 210.638 195.175 210.58 195.097 cv
210.523 195.019 210.443 194.957 210.343 194.91 cv
210.241 194.862 210.12 194.839 209.978 194.839 cv
f
213.984 200.429 mo
213.576 200.429 213.295 200.316 213.139 200.092 cv
212.984 199.868 212.905 199.54 212.901 199.108 cv
212.901 194.869 li
212.178 194.869 li
212.178 194.363 li
212.901 194.363 li
212.901 192.513 li
213.66 192.513 li
213.66 194.363 li
214.657 194.363 li
214.657 194.869 li
213.66 194.869 li
213.66 199.037 li
213.66 199.341 213.696 199.549 213.766 199.662 cv
213.838 199.775 213.98 199.832 214.196 199.832 cv
214.335 199.832 214.476 199.818 214.622 199.791 cv
214.622 200.362 li
214.395 200.406 214.183 200.429 213.984 200.429 cv
f
216.341 200.443 mo
216.041 200.443 215.812 200.332 215.653 200.109 cv
215.495 199.887 215.416 199.572 215.416 199.164 cv
215.416 194.363 li
216.179 194.363 li
216.179 199.007 li
216.179 199.311 216.225 199.526 216.316 199.654 cv
216.407 199.782 216.551 199.847 216.746 199.847 cv
217.087 199.847 217.44 199.651 217.808 199.26 cv
217.808 194.363 li
218.567 194.363 li
218.567 200.352 li
217.808 200.352 li
217.808 199.689 li
217.363 200.192 216.874 200.443 216.341 200.443 cv
f
220.545 200.352 mo
219.786 200.352 li
219.786 194.363 li
220.545 194.363 li
220.545 195.188 li
220.726 194.885 220.939 194.66 221.184 194.516 cv
221.428 194.37 221.676 194.298 221.925 194.298 cv
222.056 194.303 li
222.056 195.122 li
221.949 195.079 221.827 195.057 221.692 195.057 cv
221.207 195.057 220.824 195.289 220.545 195.755 cv
220.545 200.352 li
f
82.576 212.879 mo
82.2254 212.879 81.9373 212.75 81.7117 212.492 cv
81.485 212.234 81.3728 211.915 81.3728 211.534 cv
81.3728 211.335 81.3894 211.157 81.4226 211 cv
81.4568 210.844 81.5203 210.696 81.613 210.558 cv
81.7058 210.419 81.8063 210.297 81.9158 210.19 cv
82.0261 210.085 82.1814 209.972 82.3836 209.851 cv
82.5866 209.732 82.7888 209.622 82.991 209.52 cv
83.1932 209.42 83.4578 209.297 83.785 209.151 cv
83.785 208.722 li
83.785 208.172 83.7331 207.793 83.6286 207.586 cv
83.5242 207.379 83.3279 207.274 83.0417 207.274 cv
82.4881 207.274 82.2117 207.617 82.2117 208.302 cv
82.2117 208.519 li
81.4636 208.494 li
81.4636 208.396 81.4646 208.335 81.4685 208.311 cv
81.4919 207.749 81.6384 207.34 81.9089 207.085 cv
82.1785 206.831 82.5691 206.703 83.0818 206.703 cv
83.611 206.703 83.9871 206.86 84.2097 207.174 cv
84.4323 207.487 84.5436 207.99 84.5436 208.681 cv
84.5436 211.595 li
84.5436 212.077 84.5623 212.473 84.5994 212.783 cv
83.9264 212.783 li
83.8151 211.954 li
83.7244 212.217 83.57 212.436 83.3522 212.613 cv
83.1355 212.791 82.8767 212.879 82.576 212.879 cv
83.785 209.652 mo
83.6893 209.703 li
83.5242 209.79 83.3973 209.858 83.3093 209.905 cv
83.2214 209.952 83.117 210.012 82.9938 210.082 cv
82.8699 210.153 82.7781 210.212 82.7175 210.259 cv
82.5076 210.432 li
82.3356 210.621 li
82.2273 210.826 li
82.1512 211.071 li
82.1375 211.157 82.1306 211.252 82.1306 211.356 cv
82.1306 211.65 82.197 211.868 82.3278 212.012 cv
82.4597 212.155 82.6248 212.227 82.824 212.227 cv
83.0261 212.227 83.2127 212.157 83.3826 212.017 cv
83.5535 211.877 83.6873 211.711 83.785 211.519 cv
83.785 209.652 li
f
86.987 212.879 mo
86.4715 212.879 86.1012 212.686 85.8767 212.298 cv
85.6521 211.91 85.5408 211.266 85.5408 210.365 cv
85.5408 209.258 li
85.5408 208.927 85.5526 208.638 85.576 208.388 cv
85.5994 208.138 85.6433 207.904 85.7068 207.685 cv
85.7712 207.466 85.8552 207.287 85.9598 207.148 cv
86.0641 207.01 86.1999 206.901 86.365 206.822 cv
86.5301 206.743 86.7253 206.703 86.9519 206.703 cv
87.3464 206.707 87.6981 206.88 88.0085 207.225 cv
88.0085 204.397 li
88.7674 204.397 li
88.7674 212.783 li
88.0085 212.783 li
88.0085 212.358 li
87.7048 212.702 87.3651 212.876 86.987 212.879 cv
87.1189 207.3 mo
86.7976 207.3 86.5817 207.435 86.4685 207.702 cv
86.3552 207.971 86.2986 208.408 86.2986 209.015 cv
86.2986 210.426 li
86.2986 211.08 86.3561 211.553 86.4715 211.843 cv
86.5857 212.133 86.8084 212.277 87.1384 212.277 cv
87.4324 212.277 87.7224 212.146 88.0085 211.883 cv
88.0085 207.725 li
87.7048 207.441 87.408 207.3 87.1189 207.3 cv
f
90.7703 212.783 mo
90.0124 212.783 li
90.0124 206.794 li
90.7703 206.794 li
90.7703 212.783 li
90.7762 205.97 mo
90.0124 205.97 li
90.0124 204.938 li
90.7762 204.938 li
90.7762 205.97 li
f
92.8044 214.756 mo
92.0457 214.756 li
92.0457 206.794 li
92.8044 206.794 li
92.8044 207.295 li
93.1248 206.9 93.5076 206.703 93.9519 206.703 cv
94.1745 206.703 94.3698 206.749 94.5368 206.84 cv
94.7028 206.931 94.8347 207.049 94.9314 207.194 cv
95.0271 207.339 95.1043 207.52 95.1638 207.735 cv
95.2224 207.951 95.2614 208.164 95.28 208.375 cv
95.2985 208.586 95.3074 208.824 95.3074 209.091 cv
95.3074 210.355 li
95.3074 210.672 95.2946 210.955 95.2673 211.205 cv
95.2399 211.455 95.1931 211.687 95.1258 211.9 cv
95.0583 212.114 94.9694 212.292 94.8601 212.432 cv
94.7507 212.571 94.613 212.682 94.4481 212.761 cv
94.283 212.84 94.0906 212.879 93.8708 212.879 cv
93.4832 212.879 93.1276 212.689 92.8044 212.308 cv
92.8044 214.756 li
93.735 207.3 mo
93.4274 207.3 93.1179 207.454 92.8044 207.761 cv
92.8044 211.843 li
93.0808 212.133 93.3962 212.277 93.7498 212.277 cv
93.8845 212.277 93.9997 212.25 94.0934 212.194 cv
94.1882 212.139 94.2654 212.062 94.324 211.967 cv
94.3826 211.87 94.4294 211.739 94.4626 211.574 cv
94.4969 211.409 94.5193 211.232 94.531 211.046 cv
94.5427 210.858 94.5496 210.632 94.5496 210.365 cv
94.5496 209.091 li
94.5496 208.45 94.4949 207.991 94.3874 207.715 cv
94.2791 207.438 94.0622 207.3 93.735 207.3 cv
f
97.2088 212.783 mo
96.4509 212.783 li
96.4509 206.794 li
97.2088 206.794 li
97.2088 212.783 li
97.2147 205.97 mo
96.4509 205.97 li
96.4509 204.938 li
97.2147 204.938 li
97.2147 205.97 li
f
99.8494 212.879 mo
99.3738 212.879 98.9938 212.726 98.7087 212.419 cv
98.4237 212.112 98.2614 211.697 98.2204 211.175 cv
98.8582 210.982 li
98.8981 211.438 99.0027 211.772 99.1717 211.986 cv
99.3405 212.201 99.5759 212.308 99.8796 212.308 cv
100.143 212.308 100.35 212.23 100.502 212.075 cv
100.647 211.927 100.72 211.728 100.72 211.479 cv
100.72 211.442 li
100.71 211.045 100.467 210.647 99.991 210.249 cv
99.1765 209.556 li
98.8903 209.316 98.6814 209.082 98.5495 208.852 cv
98.4217 208.631 98.3571 208.371 98.3571 208.074 cv
98.3571 207.636 98.489 207.297 98.7517 207.058 cv
99.0085 206.821 99.3543 206.703 99.7889 206.703 cv
100.23 206.703 100.57 206.845 100.808 207.128 cv
101.046 207.411 101.178 207.794 101.205 208.276 cv
100.669 208.453 li
100.645 208.052 100.563 207.755 100.424 207.561 cv
100.284 207.367 100.082 207.269 99.819 207.269 cv
99.5828 207.269 99.3943 207.336 99.2526 207.467 cv
99.114 207.596 99.0456 207.768 99.0456 207.983 cv
99.0456 208.179 99.0808 208.347 99.1511 208.486 cv
99.2224 208.626 99.3524 208.777 99.5407 208.939 cv
100.385 209.697 li
100.538 209.829 100.661 209.944 100.758 210.044 cv
100.853 210.143 100.956 210.267 101.063 210.413 cv
101.172 210.561 101.252 210.719 101.304 210.889 cv
101.356 211.06 101.384 211.242 101.387 211.438 cv
101.387 211.897 101.249 212.251 100.972 212.503 cv
100.696 212.754 100.322 212.879 99.8494 212.879 cv
f
103.728 212.879 mo
103.456 212.879 103.221 212.839 103.025 212.758 cv
102.83 212.677 102.675 212.571 102.56 212.441 cv
102.446 212.312 102.355 212.141 102.29 211.929 cv
102.224 211.716 102.18 211.501 102.158 211.283 cv
102.137 211.066 102.126 210.809 102.126 210.512 cv
102.126 209.116 li
102.126 208.681 102.149 208.319 102.196 208.031 cv
102.243 207.743 102.327 207.496 102.446 207.29 cv
102.566 207.084 102.729 206.936 102.937 206.843 cv
103.144 206.75 103.407 206.703 103.723 206.703 cv
103.973 206.703 104.189 206.733 104.371 206.794 cv
104.553 206.856 104.701 206.938 104.813 207.045 cv
104.927 207.151 105.016 207.287 105.082 207.452 cv
105.147 207.617 105.193 207.792 105.219 207.976 cv
105.244 208.159 105.257 208.374 105.257 208.62 cv
105.257 208.903 li
104.553 208.903 li
104.553 208.62 li
104.553 208.107 104.493 207.755 104.371 207.561 cv
104.25 207.367 104.037 207.269 103.734 207.269 cv
103.389 207.269 103.162 207.392 103.051 207.637 cv
102.939 207.881 102.883 208.332 102.883 208.989 cv
102.883 210.669 li
102.883 211.282 102.944 211.709 103.063 211.948 cv
103.183 212.189 103.408 212.308 103.739 212.308 cv
103.881 212.308 104 212.287 104.098 212.247 cv
104.196 212.207 104.274 212.151 104.333 212.08 cv
104.392 212.01 104.438 211.911 104.472 211.787 cv
104.506 211.662 104.528 211.529 104.538 211.39 cv
104.549 211.25 104.553 211.073 104.553 210.861 cv
104.553 210.532 li
105.257 210.532 li
105.257 210.826 li
105.257 211.089 105.245 211.316 105.223 211.509 cv
105.201 211.701 105.158 211.887 105.091 212.067 cv
105.026 212.248 104.938 212.395 104.829 212.508 cv
104.719 212.62 104.572 212.711 104.386 212.778 cv
104.201 212.846 103.981 212.879 103.728 212.879 cv
f
107.107 212.783 mo
106.349 212.783 li
106.349 206.794 li
107.107 206.794 li
107.107 212.783 li
107.113 205.97 mo
106.349 205.97 li
106.349 204.938 li
107.113 204.938 li
107.113 205.97 li
f
111.498 212.783 mo
110.739 212.783 li
110.739 208.14 li
110.739 207.836 110.693 207.62 110.6 207.492 cv
110.508 207.364 110.363 207.3 110.168 207.3 cv
109.841 207.3 109.497 207.484 109.135 207.852 cv
109.135 212.783 li
108.377 212.783 li
108.377 206.794 li
109.135 206.794 li
109.135 207.417 li
109.578 206.941 110.058 206.703 110.578 206.703 cv
110.874 206.703 111.101 206.813 111.261 207.034 cv
111.419 207.256 111.498 207.57 111.498 207.978 cv
111.498 212.783 li
f
114.259 214.751 mo
113.942 214.751 113.663 214.734 113.423 214.7 cv
113.181 214.666 112.968 214.611 112.782 214.533 cv
112.596 214.456 112.455 214.351 112.357 214.217 cv
112.26 214.084 112.211 213.925 112.211 213.739 cv
112.211 213.449 112.307 213.184 112.499 212.942 cv
112.691 212.701 112.926 212.509 113.202 212.363 cv
113.02 212.312 112.863 212.239 112.732 212.144 cv
112.6 212.047 112.535 211.943 112.535 211.832 cv
112.535 211.516 112.772 211.112 113.248 210.623 cv
112.749 210.259 112.499 209.648 112.499 208.792 cv
112.499 208.502 112.533 208.233 112.6 207.985 cv
112.668 207.737 112.768 207.517 112.901 207.323 cv
113.034 207.129 113.209 206.977 113.424 206.868 cv
113.64 206.758 113.888 206.703 114.169 206.703 cv
114.772 206.703 115.202 206.951 115.458 207.447 cv
115.522 207.336 115.63 207.215 115.782 207.085 cv
115.933 206.955 116.095 206.854 116.267 206.779 cv
116.425 206.714 li
116.627 207.244 li
116.462 207.285 116.277 207.357 116.073 207.462 cv
115.869 207.566 115.724 207.668 115.64 207.766 cv
115.691 207.887 115.735 208.056 115.774 208.271 cv
115.813 208.487 115.833 208.668 115.833 208.813 cv
115.833 209.457 115.7 209.967 115.435 210.343 cv
115.171 210.719 114.752 210.906 114.179 210.906 cv
114.088 210.906 113.976 210.896 113.844 210.874 cv
113.713 210.852 113.622 210.831 113.571 210.811 cv
113.561 210.827 113.523 210.885 113.458 210.982 cv
113.392 211.08 113.342 211.155 113.311 211.208 cv
113.213 211.399 li
113.162 211.59 li
113.162 211.687 113.329 211.764 113.663 211.817 cv
113.733 211.837 113.902 211.867 114.169 211.905 cv
114.434 211.944 114.587 211.969 114.624 211.979 cv
115.116 212.066 115.488 212.22 115.741 212.439 cv
115.994 212.658 116.121 212.965 116.121 213.359 cv
116.121 213.835 115.954 214.185 115.62 214.412 cv
115.286 214.638 114.833 214.751 114.259 214.751 cv
113.622 212.465 mo
113.116 212.778 112.863 213.12 112.863 213.491 cv
112.863 213.721 112.971 213.887 113.187 213.989 cv
113.403 214.093 113.757 214.144 114.249 214.144 cv
114.64 214.144 114.95 214.081 115.178 213.954 cv
115.405 213.828 115.519 213.637 115.519 213.38 cv
115.519 213.161 115.441 212.99 115.286 212.869 cv
115.131 212.748 114.833 212.646 114.39 212.565 cv
113.622 212.465 li
114.183 207.244 mo
114.025 207.244 113.885 207.277 113.761 207.343 cv
113.638 207.409 113.54 207.492 113.467 207.594 cv
113.395 207.694 113.337 207.816 113.291 207.958 cv
113.245 208.1 113.215 208.236 113.2 208.37 cv
113.184 208.503 113.177 208.644 113.177 208.792 cv
113.177 209.838 113.511 210.36 114.179 210.36 cv
114.347 210.36 114.494 210.328 114.619 210.265 cv
114.743 210.2 114.84 210.119 114.907 210.022 cv
114.974 209.924 115.028 209.802 115.069 209.654 cv
115.109 209.508 115.135 209.37 115.147 209.24 cv
115.159 209.11 115.165 208.961 115.165 208.792 cv
115.165 207.761 114.838 207.244 114.183 207.244 cv
f
120.704 212.879 mo
120.131 212.879 119.718 212.702 119.465 212.349 cv
119.212 211.994 119.086 211.389 119.086 210.532 cv
119.086 209.02 li
119.086 208.437 119.145 207.974 119.264 207.632 cv
119.385 207.289 119.56 207.049 119.791 206.911 cv
120.022 206.772 120.328 206.703 120.709 206.703 cv
120.962 206.703 121.178 206.736 121.356 206.802 cv
121.535 206.868 121.683 206.961 121.802 207.083 cv
121.92 207.204 122.013 207.368 122.082 207.576 cv
122.151 207.783 122.199 208.013 122.226 208.264 cv
122.254 208.515 122.266 208.817 122.266 209.172 cv
122.261 209.713 li
119.843 209.713 li
119.843 210.608 li
119.843 211.229 119.904 211.667 120.023 211.923 cv
120.143 212.18 120.368 212.308 120.699 212.308 cv
120.962 212.308 121.164 212.225 121.305 212.058 cv
121.447 211.891 121.518 211.588 121.518 211.149 cv
121.518 210.734 li
122.261 210.734 li
122.261 211.068 li
122.261 211.648 122.14 212.096 121.897 212.409 cv
121.655 212.723 121.257 212.879 120.704 212.879 cv
120.704 207.269 mo
120.384 207.269 120.16 207.381 120.034 207.604 cv
119.907 207.826 119.843 208.249 119.843 208.873 cv
119.843 209.278 li
121.518 209.278 li
121.518 208.782 li
121.518 208.573 121.513 208.399 121.503 208.261 cv
121.493 208.123 121.472 207.985 121.44 207.849 cv
121.408 207.713 121.363 207.605 121.305 207.527 cv
121.249 207.45 121.169 207.388 121.068 207.341 cv
120.967 207.293 120.845 207.269 120.704 207.269 cv
f
124.158 212.783 mo
123.394 212.783 li
123.394 204.397 li
124.158 204.397 li
124.158 212.783 li
f
126.226 212.783 mo
125.469 212.783 li
125.469 206.794 li
126.226 206.794 li
126.226 212.783 li
126.232 205.97 mo
125.469 205.97 li
125.469 204.938 li
126.232 204.938 li
126.232 205.97 li
f
128.918 212.859 mo
128.509 212.859 128.228 212.747 128.073 212.522 cv
127.918 212.299 127.839 211.971 127.835 211.539 cv
127.835 207.3 li
127.112 207.3 li
127.112 206.794 li
127.835 206.794 li
127.835 204.943 li
128.594 204.943 li
128.594 206.794 li
129.591 206.794 li
129.591 207.3 li
128.594 207.3 li
128.594 211.468 li
128.594 211.772 128.63 211.979 128.7 212.093 cv
128.771 212.206 128.914 212.263 129.13 212.263 cv
129.268 212.263 129.41 212.249 129.555 212.222 cv
129.555 212.793 li
129.329 212.837 129.117 212.859 128.918 212.859 cv
f
130.486 213.992 mo
130.329 213.658 li
130.508 213.557 130.635 213.439 130.711 213.304 cv
130.787 213.169 130.825 212.996 130.825 212.783 cv
130.37 212.783 li
130.37 211.655 li
131.219 211.655 li
131.219 212.702 li
131.219 213.039 131.164 213.305 131.053 213.499 cv
130.941 213.692 130.752 213.857 130.486 213.992 cv
f
135.751 212.879 mo
135.275 212.879 134.895 212.726 134.61 212.419 cv
134.325 212.112 134.163 211.697 134.122 211.175 cv
134.76 210.982 li
134.8 211.438 134.904 211.772 135.073 211.986 cv
135.242 212.201 135.477 212.308 135.781 212.308 cv
136.045 212.308 136.252 212.23 136.403 212.075 cv
136.549 211.927 136.621 211.728 136.621 211.479 cv
136.621 211.442 li
136.611 211.045 136.368 210.647 135.892 210.249 cv
135.078 209.556 li
134.792 209.316 134.583 209.082 134.451 208.852 cv
134.323 208.631 134.258 208.371 134.258 208.074 cv
134.258 207.636 134.39 207.297 134.653 207.058 cv
134.91 206.821 135.256 206.703 135.69 206.703 cv
136.132 206.703 136.471 206.845 136.71 207.128 cv
136.947 207.411 137.08 207.794 137.106 208.276 cv
136.57 208.453 li
136.547 208.052 136.465 207.755 136.325 207.561 cv
136.185 207.367 135.983 207.269 135.72 207.269 cv
135.484 207.269 135.296 207.336 135.154 207.467 cv
135.015 207.596 134.947 207.768 134.947 207.983 cv
134.947 208.179 134.982 208.347 135.052 208.486 cv
135.124 208.626 135.254 208.777 135.442 208.939 cv
136.287 209.697 li
136.439 209.829 136.562 209.944 136.659 210.044 cv
136.755 210.143 136.857 210.267 136.965 210.413 cv
137.073 210.561 137.153 210.719 137.205 210.889 cv
137.258 211.06 137.285 211.242 137.289 211.438 cv
137.289 211.897 137.15 212.251 136.874 212.503 cv
136.597 212.754 136.223 212.879 135.751 212.879 cv
f
139.645 212.879 mo
139.072 212.879 138.659 212.702 138.406 212.349 cv
138.153 211.994 138.027 211.389 138.027 210.532 cv
138.027 209.02 li
138.027 208.437 138.087 207.974 138.206 207.632 cv
138.326 207.289 138.502 207.049 138.732 206.911 cv
138.964 206.772 139.269 206.703 139.65 206.703 cv
139.903 206.703 140.119 206.736 140.298 206.802 cv
140.476 206.868 140.625 206.961 140.743 207.083 cv
140.861 207.204 140.955 207.368 141.023 207.576 cv
141.092 207.783 141.14 208.013 141.168 208.264 cv
141.195 208.515 141.208 208.817 141.208 209.172 cv
141.203 209.713 li
138.785 209.713 li
138.785 210.608 li
138.785 211.229 138.845 211.667 138.965 211.923 cv
139.085 212.18 139.309 212.308 139.64 212.308 cv
139.903 212.308 140.105 212.225 140.247 212.058 cv
140.388 211.891 140.46 211.588 140.46 211.149 cv
140.46 210.734 li
141.203 210.734 li
141.203 211.068 li
141.203 211.648 141.082 212.096 140.839 212.409 cv
140.596 212.723 140.198 212.879 139.645 212.879 cv
139.645 207.269 mo
139.325 207.269 139.101 207.381 138.975 207.604 cv
138.848 207.826 138.785 208.249 138.785 208.873 cv
138.785 209.278 li
140.46 209.278 li
140.46 208.782 li
140.46 208.573 140.455 208.399 140.444 208.261 cv
140.434 208.123 140.413 207.985 140.382 207.849 cv
140.349 207.713 140.304 207.605 140.247 207.527 cv
140.19 207.45 140.11 207.388 140.009 207.341 cv
139.908 207.293 139.787 207.269 139.645 207.269 cv
f
143.565 212.879 mo
143.05 212.879 142.68 212.686 142.455 212.298 cv
142.23 211.91 142.119 211.266 142.119 210.365 cv
142.119 209.258 li
142.119 208.927 142.131 208.638 142.154 208.388 cv
142.178 208.138 142.221 207.904 142.285 207.685 cv
142.349 207.466 142.433 207.287 142.538 207.148 cv
142.642 207.01 142.778 206.901 142.943 206.822 cv
143.108 206.743 143.303 206.703 143.53 206.703 cv
143.925 206.707 144.276 206.88 144.587 207.225 cv
144.587 204.397 li
145.345 204.397 li
145.345 212.783 li
144.587 212.783 li
144.587 212.358 li
144.283 212.702 143.943 212.876 143.565 212.879 cv
143.697 207.3 mo
143.376 207.3 143.16 207.435 143.047 207.702 cv
142.933 207.971 142.877 208.408 142.877 209.015 cv
142.877 210.426 li
142.877 211.08 142.934 211.553 143.05 211.843 cv
143.164 212.133 143.387 212.277 143.717 212.277 cv
144.01 212.277 144.301 212.146 144.587 211.883 cv
144.587 207.725 li
144.283 207.441 143.986 207.3 143.697 207.3 cv
f
149.954 212.879 mo
149.438 212.879 149.068 212.686 148.844 212.298 cv
148.619 211.91 148.508 211.266 148.508 210.365 cv
148.508 209.258 li
148.508 208.927 148.519 208.638 148.543 208.388 cv
148.566 208.138 148.61 207.904 148.674 207.685 cv
148.738 207.466 148.822 207.287 148.926 207.148 cv
149.031 207.01 149.167 206.901 149.332 206.822 cv
149.497 206.743 149.692 206.703 149.919 206.703 cv
150.313 206.707 150.665 206.88 150.975 207.225 cv
150.975 204.397 li
151.734 204.397 li
151.734 212.783 li
150.975 212.783 li
150.975 212.358 li
150.672 212.702 150.332 212.876 149.954 212.879 cv
150.086 207.3 mo
149.764 207.3 149.549 207.435 149.435 207.702 cv
149.322 207.971 149.265 208.408 149.265 209.015 cv
149.265 210.426 li
149.265 211.08 149.323 211.553 149.438 211.843 cv
149.553 212.133 149.775 212.277 150.105 212.277 cv
150.399 212.277 150.689 212.146 150.975 211.883 cv
150.975 207.725 li
150.672 207.441 150.375 207.3 150.086 207.3 cv
f
154.38 212.879 mo
154.073 212.879 153.815 212.83 153.606 212.732 cv
153.397 212.635 153.232 212.486 153.113 212.287 cv
152.993 212.089 152.908 211.856 152.857 211.587 cv
152.806 211.319 152.782 210.996 152.782 210.618 cv
152.782 208.959 li
152.782 208.197 152.899 207.631 153.135 207.26 cv
153.372 206.889 153.786 206.703 154.38 206.703 cv
154.976 206.703 155.392 206.888 155.627 207.257 cv
155.861 207.626 155.978 208.193 155.978 208.959 cv
155.978 210.618 li
155.978 210.996 155.953 211.319 155.902 211.587 cv
155.852 211.856 155.766 212.089 155.647 212.287 cv
155.527 212.486 155.363 212.635 155.154 212.732 cv
154.945 212.83 154.686 212.879 154.38 212.879 cv
154.38 207.269 mo
154.252 207.269 154.14 207.287 154.046 207.32 cv
153.952 207.355 153.874 207.409 153.813 207.484 cv
153.667 207.727 li
153.63 207.814 153.601 207.926 153.583 208.063 cv
153.564 208.202 153.552 208.333 153.548 208.456 cv
153.543 208.579 153.54 208.733 153.54 208.919 cv
153.54 210.659 li
153.54 210.845 153.543 210.999 153.548 211.122 cv
153.552 211.245 153.564 211.375 153.583 211.514 cv
153.601 211.652 153.63 211.764 153.667 211.85 cv
153.813 212.093 li
153.874 212.169 153.952 212.224 154.046 212.257 cv
154.14 212.291 154.252 212.308 154.38 212.308 cv
154.532 212.308 154.66 212.28 154.764 212.225 cv
154.869 212.169 154.951 212.099 155.01 212.015 cv
155.068 211.93 155.113 211.811 155.143 211.655 cv
155.174 211.5 155.193 211.352 155.202 211.21 cv
155.211 211.068 155.215 210.885 155.215 210.659 cv
155.215 208.919 li
155.215 208.693 155.211 208.509 155.202 208.367 cv
155.193 208.226 155.174 208.077 155.143 207.922 cv
155.113 207.768 155.068 207.647 155.01 207.563 cv
154.951 207.479 154.869 207.409 154.764 207.353 cv
154.66 207.298 154.532 207.269 154.38 207.269 cv
f
160.642 212.879 mo
160.069 212.879 159.656 212.702 159.403 212.349 cv
159.15 211.994 159.024 211.389 159.024 210.532 cv
159.024 209.02 li
159.024 208.437 159.084 207.974 159.203 207.632 cv
159.323 207.289 159.499 207.049 159.729 206.911 cv
159.961 206.772 160.266 206.703 160.647 206.703 cv
160.9 206.703 161.116 206.736 161.295 206.802 cv
161.473 206.868 161.622 206.961 161.74 207.083 cv
161.858 207.204 161.952 207.368 162.02 207.576 cv
162.09 207.783 162.137 208.013 162.165 208.264 cv
162.192 208.515 162.205 208.817 162.205 209.172 cv
162.2 209.713 li
159.782 209.713 li
159.782 210.608 li
159.782 211.229 159.843 211.667 159.962 211.923 cv
160.082 212.18 160.306 212.308 160.637 212.308 cv
160.9 212.308 161.102 212.225 161.244 212.058 cv
161.385 211.891 161.457 211.588 161.457 211.149 cv
161.457 210.734 li
162.2 210.734 li
162.2 211.068 li
162.2 211.648 162.079 212.096 161.836 212.409 cv
161.593 212.723 161.195 212.879 160.642 212.879 cv
160.642 207.269 mo
160.322 207.269 160.098 207.381 159.972 207.604 cv
159.845 207.826 159.782 208.249 159.782 208.873 cv
159.782 209.278 li
161.457 209.278 li
161.457 208.782 li
161.457 208.573 161.452 208.399 161.441 208.261 cv
161.431 208.123 161.41 207.985 161.379 207.849 cv
161.346 207.713 161.301 207.605 161.244 207.527 cv
161.187 207.45 161.107 207.388 161.007 207.341 cv
160.905 207.293 160.784 207.269 160.642 207.269 cv
f
164.071 212.783 mo
163.313 212.783 li
163.313 206.794 li
164.071 206.794 li
164.071 212.783 li
164.077 205.97 mo
163.313 205.97 li
163.313 204.938 li
164.077 204.938 li
164.077 205.97 li
f
166.221 212.874 mo
165.921 212.874 165.692 212.763 165.533 212.54 cv
165.375 212.317 165.296 212.003 165.296 211.595 cv
165.296 206.794 li
166.059 206.794 li
166.059 211.438 li
166.059 211.741 166.105 211.957 166.196 212.085 cv
166.287 212.213 166.43 212.277 166.626 212.277 cv
166.967 212.277 167.32 212.082 167.688 211.69 cv
167.688 206.794 li
168.447 206.794 li
168.447 212.783 li
167.688 212.783 li
167.688 212.12 li
167.243 212.623 166.754 212.874 166.221 212.874 cv
f
170.975 212.879 mo
170.5 212.879 170.12 212.726 169.835 212.419 cv
169.55 212.112 169.387 211.697 169.346 211.175 cv
169.984 210.982 li
170.024 211.438 170.129 211.772 170.298 211.986 cv
170.467 212.201 170.702 212.308 171.006 212.308 cv
171.269 212.308 171.476 212.23 171.628 212.075 cv
171.773 211.927 171.845 211.728 171.845 211.479 cv
171.845 211.442 li
171.836 211.045 171.593 210.647 171.117 210.249 cv
170.302 209.556 li
170.016 209.316 169.807 209.082 169.675 208.852 cv
169.548 208.631 169.483 208.371 169.483 208.074 cv
169.483 207.636 169.615 207.297 169.878 207.058 cv
170.134 206.821 170.48 206.703 170.915 206.703 cv
171.356 206.703 171.696 206.845 171.934 207.128 cv
172.172 207.411 172.304 207.794 172.331 208.276 cv
171.795 208.453 li
171.771 208.052 171.689 207.755 171.55 207.561 cv
171.41 207.367 171.208 207.269 170.945 207.269 cv
170.709 207.269 170.52 207.336 170.379 207.467 cv
170.24 207.596 170.172 207.768 170.172 207.983 cv
170.172 208.179 170.207 208.347 170.277 208.486 cv
170.348 208.626 170.478 208.777 170.667 208.939 cv
171.511 209.697 li
171.664 209.829 171.787 209.944 171.884 210.044 cv
171.979 210.143 172.082 210.267 172.189 210.413 cv
172.298 210.561 172.378 210.719 172.429 210.889 cv
172.482 211.06 172.51 211.242 172.513 211.438 cv
172.513 211.897 172.375 212.251 172.098 212.503 cv
171.822 212.754 171.448 212.879 170.975 212.879 cv
f
178.922 212.783 mo
178.203 212.783 li
178.203 208.079 li
178.203 207.752 178.152 207.524 178.052 207.396 cv
177.95 207.269 177.805 207.204 177.616 207.204 cv
177.235 207.211 176.859 207.418 176.488 207.826 cv
176.495 207.928 176.499 208.005 176.499 208.059 cv
176.499 212.783 li
175.791 212.783 li
175.791 208.079 li
175.791 207.752 175.738 207.524 175.634 207.396 cv
175.529 207.269 175.383 207.204 175.193 207.204 cv
174.812 207.211 174.44 207.418 174.076 207.826 cv
174.076 212.783 li
173.362 212.783 li
173.362 206.794 li
174.076 206.794 li
174.076 207.401 li
174.477 206.926 174.947 206.689 175.487 206.689 cv
175.986 206.689 176.3 206.951 176.427 207.478 cv
176.845 206.951 177.339 206.689 177.905 206.689 cv
178.202 206.689 178.445 206.795 178.636 207.01 cv
178.826 207.224 178.922 207.573 178.922 208.059 cv
178.922 212.783 li
f
181.521 212.879 mo
181.215 212.879 180.957 212.83 180.748 212.732 cv
180.539 212.635 180.374 212.486 180.255 212.287 cv
180.134 212.089 180.05 211.856 179.999 211.587 cv
179.948 211.319 179.924 210.996 179.924 210.618 cv
179.924 208.959 li
179.924 208.197 180.041 207.631 180.277 207.26 cv
180.513 206.889 180.928 206.703 181.521 206.703 cv
182.118 206.703 182.534 206.888 182.768 207.257 cv
183.003 207.626 183.12 208.193 183.12 208.959 cv
183.12 210.618 li
183.12 210.996 183.095 211.319 183.044 211.587 cv
182.994 211.856 182.908 212.089 182.789 212.287 cv
182.669 212.486 182.505 212.635 182.296 212.732 cv
182.087 212.83 181.828 212.879 181.521 212.879 cv
181.521 207.269 mo
181.393 207.269 181.282 207.287 181.187 207.32 cv
181.093 207.355 181.015 207.409 180.955 207.484 cv
180.808 207.727 li
180.771 207.814 180.743 207.926 180.724 208.063 cv
180.706 208.202 180.694 208.333 180.689 208.456 cv
180.684 208.579 180.681 208.733 180.681 208.919 cv
180.681 210.659 li
180.681 210.845 180.684 210.999 180.689 211.122 cv
180.694 211.245 180.706 211.375 180.724 211.514 cv
180.743 211.652 180.771 211.764 180.808 211.85 cv
180.955 212.093 li
181.015 212.169 181.093 212.224 181.187 212.257 cv
181.282 212.291 181.393 212.308 181.521 212.308 cv
181.674 212.308 181.802 212.28 181.906 212.225 cv
182.01 212.169 182.092 212.099 182.151 212.015 cv
182.21 211.93 182.255 211.811 182.285 211.655 cv
182.315 211.5 182.335 211.352 182.343 211.21 cv
182.352 211.068 182.356 210.885 182.356 210.659 cv
182.356 208.919 li
182.356 208.693 182.352 208.509 182.343 208.367 cv
182.335 208.226 182.315 208.077 182.285 207.922 cv
182.255 207.768 182.21 207.647 182.151 207.563 cv
182.092 207.479 182.01 207.409 181.906 207.353 cv
181.802 207.298 181.674 207.269 181.521 207.269 cv
f
185.497 212.879 mo
184.981 212.879 184.611 212.686 184.386 212.298 cv
184.162 211.91 184.051 211.266 184.051 210.365 cv
184.051 209.258 li
184.051 208.927 184.062 208.638 184.086 208.388 cv
184.109 208.138 184.153 207.904 184.217 207.685 cv
184.281 207.466 184.365 207.287 184.469 207.148 cv
184.574 207.01 184.71 206.901 184.875 206.822 cv
185.04 206.743 185.235 206.703 185.462 206.703 cv
185.856 206.707 186.208 206.88 186.518 207.225 cv
186.518 204.397 li
187.277 204.397 li
187.277 212.783 li
186.518 212.783 li
186.518 212.358 li
186.215 212.702 185.875 212.876 185.497 212.879 cv
185.629 207.3 mo
185.307 207.3 185.092 207.435 184.978 207.702 cv
184.865 207.971 184.808 208.408 184.808 209.015 cv
184.808 210.426 li
184.808 211.08 184.866 211.553 184.981 211.843 cv
185.096 212.133 185.318 212.277 185.648 212.277 cv
185.942 212.277 186.232 212.146 186.518 211.883 cv
186.518 207.725 li
186.215 207.441 185.918 207.3 185.629 207.3 cv
f
191.971 212.859 mo
191.563 212.859 191.282 212.747 191.127 212.522 cv
190.971 212.299 190.892 211.971 190.888 211.539 cv
190.888 207.3 li
190.166 207.3 li
190.166 206.794 li
190.888 206.794 li
190.888 204.943 li
191.647 204.943 li
191.647 206.794 li
192.644 206.794 li
192.644 207.3 li
191.647 207.3 li
191.647 211.468 li
191.647 211.772 191.683 211.979 191.754 212.093 cv
191.825 212.206 191.967 212.263 192.183 212.263 cv
192.322 212.263 192.464 212.249 192.609 212.222 cv
192.609 212.793 li
192.383 212.837 192.171 212.859 191.971 212.859 cv
f
194.956 212.879 mo
194.383 212.879 193.969 212.702 193.717 212.349 cv
193.464 211.994 193.338 211.389 193.338 210.532 cv
193.338 209.02 li
193.338 208.437 193.397 207.974 193.516 207.632 cv
193.636 207.289 193.812 207.049 194.043 206.911 cv
194.274 206.772 194.58 206.703 194.961 206.703 cv
195.214 206.703 195.429 206.736 195.608 206.802 cv
195.787 206.868 195.935 206.961 196.053 207.083 cv
196.172 207.204 196.265 207.368 196.334 207.576 cv
196.403 207.783 196.451 208.013 196.478 208.264 cv
196.506 208.515 196.518 208.817 196.518 209.172 cv
196.513 209.713 li
194.095 209.713 li
194.095 210.608 li
194.095 211.229 194.156 211.667 194.275 211.923 cv
194.395 212.18 194.62 212.308 194.951 212.308 cv
195.214 212.308 195.416 212.225 195.557 212.058 cv
195.699 211.891 195.77 211.588 195.77 211.149 cv
195.77 210.734 li
196.513 210.734 li
196.513 211.068 li
196.513 211.648 196.392 212.096 196.149 212.409 cv
195.907 212.723 195.509 212.879 194.956 212.879 cv
194.956 207.269 mo
194.636 207.269 194.412 207.381 194.286 207.604 cv
194.159 207.826 194.095 208.249 194.095 208.873 cv
194.095 209.278 li
195.77 209.278 li
195.77 208.782 li
195.77 208.573 195.765 208.399 195.755 208.261 cv
195.745 208.123 195.723 207.985 195.692 207.849 cv
195.66 207.713 195.615 207.605 195.557 207.527 cv
195.501 207.45 195.421 207.388 195.32 207.341 cv
195.219 207.293 195.097 207.269 194.956 207.269 cv
f
203.099 212.783 mo
202.381 212.783 li
202.381 208.079 li
202.381 207.752 202.33 207.524 202.229 207.396 cv
202.128 207.269 201.983 207.204 201.794 207.204 cv
201.413 207.211 201.037 207.418 200.666 207.826 cv
200.673 207.928 200.676 208.005 200.676 208.059 cv
200.676 212.783 li
199.969 212.783 li
199.969 208.079 li
199.969 207.752 199.916 207.524 199.811 207.396 cv
199.707 207.269 199.56 207.204 199.371 207.204 cv
198.99 207.211 198.618 207.418 198.254 207.826 cv
198.254 212.783 li
197.54 212.783 li
197.54 206.794 li
198.254 206.794 li
198.254 207.401 li
198.655 206.926 199.125 206.689 199.665 206.689 cv
200.164 206.689 200.477 206.951 200.605 207.478 cv
201.023 206.951 201.516 206.689 202.083 206.689 cv
202.38 206.689 202.623 206.795 202.813 207.01 cv
203.004 207.224 203.099 207.573 203.099 208.059 cv
203.099 212.783 li
f
204.976 214.756 mo
204.217 214.756 li
204.217 206.794 li
204.976 206.794 li
204.976 207.295 li
205.297 206.9 205.679 206.703 206.124 206.703 cv
206.346 206.703 206.542 206.749 206.709 206.84 cv
206.875 206.931 207.007 207.049 207.103 207.194 cv
207.199 207.339 207.276 207.52 207.336 207.735 cv
207.394 207.951 207.433 208.164 207.452 208.375 cv
207.47 208.586 207.479 208.824 207.479 209.091 cv
207.479 210.355 li
207.479 210.672 207.467 210.955 207.439 211.205 cv
207.412 211.455 207.365 211.687 207.298 211.9 cv
207.23 212.114 207.141 212.292 207.032 212.432 cv
206.923 212.571 206.785 212.682 206.62 212.761 cv
206.455 212.84 206.262 212.879 206.043 212.879 cv
205.655 212.879 205.3 212.689 204.976 212.308 cv
204.976 214.756 li
205.907 207.3 mo
205.599 207.3 205.29 207.454 204.976 207.761 cv
204.976 211.843 li
205.253 212.133 205.568 212.277 205.922 212.277 cv
206.056 212.277 206.172 212.25 206.265 212.194 cv
206.36 212.139 206.437 212.062 206.496 211.967 cv
206.554 211.87 206.601 211.739 206.635 211.574 cv
206.669 211.409 206.691 211.232 206.703 211.046 cv
206.715 210.858 206.721 210.632 206.721 210.365 cv
206.721 209.091 li
206.721 208.45 206.667 207.991 206.559 207.715 cv
206.451 207.438 206.234 207.3 205.907 207.3 cv
f
210.023 212.879 mo
209.717 212.879 209.459 212.83 209.25 212.732 cv
209.041 212.635 208.876 212.486 208.757 212.287 cv
208.636 212.089 208.551 211.856 208.501 211.587 cv
208.45 211.319 208.425 210.996 208.425 210.618 cv
208.425 208.959 li
208.425 208.197 208.543 207.631 208.779 207.26 cv
209.015 206.889 209.429 206.703 210.023 206.703 cv
210.62 206.703 211.036 206.888 211.27 207.257 cv
211.505 207.626 211.622 208.193 211.622 208.959 cv
211.622 210.618 li
211.622 210.996 211.596 211.319 211.546 211.587 cv
211.496 211.856 211.41 212.089 211.291 212.287 cv
211.171 212.486 211.007 212.635 210.798 212.732 cv
210.589 212.83 210.33 212.879 210.023 212.879 cv
210.023 207.269 mo
209.895 207.269 209.784 207.287 209.689 207.32 cv
209.595 207.355 209.517 207.409 209.457 207.484 cv
209.31 207.727 li
209.273 207.814 209.245 207.926 209.226 208.063 cv
209.208 208.202 209.196 208.333 209.191 208.456 cv
209.186 208.579 209.183 208.733 209.183 208.919 cv
209.183 210.659 li
209.183 210.845 209.186 210.999 209.191 211.122 cv
209.196 211.245 209.208 211.375 209.226 211.514 cv
209.245 211.652 209.273 211.764 209.31 211.85 cv
209.457 212.093 li
209.517 212.169 209.595 212.224 209.689 212.257 cv
209.784 212.291 209.895 212.308 210.023 212.308 cv
210.175 212.308 210.303 212.28 210.408 212.225 cv
210.512 212.169 210.595 212.099 210.653 212.015 cv
210.712 211.93 210.757 211.811 210.787 211.655 cv
210.817 211.5 210.837 211.352 210.845 211.21 cv
210.854 211.068 210.858 210.885 210.858 210.659 cv
210.858 208.919 li
210.858 208.693 210.854 208.509 210.845 208.367 cv
210.837 208.226 210.817 208.077 210.787 207.922 cv
210.757 207.768 210.712 207.647 210.653 207.563 cv
210.595 207.479 210.512 207.409 210.408 207.353 cv
210.303 207.298 210.175 207.269 210.023 207.269 cv
f
213.483 212.783 mo
212.724 212.783 li
212.724 206.794 li
213.483 206.794 li
213.483 207.619 li
213.665 207.315 213.878 207.091 214.123 206.946 cv
214.367 206.801 214.614 206.728 214.864 206.728 cv
214.995 206.733 li
214.995 207.553 li
214.887 207.51 214.765 207.487 214.631 207.487 cv
214.145 207.487 213.762 207.72 213.483 208.186 cv
213.483 212.783 li
f
218.708 212.783 mo
217.95 212.783 li
217.95 206.794 li
218.708 206.794 li
218.708 212.783 li
218.714 205.97 mo
217.95 205.97 li
217.95 204.938 li
218.714 204.938 li
218.714 205.97 li
f
223.098 212.783 mo
222.34 212.783 li
222.34 208.14 li
222.34 207.836 222.294 207.62 222.201 207.492 cv
222.108 207.364 221.964 207.3 221.768 207.3 cv
221.441 207.3 221.097 207.484 220.736 207.852 cv
220.736 212.783 li
219.977 212.783 li
219.977 206.794 li
220.736 206.794 li
220.736 207.417 li
221.178 206.941 221.659 206.703 222.178 206.703 cv
222.474 206.703 222.702 206.813 222.861 207.034 cv
223.019 207.256 223.098 207.57 223.098 207.978 cv
223.098 212.783 li
f
225.708 212.879 mo
225.435 212.879 225.201 212.839 225.005 212.758 cv
224.809 212.677 224.654 212.571 224.54 212.441 cv
224.426 212.312 224.335 212.141 224.269 211.929 cv
224.204 211.716 224.16 211.501 224.138 211.283 cv
224.116 211.066 224.105 210.809 224.105 210.512 cv
224.105 209.116 li
224.105 208.681 224.129 208.319 224.176 208.031 cv
224.222 207.743 224.306 207.496 224.426 207.29 cv
224.546 207.084 224.709 206.936 224.917 206.843 cv
225.124 206.75 225.386 206.703 225.703 206.703 cv
225.953 206.703 226.169 206.733 226.35 206.794 cv
226.533 206.856 226.68 206.938 226.793 207.045 cv
226.906 207.151 226.996 207.287 227.061 207.452 cv
227.127 207.617 227.173 207.792 227.198 207.976 cv
227.223 208.159 227.236 208.374 227.236 208.62 cv
227.236 208.903 li
226.533 208.903 li
226.533 208.62 li
226.533 208.107 226.472 207.755 226.35 207.561 cv
226.229 207.367 226.016 207.269 225.714 207.269 cv
225.369 207.269 225.141 207.392 225.03 207.637 cv
224.919 207.881 224.863 208.332 224.863 208.989 cv
224.863 210.669 li
224.863 211.282 224.924 211.709 225.043 211.948 cv
225.163 212.189 225.388 212.308 225.719 212.308 cv
225.86 212.308 225.979 212.287 226.078 212.247 cv
226.175 212.207 226.254 212.151 226.312 212.08 cv
226.372 212.01 226.418 211.911 226.452 211.787 cv
226.485 211.662 226.508 211.529 226.517 211.39 cv
226.528 211.25 226.533 211.073 226.533 210.861 cv
226.533 210.532 li
227.236 210.532 li
227.236 210.826 li
227.236 211.089 227.224 211.316 227.203 211.509 cv
227.18 211.701 227.137 211.887 227.071 212.067 cv
227.006 212.248 226.918 212.395 226.808 212.508 cv
226.699 212.62 226.551 212.711 226.366 212.778 cv
226.18 212.846 225.961 212.879 225.708 212.879 cv
f
229.087 212.783 mo
228.329 212.783 li
228.329 206.794 li
229.087 206.794 li
229.087 212.783 li
229.093 205.97 mo
228.329 205.97 li
228.329 204.938 li
229.093 204.938 li
229.093 205.97 li
f
231.692 212.879 mo
231.177 212.879 230.806 212.686 230.582 212.298 cv
230.357 211.91 230.246 211.266 230.246 210.365 cv
230.246 209.258 li
230.246 208.927 230.258 208.638 230.281 208.388 cv
230.304 208.138 230.348 207.904 230.412 207.685 cv
230.476 207.466 230.56 207.287 230.665 207.148 cv
230.769 207.01 230.905 206.901 231.07 206.822 cv
231.235 206.743 231.43 206.703 231.657 206.703 cv
232.051 206.707 232.403 206.88 232.714 207.225 cv
232.714 204.397 li
233.472 204.397 li
233.472 212.783 li
232.714 212.783 li
232.714 212.358 li
232.41 212.702 232.07 212.876 231.692 212.879 cv
231.824 207.3 mo
231.503 207.3 231.287 207.435 231.174 207.702 cv
231.06 207.971 231.004 208.408 231.004 209.015 cv
231.004 210.426 li
231.004 211.08 231.061 211.553 231.177 211.843 cv
231.291 212.133 231.513 212.277 231.844 212.277 cv
232.138 212.277 232.428 212.146 232.714 211.883 cv
232.714 207.725 li
232.41 207.441 232.113 207.3 231.824 207.3 cv
f
235.475 212.783 mo
234.718 212.783 li
234.718 206.794 li
235.475 206.794 li
235.475 212.783 li
235.481 205.97 mo
234.718 205.97 li
234.718 204.938 li
235.481 204.938 li
235.481 205.97 li
f
238.081 212.879 mo
237.565 212.879 237.195 212.686 236.97 212.298 cv
236.746 211.91 236.634 211.266 236.634 210.365 cv
236.634 209.258 li
236.634 208.927 236.646 208.638 236.67 208.388 cv
236.693 208.138 236.737 207.904 236.801 207.685 cv
236.865 207.466 236.949 207.287 237.054 207.148 cv
237.158 207.01 237.294 206.901 237.459 206.822 cv
237.624 206.743 237.819 206.703 238.046 206.703 cv
238.44 206.707 238.792 206.88 239.102 207.225 cv
239.102 204.397 li
239.861 204.397 li
239.861 212.783 li
239.102 212.783 li
239.102 212.358 li
238.799 212.702 238.459 212.876 238.081 212.879 cv
238.213 207.3 mo
237.891 207.3 237.676 207.435 237.562 207.702 cv
237.449 207.971 237.392 208.408 237.392 209.015 cv
237.392 210.426 li
237.392 211.08 237.45 211.553 237.565 211.843 cv
237.679 212.133 237.902 212.277 238.232 212.277 cv
238.526 212.277 238.816 212.146 239.102 211.883 cv
239.102 207.725 li
238.799 207.441 238.502 207.3 238.213 207.3 cv
f
241.9 212.874 mo
241.599 212.874 241.371 212.763 241.212 212.54 cv
241.053 212.317 240.974 212.003 240.974 211.595 cv
240.974 206.794 li
241.738 206.794 li
241.738 211.438 li
241.738 211.741 241.784 211.957 241.875 212.085 cv
241.966 212.213 242.109 212.277 242.305 212.277 cv
242.645 212.277 242.999 212.082 243.367 211.69 cv
243.367 206.794 li
244.126 206.794 li
244.126 212.783 li
243.367 212.783 li
243.367 212.12 li
242.922 212.623 242.432 212.874 241.9 212.874 cv
f
248.404 212.783 mo
247.645 212.783 li
247.645 208.14 li
247.645 207.836 247.599 207.62 247.507 207.492 cv
247.414 207.364 247.269 207.3 247.074 207.3 cv
246.747 207.3 246.403 207.484 246.042 207.852 cv
246.042 212.783 li
245.283 212.783 li
245.283 206.794 li
246.042 206.794 li
246.042 207.417 li
246.484 206.941 246.965 206.703 247.484 206.703 cv
247.78 206.703 248.008 206.813 248.167 207.034 cv
248.325 207.256 248.404 207.57 248.404 207.978 cv
248.404 212.783 li
f
250.943 212.859 mo
250.535 212.859 250.254 212.747 250.098 212.522 cv
249.943 212.299 249.864 211.971 249.86 211.539 cv
249.86 207.3 li
249.137 207.3 li
249.137 206.794 li
249.86 206.794 li
249.86 204.943 li
250.619 204.943 li
250.619 206.794 li
251.616 206.794 li
251.616 207.3 li
250.619 207.3 li
250.619 211.468 li
250.619 211.772 250.655 211.979 250.725 212.093 cv
250.797 212.206 250.939 212.263 251.155 212.263 cv
251.294 212.263 251.435 212.249 251.581 212.222 cv
251.581 212.793 li
251.354 212.837 251.142 212.859 250.943 212.859 cv
f
600 301.404 mo
533.846 342.424 li
526.469 346.981 524.181 356.656 528.738 364.034 cv
550.952 400 li
600 400 li
600 301.404 li
cp
.147219 .0154116 0 0 cmyk
f
84.1462 329.555 mo
82.3757 323.196 77.3484 318.265 70.9558 316.618 cv
31.9558 306.572 li
25.5632 304.926 18.7791 306.814 14.157 311.526 cv
-.000244141 325.96 li
-.000244141 400 li
76.8464 400 li
90.3376 386.244 li
94.9597 381.532 96.7156 374.712 94.946 368.354 cv
84.1462 329.555 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
548.099 212.651 mo
547.665 210.956 li
552.59 209.694 li
553.024 211.39 li
548.099 212.651 li
cp
.657221 .328313 0 0 cmyk
f
545.588 215.102 mo
545.153 213.406 li
550.077 212.145 li
550.511 213.84 li
545.588 215.102 li
cp
f
543.076 217.552 mo
542.641 215.856 li
547.565 214.595 li
548 216.29 li
543.076 217.552 li
cp
f
540.563 220.002 mo
540.129 218.308 li
545.053 217.045 li
545.488 218.74 li
540.563 220.002 li
cp
f
422.735 335.975 mo
312.425 272.287 li
309.304 270.485 309.695 267.339 313.299 265.259 cv
388.412 221.906 li
392.015 219.826 397.466 219.6 400.587 221.401 cv
510.896 285.09 li
514.017 286.891 513.626 290.038 510.022 292.118 cv
434.91 335.471 li
431.306 337.551 425.855 337.776 422.735 335.975 cv
cp
.147219 .0154116 0 0 cmyk
f
514.977 159.81 mo
402.846 95.125 li
401.403 94.292 400.076 94.1631 399.008 94.6084 cv
399.012 94.5957 li
398.829 94.6807 li
398.784 94.7021 li
395.134 96.4199 li
399.096 98.3926 li
399.089 98.6113 li
399.123 190.709 li
399.124 195.317 401.976 200.698 405.494 202.728 cv
514.634 265.687 li
515.255 270.824 li
519.24 268.923 li
520.552 268.151 521.384 266.408 521.383 263.925 cv
521.348 171.828 li
521.346 167.219 518.494 161.838 514.977 159.81 cv
cp
1 .866484 .240818 .0951247 cmyk
f
514.977 159.81 mo
402.846 95.125 li
401.403 94.292 400.076 94.1631 399.008 94.6084 cv
399.012 94.5957 li
398.829 94.6807 li
398.784 94.7021 li
395.134 96.4199 li
399.096 98.3926 li
399.089 98.6113 li
399.111 159.31 li
450.141 199.629 li
519.429 164.759 li
518.28 162.625 516.711 160.809 514.977 159.81 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
516.85 161.258 mo
505.861 165.881 li
514.158 172.272 li
521.087 169.323 li
520.484 166.295 518.886 163.252 516.85 161.258 cv
cp
.940612 .760952 .191134 .0482185 cmyk
f
511.327 270.336 mo
399.196 205.651 li
395.679 203.623 392.827 198.242 392.825 193.633 cv
392.791 101.535 li
392.789 96.9268 395.638 94.835 399.156 96.8633 cv
511.286 161.548 li
514.803 163.577 517.656 168.958 517.657 173.566 cv
517.691 265.664 li
517.693 270.272 514.844 272.364 511.327 270.336 cv
cp
.147219 .0154116 0 0 cmyk
f
507.596 263.485 mo
402.872 203.103 li
399.654 201.246 397.044 196.322 397.042 192.104 cv
397.01 107.828 li
397.009 103.61 399.617 101.696 402.835 103.553 cv
507.559 163.936 li
510.778 165.792 513.388 170.716 513.389 174.934 cv
513.421 259.21 li
513.423 263.428 510.814 265.342 507.596 263.485 cv
cp
0 0 0 0 cmyk
f
507.596 263.485 mo
402.872 203.103 li
399.654 201.246 397.044 196.322 397.042 192.104 cv
397.01 107.828 li
397.009 103.61 399.617 101.696 402.835 103.553 cv
507.559 163.936 li
510.778 165.792 513.388 170.716 513.389 174.934 cv
513.421 259.21 li
513.423 263.428 510.814 265.342 507.596 263.485 cv
cp
f
513.001 273.196 mo
497.923 271.205 li
400.587 215.009 li
397.466 213.207 392.015 213.433 388.412 215.513 cv
319.44 255.319 li
310.322 254.115 li
310.322 259.289 li
310.332 259.29 li
310.271 260.485 310.952 261.636 312.425 262.485 cv
422.735 326.173 li
425.855 327.975 431.306 327.749 434.91 325.669 cv
510.022 282.316 li
512.05 281.146 513.06 279.639 513.001 278.223 cv
513.001 273.196 li
cp
1 .866484 .240818 .0951247 cmyk
f
439.866 237.687 mo
432.951 233.694 li
356.922 233.694 li
319.44 255.319 li
310.322 254.115 li
310.322 259.289 li
310.332 259.29 li
310.271 260.485 310.952 261.636 312.425 262.485 cv
422.735 326.173 li
424.384 327.125 426.684 327.506 429.018 327.351 cv
439.866 237.687 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
314.369 254.649 mo
310.322 254.115 li
310.322 259.289 li
310.332 259.29 li
310.271 260.485 310.952 261.636 312.425 262.485 cv
314.369 263.608 li
314.369 254.649 li
cp
.657221 .328313 0 0 cmyk
f
423.845 326.689 mo
426.803 327.811 431.033 327.566 434.19 326.047 cv
434.19 314.508 li
423.845 314.508 li
423.845 326.689 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
422.735 321.006 mo
312.425 257.318 li
309.304 255.517 309.695 252.37 313.299 250.289 cv
388.412 206.938 li
392.015 204.856 397.466 204.631 400.587 206.433 cv
510.896 270.12 li
514.017 271.922 513.626 275.069 510.022 277.149 cv
434.91 320.501 li
431.306 322.582 425.855 322.808 422.735 321.006 cv
cp
.147219 .0154116 0 0 cmyk
f
510.022 275.26 mo
434.91 318.611 li
431.306 320.692 425.855 320.918 422.735 319.116 cv
312.425 255.429 li
311.401 254.838 310.763 254.102 310.485 253.307 cv
309.997 254.783 310.619 256.275 312.425 257.318 cv
422.735 321.006 li
425.855 322.808 431.306 322.582 434.91 320.501 cv
510.022 277.149 li
512.444 275.751 513.408 273.872 512.837 272.242 cv
512.481 273.317 511.541 274.383 510.022 275.26 cv
cp
0 0 0 0 cmyk
f
359.342 236.234 mo
354.35 233.353 li
353.949 233.121 354 232.717 354.463 232.449 cv
360.353 229.049 li
360.816 228.781 361.516 228.752 361.917 228.983 cv
366.908 231.865 li
367.308 232.097 367.259 232.501 366.796 232.768 cv
360.905 236.169 li
360.442 236.437 359.742 236.465 359.342 236.234 cv
cp
1 .866484 .240818 .0951247 cmyk
f
367.049 240.684 mo
362.057 237.803 li
361.657 237.571 361.708 237.167 362.17 236.899 cv
368.061 233.498 li
368.524 233.231 369.224 233.202 369.625 233.434 cv
374.616 236.315 li
375.016 236.547 374.967 236.951 374.504 237.218 cv
368.612 240.619 li
368.149 240.887 367.45 240.915 367.049 240.684 cv
cp
f
374.757 245.134 mo
369.765 242.253 li
369.365 242.021 369.415 241.617 369.878 241.35 cv
375.769 237.948 li
376.232 237.682 376.931 237.652 377.333 237.884 cv
382.324 240.766 li
382.724 240.997 382.675 241.4 382.212 241.668 cv
376.32 245.069 li
375.857 245.337 375.157 245.365 374.757 245.134 cv
cp
f
385.417 241.459 mo
380.426 238.577 li
380.025 238.346 380.075 237.942 380.538 237.675 cv
385.483 234.819 li
385.946 234.553 386.646 234.523 387.047 234.755 cv
392.038 237.637 li
392.438 237.868 392.388 238.271 391.926 238.539 cv
386.98 241.395 li
386.517 241.661 385.818 241.69 385.417 241.459 cv
cp
f
393.125 245.909 mo
388.134 243.027 li
387.733 242.796 387.783 242.392 388.246 242.125 cv
393.191 239.27 li
393.654 239.003 394.354 238.974 394.755 239.205 cv
399.746 242.087 li
400.146 242.317 400.096 242.722 399.634 242.989 cv
394.688 245.845 li
394.225 246.111 393.525 246.141 393.125 245.909 cv
cp
f
400.833 250.359 mo
395.842 247.478 li
395.44 247.246 395.491 246.842 395.954 246.575 cv
400.899 243.72 li
401.362 243.452 402.061 243.424 402.463 243.655 cv
407.454 246.536 li
407.854 246.768 407.804 247.172 407.342 247.439 cv
402.396 250.294 li
401.933 250.562 401.233 250.591 400.833 250.359 cv
cp
f
408.54 254.81 mo
403.55 251.928 li
403.148 251.696 403.199 251.292 403.661 251.025 cv
408.606 248.17 li
409.069 247.902 409.769 247.874 410.17 248.104 cv
415.161 250.986 li
415.562 251.218 415.511 251.622 415.049 251.89 cv
410.103 254.744 li
409.641 255.012 408.941 255.041 408.54 254.81 cv
cp
f
416.248 259.26 mo
411.257 256.378 li
410.856 256.146 410.906 255.742 411.369 255.475 cv
416.314 252.62 li
416.777 252.353 417.477 252.323 417.878 252.555 cv
422.869 255.437 li
423.269 255.668 423.219 256.072 422.757 256.339 cv
417.811 259.194 li
417.348 259.462 416.648 259.49 416.248 259.26 cv
cp
f
423.956 263.709 mo
418.965 260.828 li
418.564 260.597 418.614 260.192 419.077 259.925 cv
424.022 257.07 li
424.485 256.803 425.185 256.773 425.586 257.005 cv
430.577 259.887 li
430.977 260.118 430.927 260.522 430.465 260.789 cv
425.519 263.645 li
425.056 263.912 424.356 263.94 423.956 263.709 cv
cp
f
431.664 268.159 mo
426.673 265.278 li
426.271 265.047 426.322 264.643 426.785 264.375 cv
431.73 261.52 li
432.193 261.253 432.892 261.224 433.294 261.455 cv
438.285 264.337 li
438.685 264.568 438.635 264.973 438.173 265.239 cv
433.227 268.095 li
432.764 268.362 432.064 268.391 431.664 268.159 cv
cp
f
439.371 272.609 mo
434.38 269.728 li
433.979 269.497 434.03 269.093 434.492 268.825 cv
439.437 265.97 li
439.9 265.703 440.6 265.674 441.001 265.905 cv
445.992 268.787 li
446.393 269.019 446.343 269.423 445.88 269.689 cv
440.934 272.545 li
440.472 272.812 439.772 272.841 439.371 272.609 cv
cp
f
447.079 277.06 mo
442.088 274.178 li
441.687 273.946 441.737 273.543 442.2 273.275 cv
447.145 270.42 li
447.608 270.153 448.308 270.124 448.709 270.355 cv
453.7 273.237 li
454.1 273.469 454.051 273.872 453.588 274.14 cv
448.642 276.995 li
448.179 277.262 447.479 277.291 447.079 277.06 cv
cp
f
454.787 281.51 mo
449.796 278.628 li
449.395 278.396 449.445 277.992 449.908 277.726 cv
454.853 274.87 li
455.316 274.604 456.016 274.574 456.417 274.806 cv
461.408 277.688 li
461.808 277.918 461.759 278.322 461.296 278.59 cv
456.35 281.445 li
455.887 281.712 455.187 281.741 454.787 281.51 cv
cp
f
396.774 239.353 mo
391.783 236.471 li
391.382 236.239 391.432 235.835 391.895 235.568 cv
396.841 232.713 li
397.303 232.445 398.003 232.417 398.404 232.647 cv
403.395 235.529 li
403.796 235.761 403.745 236.165 403.283 236.433 cv
398.338 239.287 li
397.875 239.555 397.175 239.584 396.774 239.353 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
388.951 234.836 mo
383.96 231.954 li
383.559 231.723 383.609 231.318 384.072 231.052 cv
389.017 228.196 li
389.48 227.929 390.18 227.9 390.581 228.132 cv
395.572 231.013 li
395.972 231.244 395.923 231.648 395.46 231.916 cv
390.514 234.771 li
390.052 235.038 389.351 235.067 388.951 234.836 cv
cp
f
381.115 230.312 mo
370.366 224.105 li
369.966 223.874 370.015 223.47 370.478 223.203 cv
375.424 220.348 li
375.886 220.08 376.587 220.052 376.987 220.283 cv
387.736 226.489 li
388.137 226.721 388.087 227.125 387.624 227.392 cv
382.678 230.247 li
382.217 230.515 381.516 230.543 381.115 230.312 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.593 224.811 mo
377.869 219.773 li
377.469 219.542 377.518 219.139 377.981 218.871 cv
382.927 216.016 li
383.389 215.749 384.09 215.72 384.49 215.951 cv
393.214 220.987 li
393.614 221.219 393.564 221.623 393.101 221.891 cv
388.156 224.745 li
387.693 225.013 386.993 225.042 386.593 224.811 cv
cp
f
404.481 243.803 mo
399.49 240.921 li
399.09 240.689 399.14 240.285 399.602 240.018 cv
404.548 237.163 li
405.01 236.896 405.711 236.866 406.111 237.098 cv
411.102 239.979 li
411.504 240.211 411.453 240.615 410.99 240.882 cv
406.045 243.737 li
405.583 244.005 404.883 244.033 404.481 243.803 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
412.189 248.252 mo
407.198 245.371 li
406.798 245.14 406.847 244.735 407.31 244.468 cv
412.256 241.613 li
412.719 241.346 413.419 241.316 413.819 241.548 cv
418.81 244.43 li
419.211 244.661 419.161 245.065 418.698 245.332 cv
413.753 248.188 li
413.29 248.455 412.59 248.483 412.189 248.252 cv
cp
1 .866484 .240818 .0951247 cmyk
f
419.897 252.702 mo
414.906 249.821 li
414.506 249.59 414.555 249.186 415.018 248.918 cv
419.964 246.063 li
420.427 245.796 421.127 245.767 421.527 245.998 cv
426.518 248.88 li
426.919 249.111 426.869 249.516 426.406 249.782 cv
421.461 252.638 li
420.998 252.904 420.298 252.934 419.897 252.702 cv
cp
f
427.605 257.152 mo
422.614 254.271 li
422.213 254.039 422.263 253.636 422.726 253.368 cv
427.672 250.513 li
428.135 250.246 428.834 250.217 429.235 250.448 cv
434.226 253.33 li
434.627 253.562 434.576 253.966 434.114 254.232 cv
429.169 257.088 li
428.706 257.354 428.006 257.384 427.605 257.152 cv
cp
f
435.312 261.603 mo
430.321 258.721 li
429.921 258.489 429.971 258.086 430.433 257.818 cv
435.379 254.963 li
435.842 254.696 436.542 254.667 436.942 254.898 cv
441.933 257.78 li
442.335 258.012 442.284 258.415 441.821 258.683 cv
436.876 261.538 li
436.413 261.805 435.714 261.834 435.312 261.603 cv
cp
f
443.02 266.053 mo
438.029 263.171 li
437.629 262.939 437.678 262.535 438.141 262.269 cv
443.087 259.413 li
443.55 259.146 444.25 259.117 444.65 259.349 cv
449.641 262.23 li
450.042 262.461 449.992 262.865 449.529 263.133 cv
444.584 265.988 li
444.121 266.255 443.421 266.284 443.02 266.053 cv
cp
f
450.728 270.503 mo
445.737 267.621 li
445.337 267.39 445.386 266.985 445.849 266.719 cv
450.795 263.863 li
451.258 263.596 451.958 263.567 452.358 263.799 cv
457.349 266.68 li
457.75 266.911 457.7 267.315 457.237 267.583 cv
452.292 270.438 li
451.829 270.705 451.129 270.734 450.728 270.503 cv
cp
f
458.436 274.953 mo
453.445 272.071 li
453.044 271.84 453.094 271.436 453.557 271.169 cv
458.503 268.313 li
458.966 268.046 459.665 268.018 460.066 268.248 cv
465.057 271.13 li
465.458 271.361 465.407 271.766 464.945 272.033 cv
460 274.888 li
459.537 275.155 458.837 275.185 458.436 274.953 cv
cp
f
466.143 279.403 mo
461.152 276.521 li
460.752 276.29 460.802 275.886 461.264 275.618 cv
466.21 272.764 li
466.673 272.496 467.373 272.467 467.773 272.698 cv
472.764 275.58 li
473.166 275.812 473.115 276.216 472.652 276.482 cv
467.707 279.338 li
467.244 279.605 466.545 279.634 466.143 279.403 cv
cp
f
479.846 287.314 mo
468.956 281.026 li
468.555 280.795 468.605 280.392 469.068 280.124 cv
474.013 277.269 li
474.476 277.002 475.177 276.973 475.577 277.204 cv
486.468 283.491 li
486.868 283.723 486.818 284.127 486.355 284.395 cv
481.41 287.249 li
480.947 287.517 480.247 287.546 479.846 287.314 cv
cp
f
494.852 278.65 mo
485.661 273.344 li
485.26 273.112 485.31 272.708 485.773 272.44 cv
490.719 269.586 li
491.181 269.318 491.881 269.289 492.282 269.521 cv
501.473 274.828 li
501.874 275.06 501.824 275.463 501.361 275.73 cv
496.416 278.586 li
495.953 278.853 495.253 278.882 494.852 278.65 cv
cp
f
417.979 242.932 mo
412.988 240.05 li
412.588 239.818 412.637 239.414 413.1 239.147 cv
418.046 236.292 li
418.509 236.025 419.209 235.996 419.609 236.228 cv
424.6 239.109 li
425.002 239.34 424.951 239.744 424.488 240.012 cv
419.543 242.867 li
419.08 243.134 418.381 243.163 417.979 242.932 cv
cp
f
410.08 238.371 mo
405.089 235.489 li
404.688 235.258 404.738 234.854 405.201 234.587 cv
410.146 231.731 li
410.609 231.464 411.309 231.436 411.71 231.667 cv
416.701 234.548 li
417.102 234.779 417.052 235.184 416.589 235.451 cv
411.643 238.306 li
411.18 238.573 410.481 238.603 410.08 238.371 cv
cp
f
402.18 233.81 mo
397.189 230.929 li
396.789 230.697 396.839 230.293 397.302 230.025 cv
402.247 227.171 li
402.71 226.903 403.41 226.874 403.81 227.105 cv
408.802 229.987 li
409.202 230.219 409.152 230.623 408.689 230.89 cv
403.744 233.745 li
403.281 234.013 402.581 234.041 402.18 233.81 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
394.281 229.249 mo
389.29 226.367 li
388.889 226.137 388.939 225.732 389.402 225.465 cv
394.347 222.609 li
394.81 222.343 395.51 222.313 395.911 222.545 cv
400.902 225.427 li
401.302 225.658 401.253 226.063 400.79 226.329 cv
395.844 229.185 li
395.382 229.451 394.681 229.48 394.281 229.249 cv
cp
1 .866484 .240818 .0951247 cmyk
f
425.687 247.382 mo
420.696 244.5 li
420.296 244.269 420.345 243.864 420.808 243.598 cv
425.754 240.742 li
426.217 240.475 426.917 240.446 427.317 240.678 cv
432.308 243.559 li
432.709 243.79 432.659 244.194 432.196 244.462 cv
427.251 247.316 li
426.788 247.584 426.088 247.613 425.687 247.382 cv
cp
f
433.395 251.832 mo
428.404 248.95 li
428.004 248.719 428.053 248.314 428.516 248.048 cv
433.462 245.192 li
433.925 244.925 434.624 244.896 435.025 245.128 cv
440.016 248.009 li
440.417 248.24 440.367 248.645 439.904 248.912 cv
434.959 251.767 li
434.496 252.034 433.796 252.063 433.395 251.832 cv
cp
f
441.102 256.282 mo
436.112 253.4 li
435.711 253.169 435.761 252.765 436.224 252.497 cv
441.17 249.643 li
441.632 249.375 442.332 249.346 442.733 249.577 cv
447.723 252.459 li
448.125 252.69 448.074 253.095 447.612 253.361 cv
442.666 256.217 li
442.204 256.484 441.504 256.513 441.102 256.282 cv
cp
f
448.81 260.731 mo
443.819 257.851 li
443.419 257.619 443.469 257.215 443.931 256.947 cv
448.877 254.093 li
449.34 253.825 450.04 253.796 450.44 254.027 cv
455.431 256.909 li
455.833 257.141 455.782 257.545 455.319 257.812 cv
450.374 260.667 li
449.911 260.935 449.212 260.963 448.81 260.731 cv
cp
f
456.518 265.182 mo
451.527 262.301 li
451.127 262.069 451.177 261.665 451.639 261.397 cv
456.585 258.543 li
457.048 258.275 457.748 258.246 458.148 258.478 cv
463.139 261.359 li
463.54 261.591 463.49 261.995 463.027 262.262 cv
458.082 265.117 li
457.619 265.385 456.919 265.413 456.518 265.182 cv
cp
f
464.226 269.632 mo
459.235 266.75 li
458.834 266.52 458.885 266.115 459.347 265.848 cv
464.293 262.992 li
464.756 262.726 465.455 262.696 465.856 262.928 cv
470.847 265.81 li
471.248 266.041 471.198 266.445 470.735 266.712 cv
465.79 269.567 li
465.327 269.834 464.627 269.863 464.226 269.632 cv
cp
f
471.933 274.082 mo
466.943 271.2 li
466.542 270.969 466.593 270.565 467.055 270.298 cv
472.001 267.442 li
472.463 267.176 473.163 267.146 473.564 267.378 cv
478.554 270.26 li
478.956 270.491 478.905 270.895 478.442 271.162 cv
473.497 274.018 li
473.035 274.284 472.335 274.313 471.933 274.082 cv
cp
f
479.641 278.532 mo
474.65 275.65 li
474.25 275.419 474.3 275.015 474.762 274.748 cv
479.708 271.893 li
480.171 271.626 480.871 271.597 481.271 271.828 cv
486.262 274.71 li
486.664 274.94 486.613 275.345 486.15 275.612 cv
481.205 278.468 li
480.742 278.734 480.043 278.764 479.641 278.532 cv
cp
f
487.349 282.982 mo
482.358 280.101 li
481.958 279.869 482.008 279.465 482.47 279.198 cv
487.416 276.343 li
487.879 276.075 488.579 276.047 488.979 276.278 cv
493.97 279.159 li
494.371 279.391 494.321 279.795 493.858 280.063 cv
488.913 282.917 li
488.45 283.185 487.75 283.214 487.349 282.982 cv
cp
f
413.921 231.925 mo
408.929 229.043 li
408.529 228.812 408.579 228.407 409.042 228.141 cv
413.987 225.285 li
414.45 225.018 415.15 224.989 415.551 225.221 cv
420.542 228.102 li
420.943 228.333 420.892 228.737 420.429 229.005 cv
415.484 231.859 li
415.021 232.127 414.322 232.156 413.921 231.925 cv
cp
f
406.252 227.497 mo
401.26 224.615 li
400.86 224.384 400.91 223.979 401.373 223.712 cv
406.318 220.857 li
406.781 220.59 407.48 220.561 407.882 220.792 cv
412.873 223.674 li
413.273 223.905 413.223 224.31 412.76 224.576 cv
407.815 227.432 li
407.352 227.699 406.652 227.728 406.252 227.497 cv
cp
f
398.582 223.068 mo
393.591 220.188 li
393.19 219.956 393.24 219.552 393.703 219.284 cv
398.648 216.43 li
399.111 216.162 399.811 216.133 400.212 216.364 cv
405.203 219.246 li
405.604 219.478 405.553 219.882 405.091 220.148 cv
400.145 223.004 li
399.682 223.271 398.983 223.3 398.582 223.068 cv
cp
f
390.913 218.641 mo
385.922 215.759 li
385.521 215.527 385.571 215.124 386.034 214.856 cv
390.979 212.001 li
391.442 211.734 392.142 211.705 392.543 211.937 cv
397.534 214.818 li
397.934 215.05 397.885 215.453 397.422 215.721 cv
392.476 218.576 li
392.013 218.843 391.313 218.872 390.913 218.641 cv
cp
f
398.8 214.088 mo
393.808 211.206 li
393.407 210.975 393.458 210.57 393.921 210.304 cv
395.555 209.359 li
396.018 209.092 396.718 209.063 397.119 209.295 cv
402.11 212.176 li
402.51 212.407 402.46 212.812 401.998 213.079 cv
400.363 214.022 li
399.9 214.29 399.2 214.319 398.8 214.088 cv
cp
f
408.807 219.866 mo
403.816 216.984 li
403.416 216.753 403.467 216.349 403.928 216.082 cv
405.563 215.138 li
406.026 214.871 406.726 214.842 407.127 215.073 cv
412.118 217.955 li
412.519 218.186 412.469 218.59 412.006 218.857 cv
410.371 219.801 li
409.908 220.068 409.209 220.098 408.807 219.866 cv
cp
f
416.445 224.275 mo
411.454 221.394 li
411.053 221.162 411.103 220.759 411.566 220.491 cv
413.201 219.547 li
413.664 219.28 414.364 219.251 414.764 219.482 cv
419.756 222.364 li
420.156 222.596 420.106 223 419.643 223.267 cv
418.009 224.211 li
417.546 224.478 416.845 224.507 416.445 224.275 cv
cp
f
424.083 228.685 mo
419.092 225.804 li
418.691 225.572 418.741 225.168 419.204 224.9 cv
420.839 223.957 li
421.302 223.689 422.002 223.66 422.402 223.892 cv
427.393 226.773 li
427.794 227.005 427.744 227.409 427.281 227.677 cv
425.646 228.62 li
425.183 228.888 424.483 228.916 424.083 228.685 cv
cp
f
431.72 233.095 mo
426.729 230.213 li
426.328 229.981 426.379 229.577 426.842 229.311 cv
428.476 228.366 li
428.939 228.1 429.638 228.07 430.04 228.302 cv
435.031 231.183 li
435.431 231.414 435.381 231.818 434.919 232.086 cv
433.284 233.029 li
432.821 233.297 432.121 233.326 431.72 233.095 cv
cp
f
474.359 257.712 mo
469.368 254.83 li
468.967 254.599 469.017 254.194 469.48 253.928 cv
471.115 252.983 li
471.578 252.717 472.277 252.688 472.678 252.919 cv
477.67 255.801 li
478.07 256.032 478.02 256.437 477.557 256.703 cv
475.923 257.647 li
475.46 257.914 474.76 257.943 474.359 257.712 cv
cp
f
481.996 262.121 mo
477.006 259.24 li
476.604 259.009 476.655 258.604 477.117 258.337 cv
478.753 257.394 li
479.215 257.126 479.915 257.097 480.316 257.328 cv
485.306 260.21 li
485.708 260.441 485.657 260.846 485.194 261.112 cv
483.559 262.057 li
483.097 262.324 482.397 262.353 481.996 262.121 cv
cp
f
489.634 266.531 mo
484.642 263.649 li
484.242 263.418 484.292 263.014 484.755 262.747 cv
486.389 261.803 li
486.852 261.535 487.552 261.507 487.953 261.738 cv
492.944 264.619 li
493.345 264.851 493.295 265.255 492.832 265.522 cv
491.197 266.466 li
490.734 266.733 490.035 266.763 489.634 266.531 cv
cp
f
497.271 270.94 mo
492.28 268.059 li
491.88 267.827 491.929 267.423 492.392 267.156 cv
494.027 266.212 li
494.49 265.945 495.19 265.916 495.591 266.147 cv
500.582 269.029 li
500.982 269.261 500.932 269.664 500.469 269.932 cv
498.835 270.876 li
498.372 271.143 497.672 271.172 497.271 270.94 cv
cp
f
421.629 236.375 mo
416.637 233.493 li
416.237 233.262 416.287 232.857 416.75 232.591 cv
421.695 229.735 li
422.158 229.468 422.858 229.439 423.259 229.67 cv
428.25 232.552 li
428.65 232.783 428.6 233.188 428.137 233.455 cv
423.192 236.31 li
422.729 236.577 422.029 236.606 421.629 236.375 cv
cp
f
429.337 240.825 mo
424.345 237.943 li
423.944 237.712 423.995 237.308 424.458 237.04 cv
429.403 234.186 li
429.866 233.918 430.565 233.889 430.967 234.12 cv
435.958 237.002 li
436.358 237.233 436.308 237.638 435.845 237.904 cv
430.9 240.76 li
430.437 241.027 429.737 241.056 429.337 240.825 cv
cp
f
437.044 245.274 mo
432.053 242.394 li
431.652 242.162 431.703 241.758 432.166 241.49 cv
437.111 238.636 li
437.573 238.368 438.273 238.339 438.675 238.57 cv
443.665 241.452 li
444.066 241.684 444.015 242.088 443.552 242.354 cv
438.607 245.21 li
438.145 245.478 437.445 245.506 437.044 245.274 cv
cp
f
444.752 249.725 mo
439.76 246.844 li
439.36 246.612 439.41 246.208 439.873 245.94 cv
444.818 243.085 li
445.281 242.818 445.981 242.789 446.382 243.021 cv
451.373 245.902 li
451.774 246.134 451.723 246.538 451.26 246.805 cv
446.315 249.66 li
445.852 249.928 445.153 249.956 444.752 249.725 cv
cp
f
452.46 254.175 mo
447.469 251.293 li
447.068 251.062 447.118 250.658 447.581 250.391 cv
452.526 247.535 li
452.989 247.269 453.689 247.239 454.09 247.471 cv
459.081 250.353 li
459.481 250.584 459.431 250.988 458.969 251.255 cv
454.023 254.11 li
453.56 254.377 452.86 254.406 452.46 254.175 cv
cp
f
460.168 258.625 mo
455.177 255.743 li
454.775 255.512 454.826 255.108 455.289 254.841 cv
460.234 251.985 li
460.697 251.719 461.396 251.689 461.798 251.921 cv
466.789 254.803 li
467.189 255.034 467.139 255.438 466.677 255.705 cv
461.731 258.561 li
461.268 258.827 460.568 258.856 460.168 258.625 cv
cp
f
467.875 263.075 mo
462.885 260.193 li
462.483 259.962 462.534 259.558 462.997 259.291 cv
467.942 256.436 li
468.404 256.169 469.104 256.14 469.506 256.371 cv
474.496 259.253 li
474.897 259.483 474.846 259.888 474.384 260.155 cv
469.438 263.011 li
468.976 263.277 468.276 263.307 467.875 263.075 cv
cp
f
475.583 267.525 mo
470.592 264.644 li
470.191 264.412 470.241 264.008 470.704 263.741 cv
475.649 260.886 li
476.112 260.618 476.812 260.59 477.213 260.821 cv
482.204 263.702 li
482.605 263.934 482.554 264.338 482.092 264.605 cv
477.146 267.46 li
476.683 267.728 475.984 267.757 475.583 267.525 cv
cp
f
483.291 271.976 mo
478.3 269.094 li
477.899 268.862 477.949 268.458 478.412 268.191 cv
483.357 265.336 li
483.82 265.068 484.52 265.04 484.921 265.271 cv
489.912 268.152 li
490.312 268.384 490.262 268.788 489.8 269.056 cv
484.854 271.91 li
484.391 272.178 483.691 272.207 483.291 271.976 cv
cp
f
377.562 236.924 mo
362.863 228.438 li
362.462 228.206 362.512 227.802 362.975 227.535 cv
367.921 224.68 li
368.384 224.412 369.083 224.384 369.484 224.615 cv
384.183 233.102 li
384.584 233.333 384.534 233.737 384.071 234.004 cv
379.126 236.859 li
378.663 237.126 377.963 237.155 377.562 236.924 cv
cp
f
472.254 291.595 mo
457.554 283.107 li
457.154 282.876 457.204 282.473 457.667 282.205 cv
462.612 279.35 li
463.075 279.083 463.775 279.054 464.176 279.285 cv
478.875 287.771 li
479.275 288.003 479.225 288.407 478.762 288.675 cv
473.817 291.529 li
473.354 291.797 472.655 291.826 472.254 291.595 cv
cp
f
441.429 283.628 mo
436.438 280.746 li
436.038 280.515 436.088 280.11 436.551 279.844 cv
442.442 276.442 li
442.904 276.175 443.604 276.146 444.006 276.377 cv
448.997 279.259 li
449.397 279.49 449.346 279.895 448.885 280.161 cv
442.993 283.563 li
442.53 283.83 441.83 283.859 441.429 283.628 cv
cp
f
385.456 251.312 mo
377.473 246.702 li
377.073 246.471 377.123 246.067 377.586 245.8 cv
383.476 242.398 li
383.939 242.132 384.639 242.103 385.04 242.334 cv
393.022 246.942 li
393.424 247.174 393.373 247.578 392.91 247.845 cv
387.019 251.246 li
386.556 251.514 385.856 251.542 385.456 251.312 cv
cp
f
434.003 279.34 mo
426.02 274.731 li
425.62 274.5 425.671 274.096 426.133 273.829 cv
432.024 270.428 li
432.487 270.16 433.187 270.131 433.588 270.362 cv
441.57 274.971 li
441.97 275.202 441.921 275.606 441.458 275.874 cv
435.566 279.275 li
435.103 279.542 434.404 279.571 434.003 279.34 cv
cp
f
396.576 257.731 mo
388.594 253.123 li
388.193 252.892 388.244 252.487 388.706 252.221 cv
394.597 248.819 li
395.06 248.552 395.76 248.522 396.161 248.754 cv
404.143 253.362 li
404.544 253.594 404.494 253.998 404.031 254.266 cv
398.139 257.667 li
397.677 257.934 396.977 257.963 396.576 257.731 cv
cp
f
396.215 248.785 mo
430.919 268.822 li
431.349 269.07 431.349 269.474 430.919 269.723 cv
424.912 273.19 li
424.481 273.439 423.783 273.439 423.352 273.19 cv
388.648 253.154 li
396.215 248.785 li
cp
f
462.971 291.696 mo
468.531 294.906 li
468.859 295.096 468.818 295.427 468.439 295.646 cv
466.029 297.037 li
465.65 297.256 465.076 297.28 464.748 297.09 cv
459.188 293.881 li
458.859 293.69 458.9 293.359 459.28 293.141 cv
461.69 291.749 li
462.069 291.53 462.643 291.507 462.971 291.696 cv
cp
f
455.2 287.209 mo
460.76 290.419 li
461.088 290.608 461.047 290.939 460.667 291.159 cv
458.258 292.55 li
457.878 292.77 457.304 292.793 456.975 292.604 cv
451.416 289.394 li
451.088 289.204 451.129 288.873 451.509 288.653 cv
453.918 287.263 li
454.298 287.043 454.871 287.02 455.2 287.209 cv
cp
f
447.492 282.759 mo
453.052 285.969 li
453.38 286.158 453.339 286.489 452.96 286.709 cv
450.55 288.101 li
450.171 288.319 449.596 288.343 449.268 288.153 cv
443.709 284.943 li
443.38 284.754 443.422 284.423 443.801 284.203 cv
446.211 282.813 li
446.59 282.593 447.164 282.569 447.492 282.759 cv
cp
f
459.456 284.752 mo
465.015 287.962 li
465.344 288.151 465.302 288.482 464.924 288.701 cv
462.513 290.093 li
462.135 290.312 461.56 290.336 461.232 290.146 cv
455.673 286.937 li
455.344 286.746 455.385 286.415 455.764 286.196 cv
458.175 284.805 li
458.553 284.586 459.128 284.563 459.456 284.752 cv
cp
f
467.73 175.174 mo
462.957 172.418 li
462.514 172.162 462.147 171.473 462.137 170.878 cv
462.128 170.283 462.479 170.009 462.922 170.264 cv
467.696 173.021 li
468.138 173.276 468.506 173.965 468.515 174.56 cv
468.524 175.154 468.174 175.43 467.73 175.174 cv
cp
.147219 .0154116 0 0 cmyk
f
479.101 181.739 mo
472.062 177.675 li
471.62 177.419 471.253 176.729 471.243 176.135 cv
471.233 175.54 471.585 175.266 472.028 175.521 cv
479.066 179.585 li
479.51 179.841 479.876 180.53 479.885 181.125 cv
479.895 181.72 479.545 181.995 479.101 181.739 cv
cp
f
465.365 200.63 mo
460.592 197.874 li
460.149 197.618 459.782 196.929 459.772 196.334 cv
459.762 195.739 460.114 195.465 460.556 195.72 cv
465.331 198.477 li
465.773 198.731 466.14 199.421 466.15 200.016 cv
466.159 200.61 465.808 200.886 465.365 200.63 cv
cp
f
475.502 206.482 mo
468.463 202.418 li
468.019 202.162 467.653 201.473 467.643 200.878 cv
467.634 200.283 467.985 200.009 468.427 200.265 cv
475.467 204.328 li
475.91 204.584 476.276 205.273 476.286 205.868 cv
476.296 206.463 475.944 206.738 475.502 206.482 cv
cp
f
454.641 172.087 mo
451.659 170.365 li
451.217 170.109 450.849 169.42 450.84 168.825 cv
450.83 168.23 451.181 167.956 451.624 168.212 cv
454.606 169.934 li
455.05 170.188 455.416 170.878 455.426 171.473 cv
455.435 172.067 455.084 172.343 454.641 172.087 cv
cp
f
464.825 182.437 mo
455.714 177.176 li
455.27 176.92 454.903 176.231 454.894 175.637 cv
454.885 175.042 455.235 174.767 455.678 175.022 cv
464.79 180.283 li
465.232 180.539 465.599 181.229 465.609 181.823 cv
465.619 182.418 465.267 182.692 464.825 182.437 cv
cp
f
458.842 187.923 mo
455.859 186.201 li
455.417 185.945 455.05 185.256 455.04 184.661 cv
455.03 184.066 455.382 183.792 455.825 184.048 cv
458.806 185.77 li
459.25 186.024 459.616 186.714 459.626 187.309 cv
459.635 187.903 459.284 188.179 458.842 187.923 cv
cp
f
479.021 217.455 mo
471.056 212.856 li
470.613 212.601 470.247 211.911 470.237 211.316 cv
470.227 210.722 470.579 210.446 471.021 210.702 cv
478.986 215.301 li
479.429 215.557 479.796 216.246 479.805 216.841 cv
479.815 217.436 479.464 217.711 479.021 217.455 cv
cp
f
457.92 196.331 mo
456.006 195.227 li
455.563 194.971 455.196 194.281 455.186 193.687 cv
455.177 193.092 455.528 192.816 455.97 193.072 cv
457.885 194.178 li
458.328 194.434 458.695 195.123 458.704 195.718 cv
458.714 196.313 458.363 196.587 457.92 196.331 cv
cp
f
458.529 205.623 mo
456.152 204.251 li
455.709 203.995 455.343 203.306 455.333 202.711 cv
455.323 202.116 455.675 201.842 456.117 202.098 cv
458.494 203.47 li
458.937 203.726 459.303 204.415 459.313 205.01 cv
459.323 205.604 458.972 205.879 458.529 205.623 cv
cp
f
467.777 210.963 mo
461.51 207.345 li
461.067 207.089 460.7 206.399 460.69 205.805 cv
460.68 205.21 461.032 204.935 461.474 205.19 cv
467.742 208.809 li
468.184 209.064 468.552 209.754 468.561 210.349 cv
468.571 210.943 468.219 211.219 467.777 210.963 cv
cp
f
460.731 211.365 mo
456.225 208.764 li
455.782 208.508 455.416 207.818 455.406 207.224 cv
455.396 206.629 455.748 206.354 456.19 206.61 cv
460.696 209.212 li
461.139 209.467 461.506 210.156 461.515 210.751 cv
461.525 211.346 461.175 211.621 460.731 211.365 cv
cp
f
485.859 221.422 mo
482.966 219.751 li
482.523 219.496 482.156 218.807 482.146 218.212 cv
482.136 217.617 482.488 217.342 482.93 217.598 cv
485.825 219.269 li
486.267 219.524 486.635 220.214 486.644 220.809 cv
486.654 221.403 486.302 221.678 485.859 221.422 cv
cp
f
469.934 194.327 mo
461.969 189.729 li
461.526 189.473 461.16 188.783 461.15 188.188 cv
461.14 187.594 461.492 187.319 461.934 187.575 cv
469.899 192.174 li
470.343 192.43 470.709 193.119 470.719 193.714 cv
470.728 194.309 470.377 194.583 469.934 194.327 cv
cp
f
469.668 189.703 mo
455.786 181.688 li
455.344 181.433 454.976 180.743 454.967 180.148 cv
454.958 179.554 455.308 179.279 455.752 179.535 cv
469.634 187.55 li
470.076 187.806 470.443 188.495 470.453 189.09 cv
470.463 189.685 470.111 189.959 469.668 189.703 cv
cp
f
463.897 195.313 mo
455.932 190.714 li
455.49 190.458 455.123 189.769 455.113 189.174 cv
455.103 188.579 455.455 188.304 455.897 188.56 cv
463.862 193.158 li
464.305 193.414 464.673 194.104 464.682 194.698 cv
464.691 195.293 464.341 195.568 463.897 195.313 cv
cp
f
475.975 197.815 mo
473.082 196.145 li
472.638 195.889 472.271 195.199 472.262 194.604 cv
472.253 194.01 472.603 193.735 473.047 193.99 cv
475.94 195.661 li
476.384 195.917 476.75 196.606 476.76 197.201 cv
476.769 197.796 476.418 198.071 475.975 197.815 cv
cp
f
500.57 194.135 mo
483.433 184.24 li
482.991 183.984 482.624 183.295 482.614 182.7 cv
482.604 182.105 482.956 181.831 483.398 182.087 cv
500.536 191.98 li
500.978 192.236 501.345 192.926 501.355 193.521 cv
501.365 194.115 501.013 194.39 500.57 194.135 cv
cp
f
465.653 205.267 mo
456.079 199.738 li
455.635 199.482 455.269 198.793 455.26 198.198 cv
455.25 197.604 455.601 197.329 456.044 197.585 cv
465.618 203.112 li
466.061 203.368 466.428 204.058 466.437 204.652 cv
466.447 205.247 466.096 205.522 465.653 205.267 cv
cp
f
458.625 169.917 mo
451.586 165.853 li
451.143 165.597 450.776 164.907 450.766 164.313 cv
450.757 163.718 451.108 163.443 451.552 163.699 cv
458.59 167.763 li
459.033 168.019 459.399 168.708 459.409 169.303 cv
459.419 169.897 459.068 170.172 458.625 169.917 cv
cp
f
460.469 215.685 mo
452.317 210.978 li
451.875 210.722 451.508 210.032 451.498 209.438 cv
451.488 208.843 451.84 208.568 452.282 208.824 cv
460.434 213.53 li
460.878 213.786 461.244 214.476 461.254 215.07 cv
461.263 215.665 460.913 215.94 460.469 215.685 cv
cp
f
252.029 222.772 mo
294.019 198.323 li
302.338 193.521 310.182 192.761 316.109 196.18 cv
322.034 199.602 325.298 206.775 325.298 216.381 cv
325.298 219.457 li
325.001 219.658 324.69 219.854 324.372 220.048 cv
324.372 216.381 li
324.372 207.12 321.273 200.231 315.646 196.982 cv
310.018 193.734 302.502 194.495 294.482 199.125 cv
252.492 223.573 li
252.273 223.704 251.988 223.627 251.86 223.404 cv
251.732 223.184 251.808 222.899 252.029 222.772 cv
cp
f
382.977 193.647 mo
382.977 99.0205 li
382.977 80.0801 396.323 56.9639 412.727 47.4941 cv
420.76 42.8564 428.339 42.1211 434.063 45.4258 cv
439.788 48.7305 442.94 55.6592 442.94 64.9355 cv
442.94 71.5342 li
442.632 71.8428 442.323 72.1514 442.014 72.46 cv
442.014 64.9355 li
442.014 56.0039 439.026 49.3594 433.6 46.2275 cv
428.174 43.0967 420.926 43.8301 413.19 48.2949 cv
397.042 57.6191 383.903 80.374 383.903 99.0205 cv
383.903 193.647 li
383.903 209.347 374.666 227.929 362.138 239.11 cv
362.138 238.696 362.138 238.282 362.138 237.868 cv
374.171 226.811 382.977 208.855 382.977 193.647 cv
cp
f
442.94 74.4297 mo
442.94 74.4297 li
444.461 72.9863 451.551 66.7314 461.896 65.1504 cv
473.613 63.3584 478.455 77.0605 478.455 77.0605 cv
478.455 77.0605 479.811 84.1777 479.762 88.3906 cv
479.714 92.6025 479.412 107.9 479.412 107.9 cv
442.269 86.5039 li
442.269 86.498 li
442.12 86.4219 442.014 86.2705 442.014 86.0908 cv
442.014 75.2305 li
442.323 74.9219 442.632 74.7393 442.94 74.4297 cv
cp
1 .866484 .240818 .0951247 cmyk
f
469.269 65.7217 mo
434.063 45.4258 li
434.201 45.9307 li
428.775 42.4258 420.575 42.0479 409.605 50.0918 cv
387.817 66.0703 385.2 88.3135 384.089 92.4814 cv
382.978 96.6504 383.435 123.058 383.435 123.058 cv
383.435 123.058 383.363 186.751 383.29 194.159 cv
383.218 201.566 381.061 209.878 376.899 218.852 cv
372.737 227.826 362.047 238.716 362.047 238.716 cv
362.047 251.68 li
363.754 265.696 369.709 268.965 378.569 269.764 cv
385.72 270.408 393.34 265.245 399.427 259.618 cv
399.203 259.853 399.058 260.001 399.058 260.001 cv
399.058 272.965 li
400.765 286.981 406.72 290.249 415.581 291.049 cv
424.441 291.848 434.023 283.731 440.516 276.862 cv
447.009 269.993 452.484 259.502 455.525 250.039 cv
458.567 240.575 457.559 228.348 457.559 228.348 cv
457.559 228.348 457.632 158.723 457.705 144.997 cv
457.777 131.271 458.213 133.667 462.716 119.868 cv
467.219 106.068 479.154 96.4092 479.154 96.4092 cv
507.795 87.8799 li
469.269 65.7217 li
cp
.147219 .0154116 0 0 cmyk
f
407.981 289.883 mo
407.499 289.227 401.225 285.021 399.628 277.612 cv
398.738 273.491 398.829 267.227 398.829 267.227 cv
398.829 267.227 398.854 263.743 398.938 260.575 cv
399.15 260.396 li
399.15 259.981 399.15 259.567 399.15 259.153 cv
398.976 259.306 li
399 258.59 399.027 257.919 399.058 257.35 cv
399.24 254.058 396.807 247.037 396.807 247.037 cv
396.807 247.037 393.357 237.632 383.081 237.269 cv
373.956 236.946 364.352 243.51 362.309 244.988 cv
362.309 240.742 li
362.174 240.834 362.027 240.922 361.886 241.012 cv
361.898 240.442 361.912 239.861 361.927 239.29 cv
362.138 239.11 li
362.138 238.696 362.138 238.282 362.138 237.867 cv
361.965 238.02 li
361.988 237.305 362.015 236.634 362.047 236.064 cv
362.228 232.772 359.796 225.752 359.796 225.752 cv
359.796 225.752 356.345 216.347 346.069 215.983 cv
336.945 215.661 327.341 222.225 325.298 223.703 cv
325.298 219.457 li
325.001 219.657 324.69 219.854 324.372 220.048 cv
324.372 227.483 li
324.372 236.491 327.373 243.262 332.823 246.624 cv
332.845 246.649 li
333.036 246.759 li
333.185 246.854 li
333.288 246.903 li
370.969 268.598 li
370.922 268.548 li
407.981 289.883 li
cp
1 .866484 .240818 .0951247 cmyk
f
353.121 217.466 mo
353.121 217.466 352.839 217.32 352.341 217.117 cv
352.188 217.044 352.041 216.958 351.885 216.889 cv
316.109 196.181 li
316.109 196.181 309.536 192.726 301.586 195.636 cv
293.635 198.546 251.976 223.537 251.976 223.537 cv
289.193 244.979 li
289.2 244.976 li
289.3 245.002 li
326.205 266.265 li
326.205 266.265 347.085 253.329 361.529 244.983 cv
362.456 244.45 li
368.361 241.054 373.052 238.518 374.523 238.128 cv
383.428 235.768 389.626 238.644 391.239 239.529 cv
353.121 217.466 li
cp
.147219 .0154116 0 0 cmyk
f
391.239 239.529 mo
391.67 239.778 li
391.67 239.778 391.512 239.679 391.239 239.529 cv
cp
f
479.952 95.7158 mo
479.952 95.7158 li
481.472 94.2715 488.562 88.0166 498.908 86.4355 cv
510.625 84.6436 515.467 98.3457 515.467 98.3457 cv
515.467 98.3457 516.822 105.463 516.774 109.676 cv
516.725 113.888 516.424 129.186 516.424 129.186 cv
479.281 107.789 li
479.281 107.784 li
479.132 107.707 479.026 107.556 479.026 107.376 cv
479.026 96.5156 li
479.335 96.207 479.643 96.0244 479.952 95.7158 cv
cp
1 .866484 .240818 .0951247 cmyk
f
415.219 291.567 mo
419.314 291.567 423.848 290.199 428.539 287.491 cv
444.824 278.089 458.073 255.141 458.073 236.337 cv
458.073 141.71 li
458.073 123.064 471.211 100.309 487.36 90.9834 cv
495.095 86.5195 502.344 85.7842 507.769 88.916 cv
513.195 92.0498 516.183 98.6934 516.183 107.626 cv
516.183 128.78 li
516.183 129.036 516.39 129.243 516.646 129.243 cv
516.902 129.243 517.109 129.036 517.109 128.78 cv
517.109 107.626 li
517.109 98.3486 513.957 91.4199 508.232 88.1152 cv
502.508 84.8096 494.93 85.5449 486.897 90.1826 cv
470.492 99.6533 457.146 122.77 457.146 141.71 cv
457.146 236.337 li
457.146 254.847 444.105 277.435 428.076 286.689 cv
420.399 291.121 413.204 291.852 407.818 288.741 cv
402.432 285.633 399.467 279.038 399.467 270.173 cv
399.467 259.07 li
399.467 249.465 396.204 242.291 390.278 238.87 cv
384.352 235.45 376.508 236.21 368.189 241.014 cv
326.2 265.462 li
325.978 265.589 325.902 265.873 326.031 266.094 cv
326.158 266.316 326.445 266.389 326.663 266.263 cv
368.652 241.814 li
376.672 237.185 384.188 236.423 389.815 239.672 cv
395.442 242.921 398.541 249.811 398.541 259.07 cv
398.541 270.173 li
398.541 279.383 401.672 286.262 407.355 289.544 cv
409.697 290.896 412.351 291.567 415.219 291.567 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
418.118 164.902 mo
411.91 161.318 li
411.335 160.986 410.857 160.09 410.844 159.316 cv
410.832 158.543 411.289 158.186 411.865 158.518 cv
418.072 162.102 li
418.648 162.435 419.125 163.331 419.137 164.104 cv
419.15 164.878 418.693 165.235 418.118 164.902 cv
cp
.657221 .328313 0 0 cmyk
f
431.299 172.513 mo
422.145 167.228 li
421.569 166.896 421.093 165.999 421.08 165.226 cv
421.067 164.452 421.524 164.095 422.1 164.428 cv
431.253 169.712 li
431.829 170.045 432.305 170.941 432.318 171.714 cv
432.331 172.487 431.874 172.845 431.299 172.513 cv
cp
f
417.415 141.245 mo
405.566 134.404 li
404.991 134.071 404.513 133.175 404.501 132.402 cv
404.488 131.629 404.945 131.271 405.521 131.604 cv
417.369 138.444 li
417.945 138.776 418.422 139.673 418.434 140.446 cv
418.447 141.22 417.99 141.577 417.415 141.245 cv
cp
f
409.635 148.379 mo
405.757 146.14 li
405.18 145.808 404.704 144.911 404.691 144.138 cv
404.678 143.364 405.135 143.007 405.712 143.34 cv
409.589 145.578 li
410.165 145.911 410.642 146.808 410.654 147.581 cv
410.667 148.354 410.211 148.711 409.635 148.379 cv
cp
f
408.436 159.313 mo
405.947 157.876 li
405.371 157.543 404.894 156.646 404.882 155.873 cv
404.869 155.1 405.326 154.742 405.901 155.075 cv
408.39 156.512 li
408.967 156.845 409.443 157.741 409.456 158.515 cv
409.469 159.288 409.011 159.646 408.436 159.313 cv
cp
f
424.059 156.707 mo
413.702 150.728 li
413.126 150.395 412.649 149.498 412.636 148.725 cv
412.624 147.951 413.081 147.594 413.656 147.927 cv
424.013 153.906 li
424.59 154.239 425.066 155.136 425.079 155.909 cv
425.092 156.682 424.635 157.039 424.059 156.707 cv
cp
f
423.713 150.694 mo
405.662 140.272 li
405.086 139.939 404.609 139.043 404.596 138.27 cv
404.584 137.496 405.041 137.139 405.616 137.472 cv
423.668 147.894 li
424.243 148.227 424.72 149.123 424.733 149.896 cv
424.746 150.669 424.289 151.026 423.713 150.694 cv
cp
f
416.209 157.987 mo
405.851 152.008 li
405.276 151.675 404.799 150.778 404.786 150.006 cv
404.774 149.232 405.23 148.875 405.806 149.207 cv
416.164 155.188 li
416.739 155.52 417.217 156.416 417.229 157.189 cv
417.242 157.963 416.785 158.32 416.209 157.987 cv
cp
f
431.915 161.242 mo
428.151 159.069 li
427.576 158.737 427.098 157.841 427.086 157.067 cv
427.073 156.294 427.53 155.937 428.106 156.27 cv
431.869 158.441 li
432.445 158.774 432.922 159.671 432.934 160.444 cv
432.947 161.218 432.49 161.575 431.915 161.242 cv
cp
f
421.193 131.801 mo
414.986 128.217 li
414.41 127.884 413.933 126.987 413.921 126.215 cv
413.908 125.441 414.365 125.084 414.94 125.416 cv
421.148 129 li
421.723 129.333 422.201 130.229 422.214 131.002 cv
422.226 131.775 421.769 132.133 421.193 131.801 cv
cp
f
435.979 140.338 mo
426.827 135.053 li
426.251 134.721 425.773 133.824 425.76 133.051 cv
425.749 132.277 426.205 131.92 426.781 132.253 cv
435.934 137.537 li
436.51 137.869 436.987 138.766 437 139.539 cv
437.012 140.313 436.555 140.67 435.979 140.338 cv
cp
f
418.118 164.902 mo
411.91 161.318 li
411.335 160.986 410.857 160.09 410.844 159.316 cv
410.832 158.543 411.289 158.186 411.865 158.518 cv
418.072 162.102 li
418.648 162.435 419.125 163.331 419.137 164.104 cv
419.15 164.878 418.693 165.235 418.118 164.902 cv
cp
f
431.299 172.513 mo
422.145 167.228 li
421.569 166.896 421.093 165.999 421.08 165.226 cv
421.067 164.452 421.524 164.095 422.1 164.428 cv
431.253 169.712 li
431.829 170.045 432.305 170.941 432.318 171.714 cv
432.331 172.487 431.874 172.845 431.299 172.513 cv
cp
f
404.173 127.786 mo
400.295 125.548 li
399.719 125.215 399.242 124.318 399.229 123.545 cv
399.217 122.771 399.674 122.414 400.25 122.747 cv
404.127 124.986 li
404.703 125.318 405.18 126.215 405.192 126.988 cv
405.205 127.762 404.749 128.119 404.173 127.786 cv
cp
f
417.415 141.245 mo
405.566 134.404 li
404.991 134.071 404.513 133.175 404.501 132.402 cv
404.488 131.629 404.945 131.271 405.521 131.604 cv
417.369 138.444 li
417.945 138.776 418.422 139.673 418.434 140.446 cv
418.447 141.22 417.99 141.577 417.415 141.245 cv
cp
f
409.635 148.379 mo
405.757 146.14 li
405.18 145.808 404.704 144.911 404.691 144.138 cv
404.678 143.364 405.135 143.007 405.712 143.34 cv
409.589 145.578 li
410.165 145.911 410.642 146.808 410.654 147.581 cv
410.667 148.354 410.211 148.711 409.635 148.379 cv
cp
f
435.875 186.781 mo
425.518 180.801 li
424.942 180.469 424.465 179.572 424.452 178.799 cv
424.44 178.025 424.896 177.668 425.472 178 cv
435.83 183.98 li
436.405 184.313 436.883 185.209 436.895 185.982 cv
436.908 186.756 436.451 187.113 435.875 186.781 cv
cp
f
408.436 159.313 mo
405.947 157.876 li
405.371 157.543 404.894 156.646 404.882 155.873 cv
404.869 155.1 405.326 154.742 405.901 155.075 cv
408.39 156.512 li
408.967 156.845 409.443 157.741 409.456 158.515 cv
409.469 159.288 409.011 159.646 408.436 159.313 cv
cp
f
409.228 171.396 mo
406.137 169.611 li
405.561 169.278 405.084 168.383 405.072 167.609 cv
405.059 166.836 405.515 166.479 406.092 166.811 cv
409.182 168.596 li
409.759 168.928 410.236 169.824 410.248 170.598 cv
410.26 171.371 409.804 171.729 409.228 171.396 cv
cp
f
421.254 178.339 mo
413.104 173.634 li
412.528 173.301 412.051 172.404 412.039 171.631 cv
412.026 170.858 412.482 170.501 413.058 170.833 cv
421.208 175.538 li
421.784 175.871 422.26 176.768 422.273 177.541 cv
422.286 178.314 421.829 178.672 421.254 178.339 cv
cp
f
412.092 178.862 mo
406.232 175.479 li
405.656 175.146 405.179 174.25 405.167 173.477 cv
405.154 172.703 405.611 172.346 406.187 172.679 cv
412.047 176.062 li
412.622 176.395 413.099 177.291 413.112 178.064 cv
413.125 178.837 412.668 179.194 412.092 178.862 cv
cp
f
424.059 156.707 mo
413.702 150.728 li
413.126 150.395 412.649 149.498 412.636 148.725 cv
412.624 147.951 413.081 147.594 413.656 147.927 cv
424.013 153.906 li
424.59 154.239 425.066 155.136 425.079 155.909 cv
425.092 156.682 424.635 157.039 424.059 156.707 cv
cp
f
423.713 150.694 mo
405.662 140.272 li
405.086 139.939 404.609 139.043 404.596 138.27 cv
404.584 137.496 405.041 137.139 405.616 137.472 cv
423.668 147.894 li
424.243 148.227 424.72 149.123 424.733 149.896 cv
424.746 150.669 424.289 151.026 423.713 150.694 cv
cp
f
416.209 157.987 mo
405.851 152.008 li
405.276 151.675 404.799 150.778 404.786 150.006 cv
404.774 149.232 405.23 148.875 405.806 149.207 cv
416.164 155.188 li
416.739 155.52 417.217 156.416 417.229 157.189 cv
417.242 157.963 416.785 158.32 416.209 157.987 cv
cp
f
431.915 161.242 mo
428.151 159.069 li
427.576 158.737 427.098 157.841 427.086 157.067 cv
427.073 156.294 427.53 155.937 428.106 156.27 cv
431.869 158.441 li
432.445 158.774 432.922 159.671 432.934 160.444 cv
432.947 161.218 432.49 161.575 431.915 161.242 cv
cp
f
418.492 170.932 mo
406.042 163.743 li
405.467 163.411 404.989 162.515 404.976 161.741 cv
404.964 160.968 405.421 160.61 405.997 160.943 cv
418.447 168.131 li
419.022 168.464 419.5 169.36 419.512 170.134 cv
419.524 170.907 419.068 171.264 418.492 170.932 cv
cp
f
409.352 124.964 mo
400.2 119.68 li
399.624 119.348 399.146 118.451 399.135 117.678 cv
399.122 116.904 399.578 116.547 400.154 116.879 cv
409.307 122.164 li
409.884 122.496 410.36 123.393 410.373 124.166 cv
410.385 124.939 409.928 125.297 409.352 124.964 cv
cp
f
411.752 184.479 mo
401.15 178.358 li
400.575 178.025 400.097 177.129 400.085 176.355 cv
400.073 175.582 400.529 175.226 401.105 175.558 cv
411.706 181.678 li
412.282 182.011 412.759 182.907 412.771 183.681 cv
412.784 184.454 412.327 184.812 411.752 184.479 cv
cp
f
416.659 220.587 mo
410.451 217.003 li
409.875 216.671 409.398 215.774 409.385 215.001 cv
409.373 214.228 409.83 213.87 410.406 214.202 cv
416.613 217.786 li
417.189 218.119 417.666 219.016 417.678 219.789 cv
417.691 220.563 417.234 220.92 416.659 220.587 cv
cp
f
429.84 228.197 mo
420.686 222.912 li
420.11 222.58 419.634 221.684 419.621 220.91 cv
419.608 220.137 420.065 219.779 420.64 220.111 cv
429.794 225.396 li
430.37 225.729 430.846 226.625 430.859 227.398 cv
430.872 228.172 430.415 228.529 429.84 228.197 cv
cp
f
415.955 196.93 mo
404.107 190.089 li
403.531 189.756 403.054 188.859 403.042 188.086 cv
403.029 187.313 403.486 186.956 404.062 187.288 cv
415.91 194.129 li
416.486 194.461 416.963 195.357 416.975 196.131 cv
416.988 196.904 416.531 197.262 415.955 196.93 cv
cp
f
408.176 204.063 mo
404.298 201.824 li
403.721 201.492 403.245 200.596 403.232 199.822 cv
403.219 199.049 403.677 198.691 404.252 199.023 cv
408.13 201.263 li
408.706 201.595 409.182 202.491 409.195 203.265 cv
409.208 204.038 408.751 204.396 408.176 204.063 cv
cp
f
406.976 214.997 mo
404.488 213.56 li
403.912 213.228 403.434 212.331 403.423 211.558 cv
403.41 210.784 403.866 210.427 404.442 210.76 cv
406.931 212.196 li
407.508 212.529 407.984 213.426 407.997 214.199 cv
408.01 214.973 407.552 215.33 406.976 214.997 cv
cp
f
422.599 212.392 mo
412.243 206.411 li
411.667 206.079 411.189 205.183 411.177 204.409 cv
411.165 203.636 411.621 203.278 412.197 203.611 cv
422.554 209.591 li
423.131 209.923 423.607 210.819 423.62 211.593 cv
423.633 212.366 423.176 212.724 422.599 212.392 cv
cp
f
422.254 206.379 mo
404.203 195.956 li
403.627 195.624 403.149 194.728 403.136 193.954 cv
403.125 193.181 403.581 192.823 404.157 193.156 cv
422.209 203.578 li
422.784 203.91 423.261 204.807 423.274 205.58 cv
423.286 206.354 422.83 206.711 422.254 206.379 cv
cp
f
414.75 213.672 mo
404.392 207.692 li
403.817 207.359 403.34 206.463 403.327 205.689 cv
403.314 204.916 403.771 204.56 404.347 204.892 cv
414.705 210.871 li
415.28 211.204 415.758 212.101 415.77 212.874 cv
415.782 213.647 415.326 214.005 414.75 213.672 cv
cp
f
430.455 216.927 mo
426.692 214.754 li
426.116 214.422 425.639 213.525 425.627 212.752 cv
425.614 211.979 426.071 211.621 426.647 211.953 cv
430.41 214.126 li
430.986 214.459 431.463 215.355 431.475 216.129 cv
431.488 216.902 431.031 217.26 430.455 216.927 cv
cp
f
462.037 350.2 mo
473.534 343.563 li
485.031 350.2 li
473.534 356.838 li
462.037 350.2 li
cp
.147219 .0154116 0 0 cmyk
f
486.441 335.922 mo
497.937 329.284 li
509.434 335.922 li
497.937 342.56 li
486.441 335.922 li
cp
f
510.77 321.984 mo
522.267 315.347 li
533.764 321.984 li
522.267 328.622 li
510.77 321.984 li
cp
f
497.937 335.922 mo
497.937 300.521 li
486.441 293.884 li
486.441 329.284 li
497.937 335.922 li
cp
.172946 .892424 1 .0698253 cmyk
f
497.937 300.521 mo
509.434 293.884 li
509.434 329.284 li
497.937 335.922 li
497.937 300.521 li
cp
.139773 1 .00201419 0 cmyk
f
497.937 335.922 mo
497.937 300.521 li
486.441 293.884 li
486.441 329.284 li
497.937 335.922 li
cp
f
473.534 350.2 mo
473.534 330.287 li
462.037 323.649 li
462.037 343.563 li
473.534 350.2 li
cp
f
473.534 330.287 mo
485.031 323.649 li
485.031 343.563 li
473.534 350.2 li
473.534 330.287 li
cp
f
462.037 323.649 mo
473.534 317.012 li
485.031 323.649 li
473.534 330.287 li
462.037 323.649 li
cp
0 .912535 0 0 cmyk
f
522.267 321.984 mo
522.267 273.309 li
510.77 266.671 li
510.77 315.347 li
522.267 321.984 li
cp
.139773 1 .00201419 0 cmyk
f
522.267 273.309 mo
533.764 266.671 li
533.764 315.347 li
522.267 321.984 li
522.267 273.309 li
cp
f
510.77 266.671 mo
522.267 260.033 li
533.764 266.671 li
522.267 273.309 li
510.77 266.671 li
cp
0 .912535 0 0 cmyk
f
486.441 293.884 mo
497.937 287.246 li
509.434 293.884 li
497.937 300.521 li
486.441 293.884 li
cp
f
298.475 283.788 mo
298.475 283.788 294.927 281.998 292.748 284.663 cv
290.568 287.328 287.453 293.619 287.356 297.87 cv
287.26 302.121 290.72 301.834 292.777 300.828 cv
294.834 299.821 300.844 291.105 301.207 289.397 cv
301.571 287.689 300.778 285.38 300.2 284.928 cv
299.622 284.476 298.475 283.788 298.475 283.788 cv
cp
.657221 .328313 0 0 cmyk
f
299.25 282.933 mo
299.414 286.609 li
299.449 287.392 299.056 288.137 298.376 288.522 cv
297.756 288.874 296.855 289.144 295.637 288.948 cv
292.965 288.519 292.726 287.755 292.535 284.079 cv
292.344 280.403 299.25 282.933 299.25 282.933 cv
cp
.147219 .0154116 0 0 cmyk
f
285.485 276.719 mo
285.485 276.719 281.936 274.929 279.757 277.594 cv
277.578 280.259 274.462 286.55 274.366 290.801 cv
274.269 295.052 277.729 294.765 279.787 293.759 cv
281.844 292.752 287.852 284.035 288.217 282.327 cv
288.58 280.619 287.787 278.311 287.209 277.858 cv
286.631 277.406 285.485 276.719 285.485 276.719 cv
cp
.657221 .328313 0 0 cmyk
f
286.26 275.863 mo
286.424 279.54 li
286.459 280.322 286.065 281.066 285.385 281.453 cv
284.765 281.805 283.865 282.074 282.647 281.879 cv
279.974 281.449 279.735 280.685 279.545 277.009 cv
279.353 273.333 286.26 275.863 286.26 275.863 cv
cp
.147219 .0154116 0 0 cmyk
f
317.926 208.361 mo
316.876 191.271 299.418 210.876 299.418 210.876 cv
287.469 222.588 li
276.71 234.407 li
274.608 236.716 273.631 239.833 274.037 242.928 cv
278.389 276.07 li
278.604 277.707 280.005 278.914 281.656 278.901 cv
282.122 278.897 282.656 278.854 283.268 278.76 cv
287.151 278.155 286.864 274.463 286.864 274.463 cv
286.068 243.465 li
308.665 229.844 li
308.665 229.844 318.976 225.452 317.926 208.361 cv
cp
1 .866484 .240818 .0951247 cmyk
f
330.917 214.873 mo
329.866 197.783 312.408 217.388 312.408 217.388 cv
300.46 229.1 li
289.7 240.919 li
287.598 243.228 286.621 246.344 287.027 249.439 cv
291.38 282.582 li
291.594 284.219 292.995 285.426 294.646 285.412 cv
295.112 285.409 295.646 285.366 296.259 285.271 cv
300.141 284.666 299.854 280.975 299.854 280.975 cv
299.059 249.977 li
321.655 236.355 li
321.655 236.355 331.967 231.964 330.917 214.873 cv
cp
f
320.588 160.013 mo
333.824 165.5 333.558 173.324 333.558 173.324 cv
333.558 173.324 330.966 202.007 331.85 221.163 cv
332.22 229.171 289.304 229.782 295.705 208.418 cv
303.251 183.228 300.423 162.835 303.955 159.76 cv
307.488 156.684 317.165 158.594 320.588 160.013 cv
cp
.657221 .328313 0 0 cmyk
f
324.846 166.95 mo
324.154 169.638 320.634 171.054 316.982 170.113 cv
313.331 169.173 310.932 166.232 311.625 163.545 cv
312.317 160.857 315.838 159.441 319.489 160.382 cv
323.14 161.322 325.539 164.264 324.846 166.95 cv
cp
0 .286015 .250584 0 cmyk
f
317.223 160.723 mo
314.765 160.723 312.711 161.866 312.237 163.703 cv
311.954 164.803 312.284 166.004 313.165 167.084 cv
314.093 168.221 315.504 169.079 317.14 169.501 cv
320.444 170.352 323.63 169.137 324.234 166.792 cv
324.517 165.692 324.187 164.492 323.306 163.411 cv
322.379 162.274 320.968 161.416 319.331 160.994 cv
318.615 160.81 317.903 160.723 317.223 160.723 cv
cp
319.217 171.034 mo
318.44 171.034 317.635 170.935 316.824 170.726 cv
314.928 170.238 313.281 169.229 312.184 167.884 cv
311.042 166.483 310.626 164.887 311.012 163.387 cv
311.79 160.365 315.663 158.741 319.647 159.77 cv
321.543 160.257 323.19 161.267 324.287 162.611 cv
325.429 164.012 325.845 165.609 325.459 167.108 cv
324.84 169.515 322.255 171.034 319.217 171.034 cv
cp
0 0 0 0 cmyk
f
315.281 159.416 mo
315.281 159.416 315.395 159.947 315.167 164.142 cv
315.094 165.46 319.712 166.691 320.905 165.498 cv
322.098 164.305 321.621 163.063 321.907 158.576 cv
322.194 154.089 315.281 159.416 315.281 159.416 cv
cp
0 .286015 .250584 0 cmyk
f
321.907 158.576 mo
321.907 158.576 320.77 162.736 315.166 164.333 cv
315.251 160.551 li
321.907 158.576 li
cp
.0520027 .456916 .352453 0 cmyk
f
325.458 148.005 mo
326.866 153.452 323.592 159.011 318.144 160.419 cv
312.697 161.827 307.139 158.553 305.73 153.105 cv
304.322 147.657 307.596 142.1 313.044 140.691 cv
318.492 139.283 324.05 142.558 325.458 148.005 cv
cp
0 .286015 .250584 0 cmyk
f
317.934 150.929 mo
317.934 150.929 312.325 153.332 308.441 153.359 cv
304.556 153.387 305.413 150.134 305.413 150.134 cv
316.942 148.468 li
317.934 150.929 li
cp
.0520027 .456916 .352453 0 cmyk
f
307.283 151.562 mo
307.283 151.562 312.169 149.487 316.456 150.353 cv
317.464 150.556 318.397 151.095 319.047 151.892 cv
319.259 152.152 319.526 152.391 319.831 152.459 cv
320.591 152.631 321.835 149.478 323.312 149.406 cv
324.79 149.334 325.776 150.38 324.564 152.319 cv
323.352 154.259 323.762 156.43 324.32 156.74 cv
324.877 157.052 330.79 152.524 325.574 142.192 cv
320.359 131.861 307.112 137.426 305.052 139.52 cv
305.052 139.52 302.881 141.411 301.116 139.729 cv
301.116 139.729 299.136 154.55 307.283 151.562 cv
cp
0 .912535 0 0 cmyk
f
326.134 194.28 mo
326.134 202.03 li
326.134 202.919 325.76 203.766 325.103 204.364 cv
309.181 218.88 li
310.991 221.646 li
332.017 206.396 li
332.999 205.686 333.632 204.59 333.759 203.384 cv
335.179 189.867 li
326.134 194.28 li
cp
0 .286015 .250584 0 cmyk
f
332.438 169.449 mo
332.438 169.449 337.268 176.713 339.068 195.834 cv
339.068 195.834 330.816 198.503 326.134 196.988 cv
321.451 195.473 332.438 169.449 332.438 169.449 cv
cp
.657221 .328313 0 0 cmyk
f
325.252 178.634 mo
325.252 178.634 323.36 188.754 323.254 193.511 cv
323.224 194.818 324.022 195.998 325.252 196.442 cv
325.252 178.634 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
321.121 228.958 mo
317.602 228.493 li
294.885 215.378 li
294.158 214.958 292.885 215.011 292.045 215.496 cv
275.948 224.786 li
273.82 224.505 li
273.82 226.623 li
273.822 226.623 li
273.808 226.902 273.968 227.171 274.311 227.369 cv
300.054 242.232 li
300.783 242.653 302.055 242.601 302.896 242.114 cv
320.426 231.997 li
320.899 231.724 321.135 231.372 321.121 231.042 cv
321.121 228.958 li
cp
.657221 .328313 0 0 cmyk
f
304.052 220.671 mo
302.439 219.739 li
284.695 219.739 li
275.948 224.786 li
273.82 224.505 li
273.82 226.623 li
273.822 226.623 li
273.808 226.902 273.968 227.171 274.311 227.369 cv
300.054 242.232 li
300.44 242.454 300.976 242.543 301.521 242.507 cv
304.052 220.671 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
274.764 224.63 mo
273.82 224.505 li
273.82 226.623 li
273.822 226.623 li
273.808 226.902 273.968 227.171 274.311 227.369 cv
274.764 227.631 li
274.764 224.63 li
cp
.657221 .328313 0 0 cmyk
f
300.314 242.353 mo
301.005 242.614 301.991 242.558 302.728 242.203 cv
302.728 238.599 li
300.314 238.599 li
300.314 242.353 li
cp
0 0 0 0 cmyk
f
300.054 240.115 mo
274.311 225.252 li
273.583 224.832 273.674 224.098 274.515 223.611 cv
292.045 213.494 li
292.885 213.009 294.158 212.956 294.885 213.377 cv
320.63 228.24 li
321.358 228.66 321.266 229.395 320.426 229.88 cv
302.896 239.998 li
302.055 240.483 300.783 240.536 300.054 240.115 cv
cp
f
299.619 237.862 mo
278.214 225.504 li
277.608 225.154 277.684 224.544 278.384 224.14 cv
287.777 218.857 li
288.476 218.454 289.534 218.41 290.139 218.76 cv
311.545 231.118 li
312.151 231.468 312.075 232.079 311.376 232.482 cv
301.982 237.765 li
301.283 238.168 300.225 238.212 299.619 237.862 cv
cp
.147219 .0154116 0 0 cmyk
f
293.04 213.007 mo
292.773 214.783 li
292.547 216.296 292.586 217.838 292.889 219.338 cv
293.207 220.902 li
293.385 221.785 294.084 222.471 294.97 222.632 cv
295.662 222.758 296.316 222.271 296.394 221.572 cv
296.819 217.775 li
296.819 217.775 297.791 219.048 298.26 219.048 cv
298.729 219.048 297.735 215.245 296.675 213.093 cv
295.613 210.94 293.04 213.007 293.04 213.007 cv
cp
0 .286015 .250584 0 cmyk
f
301.766 184.775 mo
299.005 190.242 li
298.351 191.535 297.967 192.947 297.874 194.393 cv
296.675 213.093 li
293.04 213.007 li
291.39 192.006 li
291.34 191.357 291.371 190.705 291.484 190.064 cv
293.369 179.415 li
301.766 184.775 li
cp
f
299.182 241.543 mo
297.024 238.726 li
274.324 225.582 li
273.596 225.161 273.008 224.032 273.009 223.062 cv
273.028 204.477 li
271.723 202.772 li
272.95 202.063 li
272.951 202.064 li
273.186 201.913 273.498 201.917 273.841 202.115 cv
299.567 217.01 li
300.295 217.432 300.884 218.56 300.883 219.531 cv
300.861 239.771 li
300.86 240.317 300.673 240.697 300.38 240.85 cv
299.182 241.543 li
cp
1 .866484 .240818 .0951247 cmyk
f
283.485 230.886 mo
281.872 229.952 li
273.019 214.575 li
273.028 204.477 li
271.723 202.772 li
272.95 202.063 li
272.951 202.064 li
273.186 201.913 273.498 201.917 273.841 202.115 cv
299.567 217.01 li
299.951 217.232 300.296 217.653 300.537 218.144 cv
283.485 230.886 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
272.302 203.528 mo
271.723 202.772 li
272.95 202.063 li
272.951 202.064 li
273.186 201.913 273.498 201.917 273.841 202.115 cv
274.295 202.378 li
272.302 203.528 li
cp
.657221 .328313 0 0 cmyk
f
299.801 217.175 mo
300.372 217.642 300.815 218.525 300.875 219.342 cv
298.361 220.793 li
297.157 218.701 li
299.801 217.175 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
298.342 217.72 mo
272.616 202.825 li
271.888 202.403 271.298 202.849 271.296 203.82 cv
271.274 224.06 li
271.273 225.031 271.862 226.159 272.59 226.581 cv
298.315 241.476 li
299.044 241.896 299.635 241.451 299.635 240.48 cv
299.657 220.24 li
299.658 219.27 299.069 218.141 298.342 217.72 cv
cp
.657221 .328313 0 0 cmyk
f
310.991 221.646 mo
310.579 222.5 li
310.104 223.483 309.358 224.311 308.428 224.884 cv
305.873 226.459 li
305.078 226.949 304.071 226.989 303.264 226.52 cv
303.177 226.467 li
302.365 225.958 302.292 224.792 302.96 224.104 cv
305.631 221.359 li
305.631 221.359 304.13 222.509 303.71 222.046 cv
303.401 221.707 305.165 220.052 306.518 219.997 cv
307.872 219.943 309.181 218.88 309.181 218.88 cv
310.991 221.646 li
cp
0 .286015 .250584 0 cmyk
f
304.219 159.72 mo
304.219 159.72 294.43 170.371 290.481 180.143 cv
290.481 180.143 293.829 186.173 302.023 188.54 cv
310.217 190.906 304.219 159.72 304.219 159.72 cv
cp
.657221 .328313 0 0 cmyk
f
300.179 187.908 mo
301.766 172.581 li
298.028 186.94 li
298.694 187.288 299.415 187.611 300.179 187.908 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
311.552 157.57 mo
308.922 156.848 li
308.922 156.848 310.177 158.823 312.01 159.326 cv
313.844 159.83 314.13 158.278 314.13 158.278 cv
311.552 157.57 li
cp
0 0 0 0 cmyk
f
325.602 153.359 mo
325.602 154.169 324.946 154.824 324.137 154.824 cv
323.328 154.824 322.672 154.169 322.672 153.359 cv
322.672 152.55 323.328 151.895 324.137 151.895 cv
324.946 151.895 325.602 152.55 325.602 153.359 cv
cp
f
542.561 150.896 mo
545.208 156.281 li
550.592 153.635 li
547.945 148.25 li
542.561 150.896 li
cp
544.296 158.959 mo
539.884 149.984 li
548.857 145.572 li
553.269 154.547 li
544.296 158.959 li
cp
0 .912535 0 0 cmyk
f
345.422 344.895 mo
340.917 347.495 333.613 347.495 329.108 344.895 cv
324.604 342.293 324.603 338.076 329.108 335.476 cv
333.613 332.875 340.917 332.875 345.422 335.476 cv
349.926 338.077 349.927 342.294 345.422 344.895 cv
cp
355.009 329.94 mo
345.209 324.282 329.32 324.282 319.52 329.94 cv
309.72 335.599 309.721 344.771 319.521 350.43 cv
329.321 356.088 345.21 356.088 355.01 350.43 cv
364.809 344.771 364.808 335.599 355.009 329.94 cv
cp
.147219 .0154116 0 0 cmyk
f
315.819 326.588 mo
324.77 326.728 li
325.433 325.865 326.374 325.058 327.597 324.351 cv
332.52 321.509 340.26 321.289 345.623 323.688 cv
350.942 318.686 li
359.133 318.813 li
358.728 318.548 358.312 318.287 357.874 318.034 cv
346.492 311.462 328.038 311.462 316.656 318.033 cv
314.562 319.242 312.858 320.59 311.534 322.023 cv
315.819 326.588 li
cp
.293065 1 .0738231 .00131228 cmyk
f
359.133 305.813 mo
359.133 318.813 li
350.942 318.686 li
350.942 305.687 li
359.133 305.813 li
cp
.139773 1 .00201419 0 cmyk
f
345.623 310.688 mo
345.623 323.688 li
350.942 318.686 li
350.942 305.687 li
345.623 310.688 li
cp
.293065 1 .0738231 .00131228 cmyk
f
324.77 313.729 mo
324.77 326.728 li
336.546 317.132 li
345.623 323.688 li
345.623 310.688 li
337.265 306.634 li
337.265 306.634 325.759 310.156 325.161 310.306 cv
324.562 310.455 324.77 313.729 324.77 313.729 cv
cp
f
315.819 313.589 mo
315.819 326.588 li
324.77 326.728 li
324.77 313.729 li
315.819 313.589 li
cp
f
311.534 309.024 mo
311.534 322.023 li
315.819 326.588 li
315.819 313.589 li
311.534 309.024 li
cp
.139773 1 .00201419 0 cmyk
f
315.819 313.589 mo
324.77 313.729 li
325.433 312.866 326.374 312.059 327.597 311.352 cv
332.52 308.51 340.26 308.29 345.623 310.688 cv
350.942 305.687 li
359.133 305.813 li
358.728 305.549 358.312 305.288 357.874 305.035 cv
346.492 298.463 328.038 298.463 316.656 305.034 cv
314.562 306.243 312.858 307.591 311.534 309.024 cv
315.819 313.589 li
cp
0 .912535 0 0 cmyk
f
348.319 312.288 mo
348.319 324.237 li
356.068 322.381 li
356.068 322.381 355.613 315.389 355.448 315.202 cv
355.283 315.015 348.319 312.288 348.319 312.288 cv
cp
.657221 .328313 0 0 cmyk
f
342.456 324.237 mo
342.456 337.236 li
343.293 338.128 li
348.756 334.979 li
348.756 334.979 347.908 325.056 347.808 324.856 cv
347.709 324.657 342.456 324.237 342.456 324.237 cv
cp
1 .866484 .240818 .0951247 cmyk
f
353.004 320.881 mo
348.319 325.286 li
352.221 328.374 351.76 332.727 346.932 335.514 cv
345.61 336.277 344.084 336.851 342.456 337.236 cv
347.298 342.395 li
343.008 346.429 li
348.455 345.8 353.651 344.269 357.875 341.831 cv
367.659 336.182 369.023 327.518 361.985 321.021 cv
353.004 320.881 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
343.008 333.43 mo
343.008 346.429 li
353.63 342.327 li
366.405 330.139 li
366.358 316.335 li
352.842 327.049 li
343.008 333.43 li
cp
f
353.004 307.882 mo
348.319 312.288 li
352.221 315.375 351.76 319.728 346.932 322.515 cv
345.61 323.278 344.084 323.852 342.456 324.237 cv
347.298 329.396 li
343.008 333.43 li
348.455 332.801 353.651 331.27 357.875 328.832 cv
367.659 323.183 369.023 314.519 361.985 308.022 cv
353.004 307.882 li
cp
.147219 .0154116 0 0 cmyk
f
342.972 342.327 mo
338.705 337.78 li
334.743 338.021 330.635 337.267 327.597 335.514 cv
324.462 333.703 323.17 331.231 323.719 328.875 cv
313.555 328.717 li
309.648 324.554 li
306.23 330.42 308.562 337.157 316.656 341.83 cv
322.604 345.265 330.483 346.9 338.274 346.745 cv
342.972 342.327 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
338.274 333.746 mo
338.274 346.745 li
308.127 330.039 li
308.127 317.033 li
312.529 318.813 li
338.274 333.746 li
cp
f
342.972 329.328 mo
342.972 342.327 li
338.274 346.745 li
338.274 333.746 li
342.972 329.328 li
cp
1 .866484 .240818 .0951247 cmyk
f
342.972 329.328 mo
338.705 324.781 li
334.743 325.022 330.635 324.268 327.597 322.515 cv
324.462 320.704 323.17 318.232 323.719 315.876 cv
313.555 315.718 li
309.648 311.555 li
306.23 317.421 308.562 324.158 316.656 328.831 cv
322.604 332.266 330.483 333.901 338.274 333.746 cv
342.972 329.328 li
cp
.657221 .328313 0 0 cmyk
f
275.377 108.688 mo
272.895 108.688 270.877 110.707 270.877 113.188 cv
270.877 115.67 272.895 117.688 275.377 117.688 cv
277.858 117.688 279.877 115.67 279.877 113.188 cv
279.877 110.707 277.858 108.688 275.377 108.688 cv
cp
275.377 119.688 mo
271.793 119.688 268.877 116.772 268.877 113.188 cv
268.877 109.604 271.793 106.688 275.377 106.688 cv
278.961 106.688 281.877 109.604 281.877 113.188 cv
281.877 116.772 278.961 119.688 275.377 119.688 cv
cp
f
259.587 322.72 mo
259.587 325.325 257.474 327.438 254.869 327.438 cv
252.262 327.438 250.151 325.325 250.151 322.72 cv
250.151 320.114 252.262 318.002 254.869 318.002 cv
257.474 318.002 259.587 320.114 259.587 322.72 cv
cp
.147219 .0154116 0 0 cmyk
f
500.795 52.7412 mo
500.795 55.8457 498.277 58.3633 495.173 58.3633 cv
492.067 58.3633 489.55 55.8457 489.55 52.7412 cv
489.55 49.6357 492.067 47.1182 495.173 47.1182 cv
498.277 47.1182 500.795 49.6357 500.795 52.7412 cv
cp
f
470.392 110.898 mo
443.653 95.4619 li
443.124 95.1563 442.646 95.1445 442.271 95.3506 cv
442.273 95.333 li
439.679 96.832 li
439.679 96.832 440.828 97.25 441.502 97.498 cv
441.502 116.97 li
441.502 118.554 442.466 120.395 443.653 121.08 cv
469.211 135.836 li
469.211 138.12 li
471.831 136.611 li
471.816 136.606 li
472.26 136.336 472.544 135.744 472.544 134.892 cv
472.544 115.01 li
472.544 113.425 471.58 111.585 470.392 110.898 cv
cp
.139773 1 .00201419 0 cmyk
f
467.751 138.04 mo
441.012 122.603 li
439.824 121.917 438.861 120.076 438.861 118.492 cv
438.861 98.6104 li
438.861 97.0264 439.824 96.2979 441.012 96.9834 cv
467.751 112.421 li
468.939 113.107 469.902 114.947 469.902 116.532 cv
469.902 136.414 li
469.902 137.998 468.939 138.727 467.751 138.04 cv
cp
0 .912535 0 0 cmyk
f
450.005 115.751 mo
450.005 116.901 449.196 117.368 448.2 116.793 cv
447.204 116.218 446.396 114.818 446.396 113.668 cv
446.396 112.518 447.204 112.052 448.2 112.627 cv
449.196 113.202 450.005 114.601 450.005 115.751 cv
cp
0 0 0 0 cmyk
f
455.469 118.907 mo
455.469 120.058 454.662 120.523 453.666 119.948 cv
452.669 119.373 451.861 117.974 451.861 116.823 cv
451.861 115.673 452.669 115.207 453.666 115.782 cv
454.662 116.357 455.469 117.756 455.469 118.907 cv
cp
f
460.935 122.063 mo
460.935 123.213 460.128 123.679 459.131 123.104 cv
458.135 122.528 457.327 121.13 457.327 119.979 cv
457.327 118.828 458.135 118.362 459.131 118.938 cv
460.128 119.513 460.935 120.912 460.935 122.063 cv
cp
f
340.38 80.5283 mo
314.148 65.3838 li
313.629 65.084 313.16 65.0732 312.792 65.2754 cv
312.794 65.2588 li
310.25 66.7285 li
310.25 66.7285 311.376 67.1396 312.038 67.3818 cv
312.038 86.4844 li
312.038 88.0391 312.982 89.8438 314.148 90.5176 cv
339.22 104.992 li
339.22 107.234 li
341.791 105.754 li
341.777 105.749 li
342.211 105.483 342.49 104.902 342.49 104.066 cv
342.49 84.5615 li
342.49 83.0068 341.545 81.2021 340.38 80.5283 cv
cp
.657221 .328313 0 0 cmyk
f
337.789 107.155 mo
311.557 92.0107 li
310.391 91.3379 309.446 89.5322 309.446 87.9775 cv
309.446 68.4736 li
309.446 66.9189 310.391 66.2051 311.557 66.8779 cv
337.789 82.0225 li
338.954 82.6953 339.899 84.501 339.899 86.0547 cv
339.899 105.56 li
339.899 107.114 338.954 107.828 337.789 107.155 cv
cp
.147219 .0154116 0 0 cmyk
f
320.379 85.2891 mo
320.379 86.418 319.586 86.875 318.608 86.3105 cv
317.631 85.7471 316.839 84.374 316.839 83.2451 cv
316.839 82.1172 317.631 81.6592 318.608 82.2236 cv
319.586 82.7881 320.379 84.1602 320.379 85.2891 cv
cp
0 0 0 0 cmyk
f
325.74 88.3848 mo
325.74 89.5137 324.948 89.9707 323.97 89.4063 cv
322.993 88.8418 322.2 87.4697 322.2 86.3408 cv
322.2 85.2129 322.993 84.7549 323.97 85.3193 cv
324.948 85.8838 325.74 87.2559 325.74 88.3848 cv
cp
f
331.101 91.4805 mo
331.101 92.6094 330.309 93.0664 329.332 92.502 cv
328.354 91.9375 327.562 90.5654 327.562 89.4365 cv
327.562 88.3076 328.354 87.8506 329.332 88.415 cv
330.309 88.9795 331.101 90.3516 331.101 91.4805 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (cartoon_banners_1_08.eps)
%%CreationDate: 12/19/2018 11:21 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBj9?)dd[.Ef@Bn_0!r!MeGB;QY`kH['ah<iV^=-[&s>(En'gmeq<dXp8@%?YVCa/%G9Y+;bL4UJG"_DCK&>eC/(OKahtYMi
%cEqZ9L1NA*bB2[3B%aY3/M+Q7mRQZ9H?n+b=_0[5C5*1!`5a]`%'M6@b2(7>hUu[%b#,cVB[ds&p.DLW/$.oW_D=.bjuu2@>2u6F
%?OP$nE/h>8*XC5!'Js![@4,^L'fr98e&?7[E"t3[htcf%HF_V/7!im$<8"d7o5-Nu+4H:'W7(d_TiVsP.dVQ8P+c%#.='ZeD,#^;
%QL1]T6!k<c#%(V(21R69T0>W%caIP9[LE[0%JVbEgU>6g:&J)^qj0h*Mmm+LGRpN\fEs^j7NLCe&>1Ska]pP]%D0"X6R8#JK!1_8
%3G`.R\(ehGD7[m4.<I:0aUA!B3q35JQ<!iUWqCkZmoiK4)6BID]d!0DYmQe[1JBd1nI*j\%e.O`!D12WC,@T]ej]HCI"Bli7[MA'
%fSPEZFOS>NXI<QXGm,iAE(jLDlp6si>?]mk'HO4+QC1hE1>@!CY"=tZQCE)^b7\EGITE4n<cYC<YS+?'cZuY<61r".>F#=):_\A'
%^KZV"DsPp`i2=sWQ]:?,UCu)o;t8%`>)6uA;k)WhNPhuC(3Mm.)RV1-lq5Q[H[4G\g^\g&XgVoi4l1$Fou"d2!d*,@gTGB*&[f9N
%.ooEglW-cgFYi3LVI0MVJ:C;U&((EdL2DcR836K14EarZZYFo"fhmm#.[Q[u<je(rNihC_p."i<*U2Grru>ht6DkLI"Wj[e>hDVO
%;O%+)!Uo(<]R+p%&$&5hc,i!8LHtYI^f(Y'+WOMt5jVMCT:Gq^6W1&%9@r^iZLH[mn\%a17s,h:FWJfn3hFlEFuBWiEd!j^@5Z6F
%?^?Dr/.8L]<Y1'V>o2h:0%L%5G3O&!`G2Q6eaONlA$nW(WtbtdBq^&i$3dLE"F)g1/;l+k!iuq9lllWj".;HnqIF7/;K6$piH"k3
%C5<\?@l;1t@*?h=;YZ8p&1MuSg]]^j`J>>Ej"Ee-hm"V"/ClX%L$s[VI_ipX(\Z!barnK7L`4!;SKP^X@[%.C7VP=b7OiduQSRnF
%!XsG\*UB>J(IKLKYSU>-*:Y&=@KX_+BBT'*i>8SM3/Wi1UgY&aNqeXL&4+;@ps+H26hl\l&4_+\K?;c"&XPe6I0s:'hutKbTjo3#
%g1*!04@'p@4[XaMB:uN$=kdE<=;CAC3f'He;+-KuB:-$SLa0WD29+s<,GPXY(uMS.+paMC/f0\haN+-bS1`Gs0TG!P!hQY*@gXA)
%@VcqT)17D:XCk!b!aZ:o^lO&-eO9G=H.DsWcX%T9-E)m0g"8(^YpKNu0ih&FT3VPc$gCCH9Fr_:"30Rl"qj\,b7eb+P+R]ATQN".
%#a6AY?(R-GJ1El#4gTmrV4]F)KqDUMWr/]-lr<Pt?A?:F-_K`/Q^]<`P^Kd'D6r-A-[Ri`qs?@_mgahm*]oX7ZBt$dhoR6m_<&W[
%4-Y,u=/j,e-_Kb%`%S:VE=DB.NA(/\I^)\e;)8Q6krZUR-0&W7ZlH[4fD(2=T1*p3:fQBi18hqu>bMK!KPOiDq\;AnY2#g'EVZ!Y
%`+8qS7<j1+7/"fPN>fTj;Xgp6LOre#PF_t9S"b:,<"&oS!.jWEr:f]eW9FGn_2p?-3"sXV,TZng<.)7_Yff3;3,fqGW/A<8rh3E4
%:>erChR&IH5CB\-U1"1K^aB30gCLT?/Z>H'`D06_bLL$O9E3@\J]J'*iFpU"Ja!d2TZrW"a5`g%qIHs0V1BU414Zp\+`e(46su9H
%&BJgqJK"qSo]>deRf&#UQOk+l&/=eB]+f>&@#E!sUlbDGU?W.sc[p`'Tpoa?'Bu/;G<G6t0pHENn'HRupCOY6-W3;2U13hV"UBM/
%E&jd2QlmU`Ll.(Eg+O:&-@QOTAe<_\80fP`b;%p\q@*Nb'EoJdSjSNh5n"OR<@edp19Efn$dO)/N=u>r0t&&a1a"]JQMbo"dsu$4
%nP>K=qb@\)Xp)B<)!fiOE57#/9\s%g_%8jV^m`/*M1J(DSqG;QE"pX'_'@b4Bhn;SiWO-"\PN[4\UZUHT@gC,e%jW_*#K:n#H;Tn
%5[kJIiZoEN]HhJ8"N1I[8G'\GDZ[6^5Vo2BNWD_',KT126or!!9.95*7f`E8GfV/+C$=Xq5QSBP/f0mO0?D!Op&X%k+W<aJ-U@n?
%d-Hg<:9Gdg(4g-F`oErA`dubIFX$#YA/j_S"rM]2#^BE!.l_5e'Zin%E<'<XlI)D=F98&R(>Dh`:Br48>!ONFT/,N58\5*j-h9NO
%]?-9=Ja4HXU-TK$`P;\/@8\dgUR'%[/L-;me(]$O9H.O_E/%u_2q'h%V[43&!lT6&;_iPAEHKAIAqjo':2L(<d<81c\\TP,Nueu:
%?NQ7rLo+c.R#J5&io"HJbRKn#-=[4l5U4a1GV^[4O9o.q0,Eijo^$$0Ws]p-pb\lu2Sb*r20CYe%d-,W>s>PR%3-<"`m+9mQTPm%
%p)SUm>c_U<5bt>2I`(%4Mi4K)mZ>j\n=EDQ=!B9gFUMd:0ptQECCAo8=kLJ?.R4Y&h*a)jI0ZZ(5Qd"=UG="N9c(RM:H/dLBEQQ]
%[g+1aUkc;WO(%KJ#qX/ekgSf&%WIZMjLG8,!_"be#S,9&M+Ds.OdR',!\a;03KT"o<-Q8Wg0F?%,30Xbi!9Q'A/boWR&'_KL*>+7
%O;<@b$lMGD_.K4`;'Xs&0P"Q9X*P8-m2-#!=B>OJ)ITk$/oqX9"@n#na$)c*-"c7ul%laE&ZA,&+$r@&]SQEG"!8(S)-^K%!<J!)
%+UUoH@DUu_1B8MT9,pd]-!A#,&^#^(i91K<JZY"i$sb#J9RIdg%rt+CD$I(3b_k=%+\e<u^nXa3P_ed5KT?<I%qA&hGrY1h,oqQe
%\DBY0,4hNScmMFOO[piJX2R7+1VW(3+\jdK$aPq=@U>n.P&YNp4"3LORk'gIF$7?XDGlN#@R2QH<5i:K&d"!f%%.m1$m]?2n"R^O
%oS>.:Q@nF%M0ZXI`#NB(PSi+&0c&e3ceBgQ-i'sK:h!\E`MSKA-MBUMG>),#@9>2(RT^gF@%RaQ>gN#"Kfq_Z1Ku%PC>n2mLrdme
%ghF^+09C1=WD06oH_Ui1[u6Q6LI,^5m[+t'nS&8NBTQLVh9>a@<Jb(0rm??gXbmT4*CEiLe>W]q$K1WN=/kg)7UXhD'g+#$K>ag4
%\Pj\;VAH!7j%CSoM`-+<R@pA!RJ\=\1<*$5'SFUDW5XFGZjgd$FK^N=PkDfXf.s(p[ddh<C>A2sfk1kl5P[P0aGIs.9+a6r0pP2o
%&pQ;jgt]bu)WcF7b]V,toa2'3g#^)F;_5%+(Qf.Q?-YshAK"8i(cs?>4eXgH'L.Fk"M%3udBhc)TV,3"mfaU9&MOOJA0b_U.`JiJ
%WX27R<%]t&Cj<o`!M><-s-1:19^ef2A,ffg0M2\L7BObc!p'rlcA=!'-liX<%ZD+-!D$=H.1e</G-J\O$W-:_#/Q%m&s3^0?Q*^:
%cXPjiq2[N`R.2q/b9WuVE=.!#3"bD/k"=p0adXieSsFU:1$5`N9VbGL3faDAdVH_?.)`.0(*bFkJkI*YlQ-.#,DMHURhqlM-c_Vr
%jCX#(>**;+@u>9*T/_%G'!Eco<"h<SLC"+n;h$bb-?h23%OcOg(f:^-0nWRJ*Dd/rn/kHaD]Ch/+Z8CETTd6;!LX@EYTZ:\nf`(/
%]jT34iBj6D.`b(EKH31o(EctMQLII?iY\pc-'^4&`"TX*XpFj6kA1X&Jr">jr(aU>820Vq\W8+;'b%");8_7=:,qfIiB*nq8oYS@
%3cYH-f!?+t'bcd+fM.7RK-\8UA?M9f!oc;(1%SrHU#.C&U!`Zt!hOsU\k.XLa1mK0G:>74TB+Iuj@o,!d">l6/!80o3X7I=0Shn1
%B`&_?O"",:6C`/#@\pq,mRarOaHt<om#qlp0B\IimIK=jk&R`2@]tYE(<@IHLIB_M',lX!,1H.(Z@dSJ$7YekDHI>nU?N$:Lq=e,
%%a<t<Sr#I4(*$.=KC50O7sZ#Bo$g2#cbc;\#/R)S0p+)50*XV++bp]_'F=8s`=YioZTW"1K3eNc`&J_*Lcq;Vo.]RI;@iEaYhn?O
%`oPr`q%2hX,#a&t(aSJ&M_cl'*mogk:H[n&&r%^pD,=rOhE?r*-bpF]'0+2n10BY(12W<[rCf)97W6S4N<f'';TVDZ,L[lRN#BnX
%KT^0[S.bHu_L;rO3%,>J!HsuHk?QR'5t_pMRXq2(4:K["-=a6ae/+.J,@bIJXD&"Z4ml1j[gs`GQVrj&j2cA$lg]WI9;\*oE&t.?
%X5LI#rE.)<`lW/K#2Cq+%iVu*no*MKPC),obuGW<Nhd$o5O+":I_%u%Y7SXRW<MO[)e(#%=b>V<D5SY"V(s6lb4F-%,eZu#;E-iW
%,P&Lk!9K_u;C77Q7Rb\ghk@bD.S<S/mo^(dZBVFC1:`j`,K=l8VdW%u38CCc0;cj@+OgS(Egf@3klepO0tr6q6L4,?1O\i`+4VXK
%\`";@1lTnR^l*8W6(34S5dk[,$;5Q\I%UgMi#!a+.p.S[3+bSd.,DhI7?+q;PU/'"9`h#o<Qn+p^F;jD_`_a#*kE0H,s9N6)OHpJ
%]K6BU:M<.Q<^nFfkF!fV^*n+dd5pc\VnADMo/Kb^MD1sW5[7UDo"?/8d:QL5c``GCHPA7]5f\bo<7#-l_9`sJd0dT8W>3N(AUYj+
%CY1#rY`+76e@V5S8:500Ua8G2R(?N5EM=YZKUshDe;U@Z?(Cg#IUf!$CLj8E&O4qX6R7c5;be%0khP`J"FBK-0eEn\)_aj-I4k$j
%h-An4lNVSMkT7"A,YN7dEa_.)Uu<FMM/W-oCFI.2A10.U*Dd^u2Enb'1Dp#-diu4<`_k_o5f@ml4d7K+1mn#*3,=1g+gs*[T++\%
%4M<t:=i@5JH-9ZrfM(3PVD.KD2)>h!XhE]'Esp_aie'J;hb?*:Z#<!R2/T4j>VhK0_%(JkH$p\NQqX;.me?8!<2K&YDmIA`B&)k^
%jonCVm%O?M5oDm"4N5QIdI\*!3paVRTKH$):MX^N0T(70o"]7(29k.E;=:>NgjAK=l@"24Rs`6@@Q]e:?;W08UJ8loaMr]X@$VGH
%>W726\FQjnb_tDpO(K3n9cm%4!a]D'L](-Rk+Dolhu]@1TbuQo09k`:S0c@n()iN![2J/KZ5L#rX[]F4`m5trkhJJRkr*IdM8=;l
%piQZkW7GsSmd45^ffA5?YL\Dkl`EXc\PYS.gqL2[<>m5^DS')5EpR=sc9BB&Ib%N\ZYo'phmP`7Q4!X1r53LVr[g*A_P_6L")uLS
%,moj8rqWePHo._`K8Z[,56%Cl=VJR#qn&f^Bsao?N@MKpPOJ!nqUX_V<;)B$i@u#B2;l-HiV=HT@G(L2RTsOaD\J/#!`3PlmOnre
%5qQo0;1WNIVteJVI5*bd66m"f#1dDU+C)@<^h0U&Lr#4(:J4O@aK`0Goq,*`dDZ#eZWR:\X+g5N,n9/.pO<u3#3+?_5:6F9YRrPl
%b:)omh1_F4OJqb7'?j=Sh1SY*rp1;SYna'5RCW_ek;g9meLU#OViGMu$]-A.Bo;aXJ8G:Coor#pIpJX&C=W#h,)Kp#mKA*'0Y!s!
%Bi/?$=]=gTA0WH.L<:X6CJ6jajq8Q,<]*n[EA[GF;aCJ?X\Q9/M[k3D4&I=?/;1E7orJldc`?/ths.YrF,,`Em4ZgjP8I%KSM'.9
%KBiq#/ui;McE[/^<"cLj1f,s?">3$1OdS7-X1heN>kJmfeau8G=TTfo)=nHmGc_GXkhh7iI+@-94`5"NND#qa+Jf;*BFNL.A`Bdt
%,ZMSlP(KId2M20m%RWeN,t"UgN\U87Cn\a'L*X.O]=`u.E\Yh(.TPtPL)A*rFUnBW_/\54SrBpH37+SRH3Iu&d&hI8k+ntjEYu[Y
%F&F^@@RurUCM-k4d7tTD80BUI_7u<7kN1g[\#c*,Qi67C<`l>QHbKQSfEttA$ED("Y%]JeD=]W\-9h\Z@fmRVKo8Rnh[g/h=X?_a
%WJ1Err8e-(8l!_.Q.rc3h7iRKp+<2\ncGuRWgGqnFk;.Q6F!39Y2d*rkP>b/(SR(d"J4VP:c'R]'E`r#$]<3s^>ld8.!V5ck`qeD
%^&g`WUA;B=5V[\FDTk,TMcG2_0AoN75Oa;W;Ga'#:in*T_7Y2s?kmK+:;OnP-+*HF===n<EN9f(U/od%#)'Tj/1>\h!DpHR1s)&J
%'HsorIHq'q9.aRVEcLu6a5<*?;b::a<hRDU6%^JVs+!H`MV:uc??CeRi36FufXGc"#)In!G_k@u`@m+o)0R<\@7c$E6IDIiKWd^l
%J2Q20JFTmPU^S(p%7X-5!uT3*T]sAh\hMDfN40+'Y6,T>Y!O#$,*9ih4NDRaa*'#F0;1HGn;Z]]2J2K;5Yg51CtEi\-S='U/d2u-
%X0uI@<XDSP=?`sECH7\t=dEb>('pk8>)F2b,s].o\_,ZGJE7d"2D*Cr7'`e[WX5r7;$$e6J8%,R9*h;d=GCN,"ph]3)N#U",p6_a
%pOO&b1!3rLDd6bGCPB:nEUi&J9#ZVpN/;0<@`?<FM\-ag0$-bGMis=Z\'uNQV77de;M^5a'e_0l(4e+E%]2?r81C6I#=/+ca;Y*[
%".b7!*@ZP;$>;F71(COjNrk2*NG>+sQXIU$0IXDKQ%8?MSVW&O!H/""iFVdNhXcR?OY`+qD;nj^A)q9n8<%:2GZt:3K$+J7I(HeG
%nqFB)dKhC%0PQ7Baug/o$@4s'I/mFO="+hTr-ZB5a=SD//](]q2H,/A))XBbOA:aT#QbYGTXYoe#UH1]`efZoNhXe=)+U3V5JAqf
%?sJ:G_`.o6A=Q(nVCPJFK*M*.+<nB)**LVhDaOOh"nMi8!?NinJP&B3ghktY4-Sf@!oZb;!]$I#FI40u2Fr`2E`9mWYl\,17);cP
%FBQ(k_.e:J^k1>V:g&;g"qD5s(tRX:Z7M)?>+\:g'lMDJ$(g*-)UKgHc(ij_-#*hBd;bm)[0#UoY/UJmOf_I$;P:-W)e#M$\:"bW
%8-/)[=9r=UN7]oDoI@s4O@;F?U,B_1m"$,1";l!]%*UW6&o\f+$F:F-[hMq<i['L6L;e;Kc1qe)JIA$"V;EW<f17LGJp)[&NH[NN
%Mj?ndUAhNM*iLrSJ?/iPdi9*9=Wkt&O?P53LcW&afht*q$S_-ZR8)K;lNB?/_k<EP%N;GL]$(@R;LuH-(^LMVLdIQG<XiHr!0Hph
%7kk`a)=djRs-I)Bg7kfB5X&!qM/"3q6L#lT`_<=u!h&OGd0N`^F*/-H*&*cbR8Zg\4C%O^A=AE*p#C+g/sK2,L/8J5.KW'Ol:<<K
%<DlEiB1JY_$FHn"r#T<TOu7^'(rdO5*15D)k=;Ge/._"qFH.&-=Hb?a)pc<0%H<;sRkWD<@kGn^1YBQT1S`4=[P6L\F:7-RbdWV6
%kpXc+K-CjrS=+A*aI+In`giH<@F1E6(Ijs`F^`q=3C)UGRs/K&nTHE$G\5rhO_894(j]fZKs?ug4c"m09ti=Xbj5_T&#Pt`Xpn]#
%2J^[*$C\,l@b,#O%m%-i[CW/=$`%*sEn.ZL7+LRa1A"/GU1.+n*U8e[F\/,>^^Vc6KrB%Dg$EdKKu:"2Xti#[j<cZo(iX$lc7s;F
%F,jPZ0d^J00o),1RmZVC0=erV,:pIB!$cQ9aZ0Js"_7gA"/aoUUCVYfKVJe_5lf2]MYCf"@5),_D2\dO.FTU[@Kn.IJC1Ysg`=<:
%b*d'-Pe<m0@,a?nMX)ZOI^*SuEa$afEi,7[+h+Zng`>JNcW]kn#R;t_G:foUW2_1JYUg5M*r)HjTKmLt+.%E'EeXtR\2hgXX)Laa
%j\K)in:4NG#\;jm7Ag?7@u-mP*E[iVVSO))[1q@=[.<\iW_;jZBhJ_m?VI1q&Y36X`9QW;3F[[HHQlLf:.^j/7ESkFVF$^AoU3jd
%@NH<X@)9@.76X.\2UHA^aEj>O9]an3Q)I4(>ZRI8.8Ej1/F#Mi8P5/q,=j11)H;\3.7B,9:^q`HqJ=kp!Hf*T4`nt@m4kGmC6'f-
%VY2S3)=[k[PnY==4tKt;,mmJI5c+Z]%GK0_7>d2+660%!$49X%DH'8k&W;G*#`-Ma;T'e(*BC]&`AQ#:_W)NmG7,M*2jPm$O(bIO
%jO`/A^D@&EWLBf\pCqI08\Le9oLm;(inT++!r0H3!$;*:,QIbQ^F'*`W`eM1!+!_OkhMRtNp9&M?r:EXLDOW$&^HHurWE@tE.8M@
%-],N1aj!E:Xo^'bmb.rUL:]8&[j0?oD@F'/B[S08L&:l5/K!P'lejpI8`[1uI(KIUd6@BS/kMj+ObM'A&ksm]3"O?c`8TZXX:e&S
%b,io6'p$P@_]9khUmMl4+.8-1(D6"4'Lhg,EfjI4;%_nO8p4&]IS]M1$:b0Q/@VN:j,;j.^Z3/R^A,WN<'b(4$@%hDm#ZJoOB!;H
%*+O9D&E&q=!#maGaCZ9#X.[R.cu-oq-lT#p0t+MU@lhDc"Wgl`TK:KJFA,qi;ud@I=>6`h?Q3fs.II?8(h&V[5mNK?eddaq.C(9q
%cm]a=Ukfq!kot-h7DfInL.s.6J;O4bG@OTW6B7*_V_!%L`T"jJDE`L>=G!?*"TtS\4:%+eJqpjLIDm=qdMPg)d7&rDa=e=#Z1*a$
%.Ij'M&"377L.!GVHceMg9hI<r_,^?[bna)#3$eJEpRVaInH)Iu,jChpS\\.l"G<%554eDf.KQZ6di\p(Oft=O*dH\\#89k(G;2ZN
%8-t%s3GjlC1jQr(,RRd*GoRb2ScJ(8's^EXH]l6;@b@!0_E9CYb2/+V_Q:h8iM)PXV?AV(/D?,J`G1nuL'!JtA[A1AUl*i(X9$;+
%$ac;t?#mrO+HG'(4=*f4CmQYO%gEl!M^SI.9(anTUBI7u9C6GXdR.*TU/W1,iV>$=7nuiFaZ=Nun7@]VA:[?maLZWW:)..R&H.+n
%N!diHH;Xr-A/;^g%QS:^4H_N9BZNg0d$Y7:-4#3`eM1H_Jg09;G$liW:atAmQ:Nk^Pl+I*oS`bf'N&'KYM*NnR)3;^X$Ep?:C^8*
%X,m\;.#qkQ4X%5#0]Y<?On?6?0JOFt`,])q7ZPZu81&*,5T6oT"QdGD.'lh2j`5WBdZ&^G9,"BW%5TM.IE"<6'KHi19?$*DAm_fF
%JJPAZdV",X9>Ys:M/MnV\]PTK7@l8YV.;SZPH-f3?Be@J/1ll".WB^DX/:tG<g;%jNg'Oq,o96cQP/ISjH:q\!=blF[k!9@7`+P5
%Gj$AipomsdC+B!emZn[$>;iCHa=,"f,p!PQJ1/Mi\ZoXUnQS@Mlq3E;"FQs9\4qZ:e)X(qO<%u(bW+pao/eSKqc?o!$)Ag(MM<S"
%!ma@34<rtX_.F*jo>4f\0*X'Tpfu[o>obdTMC<'ZQ*^TDp(\FagUGDDJ25R0EmBkdD$5@a2/dJD/XH/n/'RecYn%(_S8R,=>B`!?
%IFh]Am5uW-SX4"9Fu(f&9ji)a;WoMWlp`&>[jP>P@[pSFGWq\[dWMF`\=SS17ds`IS@QO[QH=98c@$lsGf8a.S@Fp:@Bl,hr7LYU
%9'HC/QMpqndVC>;T&g_\F@4%Mfb#t`DKmNe]0L7]YMEfV421Fl2EEE-iqBg.EuY(!O`!aR/D,Z$nbYt2a2rE#MrcV!W20kJ(WR85
%A5Ud/DL*\08s-8-`C\6]V'$L[0"5c<haQ>ep(^(iIjW.qGD),Y-tP*+73tN\9$,Fj8k>*N'a[\^Kh-S@4P_G!SRD2;3n'c*-=qFq
%kWB<RW!^/a8b]B9b^Q7$Ks&$s,,q66J!a1QqtdoV`]QF=_smQb0=9@F-:!K;TgN1,L),o5QO:)J^70O^Pe9S.+pZg_n4sS`b<.De
%R5qC$T>bUk`l[dN-fSTkG<LeHPB;7/=Xcr&,<q)880TcA-0#k-"-4BFXcB`ELnBUDcO!+^=]8YJM'a9&31gkoX8kbJ4SrLGb.lI>
%CQ7k/hp$m?/D&D2(e$T^R/I1lloeqi.JA;OoG*HTkr)<mA]p:7DY`fsU80&Y30L'PGCa`X>s,5ah";744Z1@)i&@oCW$`qa3UqbU
%51p=>L=lP]d4:XM'l`;H2q'U$:CPAiM*-sGVgksf''>CFA/@[0.F'ChGpS+68u^%_d(C!7"`bICPseZpV^Sl"jc_MMO-H7/cnk,6
%k4)-S_m5VSMuTgnQ/HB\FQ=1?pqmk?="hp0f"/ij-(Y47r8$o[>3o+_1k07Fd7+m7?$MBfjct1NR4@Hf/JUc*TZ?*"WjmQ?a$n4g
%'Q_u$,#96BWYKCqZm9-UpR+G#g>nf^XEB]8p>`fnaBHb)CQY`r9_IdWnXZW>?BiKOd`'_Q#IX"qPdh5MmR#;aW8"eWR9]]3\b]oZ
%%@tZWcfCf($$aK=RE6c;EJ[h'52FOno=*B=/N.e\B5Z\@/Y'5fk%m'VF0u]m#Fn(j=:RLgbQ_omdnCr%Vc_n$e(%D2+,-S]5V51M
%$<2mF+mDdk@C)_FYf\elb'%nE*^7UOm%199/1,<H?$b4hXhc0.3glI]9uY4WX>:0M5A^_c_.UTpXokO8-_4D/CERd=:;+IsMJ\__
%71iJ6F;p/p5#]_Ro&s1He$]0A;\P\)jo4ZC>4//URPUc8>4XcNo/Z[=3Vq>LW;_blkB$:YF7eX:oOiN2rd7T3Hr9?[;=Am0mqaWA
%'aoZX)m'M]*%r'4Z)'@g3f(XFrp\]be2pY\EINCcO_X#90QhkRV35MK_=Ka(Y7/';s2,"F]TM*,_U\7X$;pboJK\3b=POADrS=t&
%)hb_*T?#dZ\9f9@cf=G=gc^_1kAg5Ym[hJTo=0,gGL,=;Z#TMtMOUebLQC>L2/PJeQ<!n$LfLf;\VSe_rc5pa%JE2kI*'%=,9jRd
%2_fjRU>D&8g=s*H='FERH\GS,GtaP!$6pu8pa412'9/k^%Rn%7(BdOD(;amQqM_<q/_Y?WZ15$1Ors?8H>!LWS[E,tXc$tfTe#b*
%<76@&:!l?N'I/!)E$^D'E=/KBC)&,p\eL]64<C\u7u,Hd8VmIB6Y'+,D8)fGXJ4;q$HH0=*_e3p^sM<+.'a*u*CQ/:Di0Ze*4atP
%haJ-tfIp;e,M2I]C[i&p(U`I(>j'RR!UP-)\)G@,XGCT3ijU02ir)3%o!S"-l$?.:>'ds"4#0?.EZBF=)/983hG\`%K:&AuMi=!d
%@],).'iul!%M8jI(0VCYO2OPQ-O.R(&1'1.:,(IW9g[WG09jlHZbRC=H9@QhQK9%TZ<WYJb:W6q\NXAdCJ0[tg3)b)*b4pV_V2@!
%3P^=glp(mtj4.u*<D4t^oHhOH\1Vsa^@8!!;Ha-*<)Q?qMfD)#9;Ng`^AKu_5Y+Y/jMH/K[uTgla@cnfQPC:s*GKge0KrdFPR?a;
%^b,r\P2K(FmmM[BLNmJP0I$;X$eOAlMWGV)kqP9A15_HY$t.jn(=Ah(6u`/;NO"9KE)V>N$$FB$U0U-E7["42RQAe+D3ih)U;ZF4
%:+LF2i6t=F6)-9%O@CPW+\&;12^EG.F8=i/a(7s))`AO\d=BlTJSj+;PW!C*E(W:s"nH77CmtX;8V<C8Dj/G?b].I,7SK9V[O<o^
%*NQN%c)U3`EJ[/kn1e.Pemd-j.1u'//$sQM$9,sfTFAF]g#dg("`"TmP%A5KB3q97\;X)[+<VX<%K_(>J5CoP,6G_AM.DDF&qu$.
%$NE6$1IqEK"ET1S>W]5C$aa"d-@<+*-'2/IRtspmo^@I\[r2SaonPn"/jiRZ4')h-+9#8n/Tr*j5hi/mNk1]=1^l/cDuU=diB`7`
%TYCo/PjOnT9dPM@;<\HFUK]ap-8[rRJ$Cl]Zs4Bf\;$a?$j.[Z>Ee*/^Y<]iXk'^VRe`s6R-2N:#)-0E>>ktp8QTPgLARhfs)CC>
%$^?/Ts)+K_%0A>!;P97XLG)0q7OfdXG$=fC#2YBLE>)**fM*X5Z4".\NHZ'#h+K$\\DW:%.jtBHpTB>-HgGjbdbTW)A^IQW^,"Wt
%Ps(j$d^SiXY4sEQfQUmf&'3@5Z$h)FGV,6%p\&%]Y``!gA$bKsi^J<E9QiR'DEYC6_+_/WI'jceYu8;`P$O8Y\l=W[[<0iS3`,kI
%]"2Eh?*_1>>%JN-3Yk/A]g[A^=tE9ka-,)dP.S+*m_gD?IS&9RUm<2rWC$S\8,dTsE6R>'l?oK=<oa]tj;g6sWAmdq7A688;Z!k1
%kr1G#c;+$ad.lE4pt?-X#O>,d>Ah*J65M.6<2T6FC;-FZ<)P(2[k?"$TEdZg:fZ/iK6QWI[FU1bLem("\J=o4IV8P#UCtuK@^Y!j
%2X4`:f9fL;\]+SRf'73p3UCikeWXkuC-Tj(JVmd7(&$3-T3#fn<`Gt8>41WE]p"u)\'?XS3ZaerCs\@KrC48&!Bg;"Iid^C*^C8/
%Zh+ts_ciC6E_=EcX]IUO+dMBP-*%D-V.r5_&=21mnRl-)`+,@jZZZc==<3H>[?:P^X>DB]P_JWur5sQ-YN\Mb(h:]:r+C$uJA00V
%`-G<F47?^q6r][oFT/7?3p.BbiUrdQK6Z*LUc+eUp$UpZ\J+t$Z=lY:nta:7dqtY78#mB4]<s3V.On1eJ`IPe4?=iu3so0=O)@oM
%B@2Muod>Gu]lDDudR/Z-+kWZ<LXfQT5"sLu,U7JJ5i?<<HL.Z:Gf>[B$.S5gW5lM@dG['t,`"t>IZ!ec[6@8CVOSm42(AMcBQRJ?
%BUq;^2@E!B&=OS&6NNF5BJcJbfP.]JTTW9FYe1YgQd&!hSsPj2>cnA?$<>(Jn?a%'k#UZ-h)%WF`]UPr7s=LFmW[(SG=6TlPf,\i
%Rri2-+\+I%m%uG?4)KZo$FSKFC3q#U9p="pLN`:9DB@NVFD-G*)ca1uF8MAAL/`@pr;U[B=>^Lb+]u_!<FOcZ'7O_9d^7[n'.R-7
%S2=Aj9,2;mTuH?qom<(4kf:0,AhD5i5n5E1C8^naMlVt>SX_jA7&ST3E5e79kF5?$.<`$7#-%%/SAR(M8KKY7o4p[$r4&Th:G0l:
%J6O>KGZ?(N;Y<LBMd2Ojh90[fb[TU2Pp\IP3H\>#EiKH78e1i%iB)Fi_MR&mI-GD^P9VPP$I<n%<m<CMjfheBJO:;O8ubW;-]gX$
%:2gtLQ;djb2^q_Cg-=Q"%-Y'mFsh*;9\?S<P<u5`>rIF@fX1*JbN?1^-60mUp$-*8eM`-/^7?R\<%1:$X!,?D.D$j,T5=#ceXG[[
%%1)o.C-t.8=\RO]6g&AX-.eEs=:`%2Fu?Au_m,YJ*H:+.g!lr!1,@LhMu@d1r$I"l=etn;]>O9j+6p2c8RtSc(<DRb]#Z)j(DE&1
%$q\d'@<eYg:a[*+B#$^YJqH8Cj"Ti^H3smeAj"/6[u"28]i/hg_cF0dIMm:6GUtXd,;\P8J$"j'`>]Cj*8@M"i?ZHc-Yf2@8BaZ^
%_.?Hemig$G+j]U#s6Y0S)4%eWmi`(ZA:>&7ILg^Q%s`U7R4KcC7Fm^RN7N)_mMk1lj"NiXFai4mIc#C!hftMXS)6/rh`%-YqdB$m
%`Y/p_)fX[o6O'Sh4[&2@UI(^cet\gja82s+R/<18_f]1]&/-+8l]T6)8QVMu?GE4<Xms_^jD)17'e1c$)mrA=oA0j%()CK3GZi'=
%<I;l2hm?T50&AP.-tUD3SfsS9aJLFSQ:]!OJ2EZS:QnLmRZ.%eX(SO_Wiq#>McN.)Wb7=AT@HC_lE%Fgb%d[deq`,:S*/,[q6PAG
%/;&5>kKg$G=gBg<%>\cg.qA9HW]MpslX[d[r,;86Rq_2]\E8In1rUpj,.=iFht5tj!MMbgRsT!.anG!oc)Q;\Ee@:?2^J4GDFS4,
%G$ES,qHuY=!&DV0a8?:$f`"Mj(VjTPYk4P7KLo630Y(_cGaTpck)#FMioT'[Gi<?PQ?_@k(s9V;'//sqb<5;M:V=mb0E:mebN.HR
%RkrB'C(a&B4Q)Xl%+7jSQ@#Hu`7/F%DVU6ef:FadUh6(_%4e`#1,/)7<b0nM@G3ZAa>+7s%4e;i,22Zn`LF;[qi0F6U/p[JL"2mm
%p:515@`'tg`c8_^e(coX.*S-+".<H`c>DU;a(W2Fe'6UckmHH3hna$@K@?XKoO#&YO_O>;N%DE>&ajdP>&_nDfHs/!a-!(#:YbQ_
%j;T;r_u-^q][nhL1+]Ibi+]FKOI5b)_4!=KH*E^`R6M3_`#5nnl,Coh[`u:p(h99el"\NA[MKgg5UD>JW_Cc1A\fOJZV['_[r=\M
%,rA@mgJJ3PTbUQ_c>/dbe]!W^3Qc,]'L(!J[SCUt7YT)H?TG*>jbqY/44Iquj_Eu1MNZ<Hhu(X*.Z;iH']3Jl=?eT^PS'Nj&Yf=D
%D^M=EGI7#OgePr5?dimdDqt8s)snZQcbiB8T>Jk$D)Zq#^jJqmWEXfMcZuC!Ou'`LI(lH7'\hF=Q@=>.-;BseY\rB..6W:qR'jn2
%'6l^aFh(:HZWcW@Cpu4pG@o=]\KRQ\%GbqMK2BhbFurdX:[$]Gh9Oe)RLQ0.mM#PA5isT<LDee@$M&HHImQoW4PB\F6Si(84roRB
%jt"NNA!,Po"o7fE`>cQaDJgGlb;ddKOACXOS?F'-%c]NU5sDc;dlU&!>2)#p)<B\E7%.Be-TSD4>=h"q,BH"?EH]@^>+q<TNjr4&
%"OD+,YMQtJ/U,((RJ(]g.o-MO_f"e9>DqcL*e?%%GFA%pL0J[G@64g"d>on&T4PQ>:]3lD<c8t"Wh&^b>D]?@7Tf,`>0FjCWS3P&
%m^*^\5h'+!W`_)km(0Hh`Q_3,P`1m6l.4p1:>od2\+n&>0q4Sd?!KfQ:;,mqLTB/SAuX%LP.qF!\IAB+b`\9bjZGW"&=[PpEO.V"
%\1*I)orj1@U^YNG*Z<-[@?ZZ3$m,2nmuh[==f.%KZhlsj%m*AITA`KkIV3n;i*OM?I*\dYTGoi+%W<X9a'l>ro9@(M:Emkm=b8Jg
%me#&>DX+W]N)#,XKX3!o1[e/t,R]:<pAQm`"kD0]-$*\gVQcB0E,VTeT%'KY=n@]Rg63Fl!odgg\:SV3]K_Tp,]Dk1gmlW$LX"C_
%PKhUf17KRBo-ZRZKL-Y`&q&==lg<.P:LKPVT"jiJK;m1C>g6'6HFNK8-9`9u:"GN"V`k<E%S_6?C:/>?o=Oo]T43(/;_5*YK)*<J
%B(OtQWm)WSAFO4ViId=L\F2A)o=OR#I_OQa_XChNR;9rA:M+HKQ<PX+M8'"uM7un==>sOQB9L<a<oYrnOf)rXdk#YH^2.?=b/WMH
%BLU0LQt6JC=K,7]eXp!?/?(\@A4._)Xk#:F@gNj*_G2i/SP-N]Ueo6DX5m\&]tYmN`fFE:rhQbTLY4,%EaYafX%[Q<lA^**d41Kp
%Qebi4,o)WD4=RXPeTqpAfKutcf#g(6/<RPDF](ba[=?&#);#E]g.p;CkkhZSP>gn9NM.7P*Es%IV"Fl@[EOZOoqXmjHM'%WS6TDF
%B%@c5h6[V01O7O"Sk-B:]-jq+P@:%D*R?1!<7LDglhGD)`1jA`eh)kEFPSY@OmP31@-R#lm.bKI`u3Hfh"1U=J$8oiOofjhWL.ap
%]4RJSO<qF$17*OpF.&N@gi/ZK;6go`CR2hTUmYgGHc%c*q\P)k"qn;[9!t-7s">isar.p-S'+j4,B>k%mbmOj>0ZY.X`9Zc^=cc_
%rH6@tbr&i4'$N5j>k?2thlLKTd!2G--;E1!`\X#P[-_?=G_m*BEL^Smd1t0hAG3pfP_JX@A=9#E_'phdON=^baTQf7;2m+tS4D6R
%(_p,BDKPlW<\cgdN7XOrB48OQe1A*=fcJL#CC;b,I[0h*fQAYO%b&/Ve.$\PD6ct7c'.f<hIJ,7Pie6i%tebDIV!lC26/YbT"Ct_
%m(OVm!M9ELJ"1WcVOKfqH:@rG#`.FsSjrb)5a;:D0WnK`TeYs!#r<51g%,l@oJ-%XebN.EkE@+ib`GT595rqbQ+0j:B9N+)[PsG<
%5EJg\@K&O;CEJ=7GTc0DGo5^=]<+8H,3Q_m36ktEI$ICoc.nUug.#WP,gL1Y@QklI^.m+BB0BPdKVhm/)B"i`cDPDNg_HAUeX/u+
%5+ei0T;ll_%fH78?oL).]:MOGbt_@pD'O+]M6#;IP^0>gO4C*f<r:(P3_j@;LUf,9ZTBoc1$slpo_IL1U"IT_ifad$<Tb6ZM8q[K
%N5ei._TiV3BOnqfT$`qZR!7+lI\+rSB/HK&AEFbhGt);8d?qq4#&RS#qe`:u];[/\%a/<C%b^R5hJ6s`o.t#Df5VJ4fhcQeVBZa8
%s,KcCL-TD6*fJS5[SC_e_Ghhbbb'hOP>B3`N-kPSKH@a?/7*>VPOtR3cW03#OX@VP,+H<9qF&[-aU7WaD]\BGI_;#`8XRPFdt,@u
%hO?]NrZ1N8L8hcUG]2%#?A:b7LO7JdmTo:6OQQZ%4Q)\6I.Ml,*q8"PJBqaFl=5p2T8(1[0B;L?Z$UqsH)=L]j=T8Bq9(^5o6b[%
%ji+UJB3=FQA'`l>.C5>Dqail5g#qQ'`SXgcln@hkE*](!'q]k1=(@HVX1@ei`'jD?UqF"o"m3tnIhV##KJb#65\HWuLmhsH^*g/B
%e9))m$pT%adkFJ-?t>WY0QZsi:U55(ZQea.(B8T--h-#:-ZEf(CK:kiN8Mq)Yct$ropJnqIMc*$VOIM]YrBN=36As:1LiGO+>`\7
%b4[XH@Odn'om0S!Lh]dI>J?s6P"FWqA[i1oFo;(hRBX(J<nkl&=H5#/H=nUAcD8QZEh_Xk^8e09j2[CuAoZp#`Mll^;m4b.UnMBi
%X^?h0>_^?BZf+bo(n"OsW!iA'g7;*91YqmZbJQPWEPntR4>uj^/46.HAlMkJA8_5G"#<F%Brc6AA_nJ.S((PP(s5SuM]HP+%Yn(Q
%cKTRI_FgZYWW(+N=-KYJ_CC2DQ;J<d^Et5Gj-Qo51%lRK7*BckZYUi,C/#%pHD@'crQ=6iATu)ZK@BlmPp_8dX]ge&$le]$_ch>`
%O_$a,WTp:@;DPK38T^9?V;V"nKh>JE-iB51*H2iV@4S*g_.l^PV:/HZrAT?[SQ9O6Cm3jo'94W\HM'%Wa?R3f#]@G4XNNP32q&]W
%aHUVk9U%*LbY%_@L1d5k)MVrB$oLE+GikltP],,PPkcY:o=68JOu^i4=gMR`Apc4'#1mlbk+ZBqWp-.6E[1L5nkGR2Op.9L>a5%h
%PlHHF\WLr1e:5;>PY=\[lIG`Y0$:PIeFU4!;kr5fl<KQI4>uj^lmBtGab%a<8H%GY9/DKIC,1e1'r5W.@l`9ScH7u]CH`B;\)YKp
%%)fP?0hDXge?4P5hk+elc/!*;5Pr#5hDL3,/P?Rm<qcO'`eQ!<"J;VM>SYNYm]BRGG%Ro@r_1^NGguRa=*,<N0NW@;75n:iT]d0(
%%95D@eLRoAULPVl3e#n`mm/HEBP;[Z+89c@Z$b^-Xk-9.kHK#S[4],\dLOa)X"'*m.-J(NmIT+.=:`_CV=(cA!9:SQ3HhhBenW_k
%-31^D@A?\H$LcgAq1-pi+6E&5+@%+[c8D7Q"?sb3(kd,Dn#U1l:/r#)a.fh#/UnjiQ_!_OSV,4k>1<ajfW$n0WREL7M++W)W96!3
%_d"WC_B=[qW*VAt;-Z]7mGaVF)hd=$LdtEnm/8U8[0ba)_m+[kYM;n@dha<3\IBq\=k36]BR)66#a,&uK0'Vea)\$a+@A*._#o,K
%*Qp2X"28H'ii!?7;-[&M9_tK^Y(`cq=&\XI@695C5ChOX/kT=8XA[K</g2rcI4RL+8$b&\a_0>)K="NmePTTLU8Y)H?SkJ9l&-_!
%=ST2**Ic&YAsF+(hl5T=gJu7N'o]2-K;Jl'l'eBJ3Wg_4)ldXW`$,ud3)X!I.UF@DT0D#0rRj*2gh5BiiJW7Oi#f[;E5GH0]*\N,
%Bj4qnLXc3SYj5t[N>udSL4qa#l&MS_le&dak]f_MD9^!DWhu5N94(B1c+WkSKY9DdHSWNI]Ho?rhOa1i[A_Q2(ijsNLlH8]2@Z9i
%];eNVfErUN0>NX'BldC=]UHtkC1rR;##NcLfr(LE@01"SeGdY2,jRn.Ds`ep;17u@Xbc6rOuA?%.Vf":@'J3>S$d-Rr^c^d=Ek=.
%!rjA#J*T*S=)liLW@<^bl2_eL4TV"s0M)?:Y)7Ufi1M'W,R?u>qp..UaK7Z3E,tr!eZ]\QoAHJo.UJd9MMWeifd.0Ufqbf&VO^+2
%J/:$Eis*c\EAN-NTfT!C<QdfJ?,oc`da5#2oW_oYMMY]aQop[EBm/8gTEIsk"o[V=SmZCPMMmhcMJ_)RO_\YL+@]Ic%attmJDAPN
%8a%IOf$LWm8&6O[Ue/?=@FQ<j)&!M<4kEQ`E!!O?KpZi/L8@0TdT?M-#3)<A[]8Yf&KP5s*2LBH7N?6_f$fVWWhC?L0OR>*lFL`_
%)J]^s!=D18>9^N(nXGZ"KFU^C*GElD')j^^6Y"IkL8p080GYQ=MRA#.dNJ&!<,>/m14]mlgN#t1O@Jrb2(aJWd@kRV!\N\JM4'W_
%3oZ(BQsR.9,N>_]r8JQ5e!^@J(hCa2PF4d4f+!Y2"W:g_iujK7KY-8&*C=$XGbml0dkP"#?sMrSDE0,7`6cG=L_U>@1?,$&f:k0?
%C,=f`*"S>)Z"^.!`lY"7Z&-^s`mfZsO]aL]V$tEqNQRN'(:<38m0j%f8S%3a]ch(BUm;aNUc;dRf2+"uA('h7,YtSCZ>hW>7L'[I
%K2<-mA#<?7#&aCM:#iA1]]D@tJ4P!Z8IJ$meMO6s(Pl[b+=ibQ3Re$_OXd[`=;3[K3g1qZ/P4L6)V0X<>lrU,Oic600of]ESTgHI
%(!S-`hBY(<S[>/ZL-]WbBng:iW'=;G.Yh^Vd?KLq>,/o7'D6"k)Ft'T%-4]^@k\$R_q<Hu9Hf841ur6hFb?P;pfTY<,4V)#=TU?W
%YT[)>E&sie<Dm.X7ZA]bl3=IV)&e_pP;a93%9(nCQSE\8B4Qd>e:aL6'A:nV&qADORMO(LbeEG%,\ROQ1Ufm$5\'$o2IkLgSh2X<
%&LucN+h'kL(ap&QOYs!`Zo;g=+a1(0W2p=7`VA[aUO[B,XB95bgoN^f$`P"uA8#9,G23k=;=c9Dc`tGa=]g:bXD(61a)q[l"j$(m
%e:@(5e[4l8rK8r8pmtNRMQ.Nq0='8E-5,'s:tnC&d,Lk"h=!B2nF9ee]&tHt@dFb7/a]lMD0LHHl0`b#=[TrlMc(:5o&/-]8Y_#7
%rBE:MflM7;%ihudUYNhff>Xrr`*53M.Loi[J3Qt8D)`Z7]EarJSiqhNEW5`_e]_CcAQYOLiHSn1Ic5PA6+q^E1MjI#a6)]]17f>0
%6R@JaSc1Y@UcPL'P8)&522/V,dY"K^ASW9;8?Vr&.Zho^_$nho29H`_fR&S\M5^80RGuO!1%JAh_K!#hY(e;A<js7i=[mVpK7A$?
%YjsT^>/7_u_;pDb\_HO//uLu5>q:i9ZpW'6Ta_/oPFYYP(NORNIM[k@2*<fjPhW,99EBXhJ0o3dWo]_F`g7,?mNKH##j:H$'\5_r
%5'AgdJamMJo_,SnQmRLNb':kEY%D-N9F50qAB%lH3Yno8:DbETUh:*3*^dhfoXq&:mT9lR4`m&68KKrUH2M(2r'k01?71^Bp`%u8
%BkOnTc*6FS!RlPGe@69i1YE0pHIi"9p_I9.V?2e$W"W4Il1te'\:4q2]aE)UAE#VK2B>\KaSN:mWZWt/P8`&<pq4)pk'"A-B"*uY
%&)3YR<W+SQU<N!pm7+2s0;o$MR]23gUA"Dm9,9a?ehr`;MD\*&2a6Q)ahO<*IR7JlAORo7Iptj1^4289i,,E-/l!mIpXa9EJf4no
%<0(4n]iNXC3]SWI<ujI;K.bphlY#&C/B[?;Rbaj&`Ek^'>6=8*=K1rXNcq`P&Y0pMCXmUsZ-0A"+nR5hWSFG[j:S)<Q"DnGN2sFM
%o=CJ^9PAtm3!ri@R@=RgSWcOqWoV=42E7Vr:6O"b5p-dG7`erc+iJ<7\=^/I1%Ji/4_mK7'%^KQ=0PBB%M*DNc*cOF_q:t%6=YR?
%Ran3KSQ8j22o?DK`<CKc/%Kgid'<PmL_$1m("bb;6i^siaf#-lDQXj8JPY$#g:UK"Y#L=t`iYk1mP+K5-Wd<I45ic=<p^0b::516
%O+A$>>mTa\_tJZ",_BsdCQ4O^[N@B=[<Bu2>"@qSiuoq0o]a7_;a*4_=N@sZ3;'ZNT4XkK_$J;$K1NG[U0e"![;uT/AeVCckDmig
%5e>dD;6,PAAV#FHK<Z6#g<HRTgMX44i#SRj/,c@ZAZ8>DV(*G4=EFFlqW1F16osM>URtD#!5M4p1fcLW41GH7Y2*eL/n.bnW2Y(3
%$RM'\iGA_R>"t+A*P_lDK<kZiBi+[I@"Mftmr9<WU=uZP"$H[&;/;rZVUL0gN4A;!UE%i]AYs4c2%FUGZ0QtBiKM%*_`BMAQ@r+;
%mo4?ni)%j^69/i%#G=ZAecq++T8V8fRrYXb"OY.EaaZS2c[[@:9fisIe0Q\EU!#Z7T:-b@6V(FENU3Mk"L0-F1'sb-"Q`+R&lf,E
%:%%937ONUj<J7s=#!b;R?8d[n9JWPsdb[9-)b1ub!o5>"'oY&nr3CHM,(]Rr04SV*pTemZ=q8d#PrkbA1A#^3$`qJXZee6/T<$OW
%cl;@e-[(_<m6m4SpJU:da'TrS8,3F)G"%UQI-MlI-<aZ>=;C/gp2Yi16WBh24BgZ*\j)ELfq:&%s7@>l:4F[9ZJ)oq2&rDkO4"De
%W-4PA&@lGR1TKIl@BecXPYm0e-hXP6,!;HGK97-<hQ6ZQ"$TI\Kj&ek"DU`I2broke]q`^3[)c,YuJg;RqJ'(q%M8=NRQ?=M[>*@
%0sppkfXbbjeQ3!+PA\+hN^0g>)n0Ajn%7pNc$ZQ&r^#p=`H%^`A(4rL9i_:I.\C9i'r9jc_LnH*l7!kuJYZgdLK&(HbDgL!.c&K0
%d/J`5iR%k]Cid)L+7tF/c#Fc5#=N_aDJA:gk@#ZO7D5"r[oV!ElW8kE7oudkW//>g7"\Z.h%&81**&sZSV?UO<(8]e8JE&e?r6Bh
%MK1kSZ.""(k^1_nYj4Y1P[)"4buAH&enHAV@2U?&,pi<j@DJ>F9O+5!D0BG")5i@&!&Coe"#i:BG9C\oE"%W3MX+V$'O`#r(i3'N
%$/[>(M6mh$2N)sEpd3nmHO@W7bMi@!MR>ORHmLf_]<r+dPXmdbKA4B1]Uko?7au9UE&;>&lqfMh@p<Mg16\./\\?bVogWp`<9!lI
%>)o<=?#AM%6/>LpGqciqXm.2lAb+KCY*gBcVOZ-Vdq$=q,?n]DAQBh2's!t4RZ"t8aE2UZ^l[s1,o_Fo"dr?7YmSA3Qsc<jNE$\9
%\kQZ?ZQ]flA((s$3>8C7f`m:5C[c3>a*!iN2ot'QG=+]:_UH@hR?AJa<6C"hfN]_;=3p/PP%-31YjN>i*CJF<Xk#7-%,9!-)hghb
%Q'^"eYUXY^EDd1f,(lfH"08m\q*kb0TePjS%W#7W<tP$3;OTrkV1<2PMbrdT>c[Hclb=\?JRCU`$Q`7P3t,5N[]@]7AlddBcOgMA
%2-$g"p3(8=5KD^8/iRS-?Xr$rlINi7f[`+6=t5gUh:h[\f#Vf"F\J*[2?6^=C%a7i9f:Zba)cW\_#0a<B7+d]$&D3!boH!NJ6B\g
%X@Hh2DA7.G&1NQJI"lo^Udn(#R\8!-p!^pZECp$bP-Gq^1T$L6_H&aFZ^m5_[OSD&c]A[>G1s'b7sS"6&eA4$m85'MR2;9jo&['5
%;%0&GCims4cY,kEOuciqRm5!WNhV_BTb2Gj0`J_0E4!7Oq,-RX2U#UI^17[9aO!0uFM3hGn)1X1(1Fo5aA=JM,2%Tj.)\[@I,A\/
%BZI3;-Yhe>*+scLAOJ^pD";M?XfBpih1kVoD!;;^Os-p!NRe>:;m\"**bI4Uf+'n&C:,^p9sB6BM\02>@l:-o('IaAG1<2P,mK@P
%B&dD(<'W(,Go!0L.7l:7YPOli[MQ>HU]0dFW/&WmF5Y1C0J9>P?I/G<`_SRBglB[ac+^PaD`nATc\GRO[_dMlAqam4EjW_h--%p*
%aC2)1QeWOBcoVM_7Q]PX=+T2?*qi^sGnZ1V;!?3Y#2bt]Y8EoYBJ_f05LZ#s+DG_[SWXXq[c9n]g2o4:L=5POc)UGp>.XkVer<+)
%N:KI:,)7ZVHGhGM0@Q+8DMIi`HSW9YH>iie[!l"?l5^Qs2B9%/crOhjnq-CPpVEc(B1L8iY(lD;D!DOSQi4>CqW7Oq=oHWXE9G@&
%_a66)\*mO>?^7^>.r0(T?gJU_=11=Xgf\E8bB?_1G+8`d0^^A^]D0'ap-cI+[e_l]GjX1JAp^YnV*0NMelK9KZp_%@Ndpcfc1]jI
%,<@5PT>)cjoD+/SI=5s65!XmH0j%P_5H]3fhnSs+a5n]*ARi=]I*jr]H=>Xq#"@SOOoN,gn-HTSSgp3W"'`BU];PA72kN9\LP>Z<
%iP!D,<kbXu]*Q-PXgI\d9>r7dh-b69EXLV6]n11C]A;K2QQt7gXju:3SGME>_R]VB9i:!+K48!>riu1`jhi=o&-1N=Hp.A\J8YsI
%'K7K\GPl%8qgIp@q-KTmnNO$rTc<b'i_m<d2W$&$cAgl7BAS7>@**osjP/*diSiOa&9T)0GdhteI'm2h0CW1gWH>_"cFR&AVkMqH
%hZ(#^rOQ/%CC;d;0"7-1GJ3Br#<rcN7r,/pk;m]pXhO\<k1.Wc0:/:!X?O$F5<l@*p=&`7m^:1VlI*Y/)E1eODRSF'jm7bbIAABY
%Q"o8l#_T5H4C;?B')=D3mulZ!@=)FbYjq):;<`pQiem<d`[C*/$bOd\](G>pjjT*1EpjCDqkCe).(ui+hnrmuA0"fkl:@okrl$*t
%R5='=b-n$n\[PLb)ErKZgfaL+_JUnenWd:O.aX/qEd,Eo+%n8=BDgMjUXBpY?[,KF``ghTBH+b'n!0^c01o$Iile[k]V2+`cW2RR
%?[np"N$3rLG(!;2"1A'O(kaOK#jUF@IB4/$FNhDX(QXF.`Mia`YWc7JbMH[tqbltVl.1nn(d>V$>:4@H\9eVPhg2m<J$4*C;#RZm
%j3,R_FQ4;^%Z_Jn5?a>5V.4Z4SSu18G(\fKUZ4]6]Cg:=oQ&nA.%EJ%JVGhlg%KlkO`]e,r4(PQG./Q3"iWus/OgaHCF0,(!hEs&
%c-jdZi=C[k$d/k.<Y%99]u/)i[i`.%i_#FHKCQZu7l5>g'!tlYKit75Q%_$]gU!58-2>-M'-B@6p+.TnO$%lsj>Ykt^#PA)Xus4'
%0Gs]"4E#G#:5Fm'Wm0pRms%bW^3R0:>l>EhSo3XQjk8T_mEtm9cPRpAMHJ\_2[U<B1`mIXXo41+dWRfFp_DlJ6\CWJ6)fHp\d$T*
%q#HMgpS`%S?>A5qjgY,YrD>ZA*J_=0[<JUin#i"CT:EEDL;gi^[L1B@GIURS!bLu?/c+3D/dB-b<Mb$-+7)o;Ss#salc)[aqfMO`
%7shYoTP/f(Q<pYB_kh,TC4KC]1aj)5gUEJmhi[?KX0:ACTjEXQ^GR,1h`I)r^K,j9n.*e%hhO+uQJr+;V'h8S>4>qQroEI=Sj.nO
%^-(neV<r?,3Zf)4+25#\hSqQSM5>Fb?O;]%4`#O,e:Y08kO2:*Ik.*-k==C`KlT7\mt%rtpo3D'Y:Vs`m?ZB.lmA^YfMnI<(Q6OQ
%n8)B9PZ7V%rPtU*(9fBRl;j16DJAY:O/'YaoUJ@)?L6<W!+9oq=2F^@[(=XK"oV`@BDQAPp;oDk[TVO$?16P%ZWDiC<;H4toYL5'
%?iAV?p("Zh7WOeEUJ?FdQYW_oaoaP4ZCnqD>l@Q%CUUnkhG[4q?gXoUjia!*H/Wb9CjpWs_U%?_r-WRYQLbWFr9XBg(NA^u<*m(5
%TPr0d>pNdF^L%OPQe13`eK4[bZc_E!V5S2nEqf?uqRllI'bB0HI!?%NPc_q!0DNj`rW+$,Cfo`l0A#9&#XAUief3K3En_f=7>KXD
%TZPR@XY#!J$#^QNTC(u/K.:eH_V6Fkl%W#D,WIpIh%1e+2i.FM&q%=O_qWQ^muT$^5J@jA+I*d'G_/p=38Y]0U(M67]/&J9?NNU]
%Jaej!?OfuoJ8bQ$b3$a"YM!J7BC-o9b.8Gs4ope?(Gt"B;a'&Crq.5@8d[TD-A>eKEZaadM^sp.(gR`D"EbP_lDBX>mXJkcagt'R
%O;d,?$gPL[:L-`R;]FB!?pOf@?7+Wg^d<AS6RUNBbB\k72uT9'a/)1RWMq5>'6V3qV"*9(kkgi)Os2\RjJtFpNIVfkR>D>LNmLI\
%^;MZE-CKLM.hX$k'o!0lQ8%c0'(k,n*%<ZGlPf)GrY[VH\16W2W@oG]K#?]nj9e33QhsJM8KTVn0/esAi:FRZOE;^e&<\0pRt^aY
%'FfgPGtObaL/.>c+oiJp:_.J:qB4?U^n;=<okEHN1+.BV]+Xe#J`g2:ouuU+Mu)'fI(*+2DM#9Od31n)Vj_GL>d"Y2r+nIi[e!oR
%\FV\0Y!aWfNc7OTmt5se]N@8,p\([brHbP:0q[_t*44g3&&HY?oS+>0k_An$LR[+r@9)3:K5;#-k[Z@3q8_K,lg_HU5RgRo69bpS
%'b"B?5^<(o=iuY!m]F0L\EF_Z[I#VX>C3rd=$LR-T"4ReD=Q.crLULkiLlc')h,5!DdFRpX?BdrmhRjKm[:$['r#+FVai]brlJ:t
%H<f0!iOU*6a,fYY'+PR6*WGR%2BI99C^,2)rWrtbQX8HO4^tX(lt<cmq`](8YN"N)TCuJarfoTnkiOgpHpWjK2X7?h`N[(*"<l.S
%78Ql*Cd#"-9i2i?'`7f7[)q)hlZ!og^[M`@n50^q7%e)d_6_SQHlNLU7u)[&@5uYhLP"0ID86#^D&#k(Zk&a/pHF.s/H$tNXEEpu
%VpWmD&SBtRUnc\>mlG*>[gO#-IE``:EB571,H6Q5bE#sb7X:d/BR!`On*blG/cFn.gfJt1LVQd:Xcl@RW*Fco`p\[.g+<M80d7c2
%*ua3fT8s7Tp#u3l+pu#WN>r!k6b;^;XKt\o<0QAh<]7AI736\Em=OBS3%\+a<NCAUr+SrRFDp1S<dDi7oor7KMGsK]AgMi$I9V-4
%LM)m;b%4:E2V6JR;IVf[L#'foG%e(]DLK%,hRn2a-Y@oEN)k,8KD!B2i3_Z!D=-^2QO1fuqbKF>?gMNis6B*i.6A.5]Mm"_?E$^9
%$Z9=-)m$GNkAQ?FSYMP$d&QYWoc&Wu"m+5cD")gBpVVTlg[nkK7b:_k-Z@bEn:&K3')hIQF'#i:itI38*W2&'H9A<Kpc)/0?enuk
%Rcg#<:KGd.^XG&^1T:$k?#p>?9ateY0CBS#5MoUp;"XNBKi``H^Xu]#:Kh/pe4>Y<=8tU6IO@,fgHr"Zh0JVGY=60/W8@@B&@AM<
%VPr97pIaP**tN$Qh!ZgR#elmr*X:Jj%8ccaD\hA(>-kjH>Z\\toI7q4]!MFi_oD?p:YDq<4]TuF@[q1jM(op#EK^673OXfT`7V0q
%NRL1&N4qQ<,g3uR,d1Q+6m)hTSm`72=4[ga[GE5bkoku>;nlKqs&8u<[s#L)+g0U<3^</nb@BE%M]\:Y$I8(@rHMJ*`'?NQHHo+R
%N+FDf)%Jqjc9;q<o63ktdc[+%[^,F;r>B;MDR2qcS)HqFjBZ(Bd+@7)X66)afko,CI=CB#(3U4Gq>JJ,g</`>C1>$mmUPM>#I!jY
%HhNfK-dl^gSZ_->XZ]E_j#Ke*/*tgt=`,IcT=fltbEAX>lhLu`0^7JP>?d*;_RBp1!!gEq/T-f>hS?B`A-)*BE"JTTcH_&Rn"@:;
%f/ZrMIOq$P<R0Oi@s-o+fkRp:EqnQ_g:\X3o>s"?E;q%?^@u#"38X6fQu5,[?l'6r_)bf1J73Qg@QNij1g)U4Rf-hiEd=$lZCWYN
%[?fXOpZ?Jce6cO=RQ\?eW6Usc_4qNf*H8%.MX1^e00S3=>q&f,h'YeGJDoK3(lehk+O8;le;8tD:X>f>ha@R/F;Dl8r=4Wrjm1V2
%?cC8b5rn3(9$;GL<q"\:WkMRqosV:u<nX^+4C-M6WmhLoBP]:d./,oBIP-mm4tqn!)g;eI]nPpk>'k>f4&tCbVOs1^e[tQ-/rqM/
%!5`Y<l"(F=fn*Dcm)d`J[<JNeI2qLKloFXfQI`h'O.L[[X"PE+pQ^fR;t\&Vf0F]K]idL%OM#'eO=oh*ib!P@%WZIKf,*"&++*\R
%[p_=i``lr3Q`mL$kF]F+aDu:@gHSs?+hQhUYc$F2DEmj]c`;c-Q(oF$kf,g7ouK5e)LZY$R28)8o9&^nX1ruY,BsuggCh96G])cY
%?*#S^:\slI`@<N",YgugMKSA?^_*->=cN=IrAP)nCUsH*0_VcClOY,N]NBOSUA<MiqfM.,l/\Nu[)tI@JZku4g1VSA=?.Nj?el(s
%hNp$C><WOSHTPD\)so"gNTJ&Z+?Z^f,T]<m7Fdg!)rKJ5)u<P3%$$)<)T_m:4;fWqcs)9ZF0i2#;S&2p\acHX"rN<tG%p3G75qn*
%k8iEFS&bN[[<M@,SWqoYlahG4+2:>PUIs)Rb*Q-qCZ`l_EkGGcK?gB0nasYu)?tn-C\<MO/ZhKLpWa$5NJ/-b"*DlL#=61M+/8r4
%)B:rE<=6Kh>*OfL][e[+h>@*N@["cOWGF_Djs_rA0@AlPoBg;b<\"tFGM^%=h>1k(=SpQn>)ZKI^-:@cITQ@DlVi=]]`VU(qesHu
%kIO^j\pO"EG^<K<-]LGOcX%?I?W$k2VI=&"hop^TU0h>XF1pC!\`pgdO#LKLlMKLmQ4?(4h*4O?j`fi*_7+LV]97uc\p*,tS]=0;
%^V3VtSX^`cn*^I\(lRf7fG<RCWI2)8oLbS#Ie&VAj5AcVI%M5a=[R\EmKP``E#]5(br_iG^i%AWh;+Y\U]t/<2+jJ9noQrqgfeoc
%d#)>^/%&N54iRA\^qKQ@Pfht*W).pAdK,`Do#^8X\pq&6k9@)/(d*`MEcGRk*M]N]XVa4uHIpnuoC4[t9E'rf"'t@.gkDO#4OW/s
%=$M!9-dC,5=AsW:HQN!';#!UW=.%;u=t`p"c+[#hhi:(a:X6Vj_hFl<_qo"VPFZsq*@'%R?,G_u)d$_>qfZr6\TaK%:^Q3>]qK=o
%><dUib?m,XkC<8T*m!<V"d$m:%pJ2g7I[_T)?Z&Kag0Oee-N7nHI8h,#J;t_NH?ue?JX@ciIDSDGqc0<C&q3)&EQd.gd6F;TbumH
%G4"]=l0jb.K@iKYl1Iu9o\mJ@R:Xu3-o*Yt?qMBA-!a)Yr1Mf'."Y;S+\[S<:oR&e/f1(5?d"dNrqGl.CW2:URndsEEA?BT?t8T[
%iC4Z/[?-d=EN/P;j,W>LZR\/^mh\lfJ\9[J6+t'Pg*aJ@Fg&+Em%s4T`oacN'ZubWNrufCm?#Z;08_PC`&s;Wq/GHgf9:+AmAkC:
%mf#k-1`NdE0Yp0+&s*q<b/G_:,8NRb2t'n?Xj6Or\<_UoeRq!JCd5@0^+LFfT@h=tqP1V3C;^B@j5In1Wuc+@opg0Y`KO#RfKTf1
%cdllS+T+[)1@Rp-6R-^>Q\AM^:j7JZV7UNhhWS<tF.V3IDkJnRE$SaTB\.W`\(]\9ltIu&'eE.X4L_C6WZ+btlc"q*S&KCk]I5tH
%4tWu)/Ercl4<MMh]hh\5N[".\dV31%_qmo\nCtVlL2e>4?^5Q\&#EP`Hsb&YEX8uF@-P4'W`WZt]VFJSn`9i)\?dM.s&bQBLR>Cs
%/R(-#;W[FS(-Fb;r4'kc*GNa4FO+s\a[6Ki5(d/;E6l9I55\a`=?cQ5dj2BR?ma:U^XJo[,)At)?&7pW%YMf_ei1^Oml_Vl4BRli
%GOdrO#8qgWCAmYsnQ)1B,Vm+>'Ad!bp1k+BSo)4G^(H3$U=YOmf9Xt)ooIDW>Aq9]r=,5Ip%j>UlHA=C%oAajq.:4!/Qgd6T36+,
%.Si>;h`aVE?S)PqJpWmGI9A[\q!nINb&aeY<k)0`]\+`_q4@>-.Qb9.hn<.FHn5KIMiX*X*n7^-Fmd$7mT[EQY$8>_fW5KPA&IL\
%cQ8Cph7MTTpmj$:=`2;3nE0=*YbSpb3c0*,nI\M:WWF,&m.>B:2fu]QlF.g\%I\C9AiJ,!\,1<K'GO=k,Mq#PEZ2<)ZF7?PgAuJE
%o"N]bG[\8ds)TQ4\@rNe>'G-K8uBC2cEATVK#OZa)B[Kt8)i0sH3Z1sFe*0V.K>7F-j-faX]C%:Zi;MscTHR&/Y3*'LNaO$U[$eC
%OpJ8rb9(9Y5`g87E7I"l^JmA0<FOOumc/`H)Q4-fi6$dmXd/K5Y'+@/QXB2g17r"@W8Oi`iBk`@rHRLfEdGC2o5s0e&'V&K>J+[W
%NQ1jgnE'0RJEY65@/m>:Ck&n#TUP^)G]Sq48ioZu38XXY&C4s4mDmC?n,DcE11r:(1U0JtoqZ1@p.bkbkj)P,X:JL`ClY#O3c;AN
%/RQICD1!gF]WB@e$\qEESse?3e[dRn^<t*.j[e".0Q,7e9:TP'<t(+';[#CRofd'GY,L*e!QU:F26;/W$Cf;=1:gHfCPp*QUSciT
%#iZk_115:XWa>,O9#]13&@;\5Y[.W?fjXBjXhdcrbEf#OX\LW;=68bnJ--XHi':MD[(aaX04\Z0NF_PsX]"KH+%,(rW&]S%&7.XB
%BSoBsNsLVPOCN-+s)u7q[_Wb[j*-DeN-/qu`rT*O^5a#EWA.1UM3%7)9-"+f8UWb][%kUtL*8Fm([9>(naJ]`nR[';M?GYkUod:B
%@Ao\U@[4JQW5sg(LrtlW)i@aa0%L[c!c%(+9Z`<e"03`C_qI`mYS^3A8<GOP,p"f9!1P__4NSo@^)>OA!9;oB$O0[-,.`mZ-W_V0
%#ToTJC*oT)4dTIu)7LOqJf(Mt.7JgiC2DCX&H`]u$IZ-j5!kauV^;,3G<f_gP/idkGnelR!u&#?4]qP+3K47^gG#uU=qZVQLT#$_
%K8NO<go<9Qm2_<e6i6,ETL6-6IWQp;_GO<cYh_<s:>T!GIklXr3-$%(W4Ee:72s@SX\i8cl1sVceKf.@Hju8b"Lortd(']Gg"oi]
%B_9RdU8a\Q]hpt32(kY5j.ABeBt80.RXqMqY-stL:clU=gVXJhlCC)H?4-)p?DCP\(H#qMKu6biDhYq9EC!7'11LU0,<&t-8(-Xp
%Hd[p86)3;ia$kCo"pr+<BY%3GO'3,SI]oe<gG6hc(SFB;MDgo8j9,&dD%naXfL/&?a?CPEgeDcFZm5?ei4]Z*$V-,g"+VC3P(+CP
%Mp.1iNaO$`B7k,W2Yt;\4/.]I"tflpoeHe2FIA;DdCOFU*;pY,''6!)6UZFN\8:*+"5ZW0B,6L?3m9+`)CJs+48]i4*k@Di';_Cb
%=E-19Bq`0P^kD&NG/uEuKgraB$eI<e0M'aCC:qp^C;V9c^sRat7^lai`q/\US`RlVQb`cGc.a5W7QoVIODT4gn![\qeQ,h]E?/c_
%fhO$\GoTF<7unW8jQNZ9UaD3AG>@@#(K]WG.Dd(Lb56!dql_`dcjWb`&g*(L$QMP'Ar-Ff:k@%pYK(Kk1IO"=liYTRBHK\-h1N#%
%P4<'j=.onSS`oRUH[/L"X0j\=/7J1Z*>')/p2&eDh#1fIE[^;[S#f;;$;>mUELN_R7JO[;\R)C]&E+p4h^6/UdB<Y\j_KNRJU5RQ
%'XlF/m>:MPWkfI>j,3G',Mn26#-^<&,sBAYkODaap])sP4*t1X#T+F#p0:jf5=QIHD)\A-:6$C/QS\0qp'Eq;PuJR=>SLZ1e47(:
%3i0jsnNfrJGe6hsXlT=24GF5H&l1NB/)S?.?R#9cpujS]Y4)7;DVsa-++H3>'qSHOKr4tkWghT\:!5+-TW@X`lf9\WW35;ha0G05
%U#tkWG2)8m:dN,LOQ']faP4/foMclV<-Rk0KWZJ@f2L:Cns0dL%6WDRKk9E^bFkUC`.RAJh$lJmqIe-[PT/.XBGA0eV@Mnl/XS4D
%=%e+F"1YLKX$)4I:!).ebA%Q$]1*A3q%H+#!I1$,I0r5R8B(`k"SpLsZL]2JooKrD&OoL\!AOcRPm.:TI!baVRp19)H[iu00Q3<Y
%WQDu`FI,.\fb@6<N?;i7dt<R*!&o!/T@DU'3/e+OS2-7`E[,bad`h^.]^6kmX1%./m+J#"U!Zf$nX5RN0t#7IE%*NLMHnFU0+GDS
%]8&CO/T2MT>bF/J?Gd!uO2,NrgO_F"=&TNRNiGR0YBF1f*t(Y9[8bd7;=QrC89S9$(/mrK4oi7=PjX[MP?$%Un:mU]TN2e_SsjEK
%RVBBmMcH625+4^[<>Ws`<nS-HHY$#=ejF'(bhJ07$ZM!I<uR=<UH9g@*l%6dj[o!\<Rfel\=c>rr%/Rq=F%l-H;.eiAk38&eR0f-
%Om6gLgXfg7@fXu2:B<G.#mLJk"Sk89JMA]=UfDN`ms6(31?;LTL`YE7^LqrRZ"]E]L3>HE8?Y\^W,<Np=l^E'-9uJ^2d>q<CFa%%
%Glo((4J^ucm>[WGk$>q;``b_o]`:/&#hZ"Gb\a"PR,n1Ei-'^HTE\esJ6d!t.dXfbn7-3>0n=1A'-BlN:u>Z@29f^7>#*r**NZ8l
%h!)7?N[Dge4sl^=f(+h.n>eH1oj4P+N#$NZkeXteO=&3G"PJ/"L[qA.%`"hGQeSoV5VCN@2.V*bAE8=@/YM]k_r0Sp%Qb$/`&1%*
%Fn6pc"?UG]9`T:R@IRAU8$dL\)0/h%ZTT-q7_m&_3<]j/+OgWZ<0.U5kaLF[iPWlp+-q6qcur4RVF;#Fn*OCASE^="U\&\HJbWu?
%_^T'\Wmc;S<?#$I\7rli)$:F,h6lU`_n`]/ph\#.a#85SbI%Qtfg>u%IRQ'Z?8C.;Gi"bB$`i[U%0a+.cX@'?f?@Q9X#='j<B'db
%K17P?F:*"2\7"[-!W9#ZI>@L.Psi,R,Q2S>fW`F8F)@HP9K,5N!=D0:-MLk29T=T-;\V,F-7T[%5h+OZRX,>6"a8VI'W[RRdbtnB
%ChUpEH4PW=@"TZiAL6S[W]'(mIRTA=Ppth[BM?q4_i=hOUKY?i,TTY1m`.%V$A\d<g1%,fg&Veq`5>uh!"8TV*`Eg*il@]N'96c]
%B0cc_",a^LQ\.S$FFt[D9\mkM0ic\FISA?:][.?<K>ESA70Y8:Q\,??/9)LP=O!hJ$\5P+FVg=U6,u[:;Y`''V9\V0B!UA#'8-,k
%%k/>NY[cUtBQ21P"W/'mPrr=\qG4F7X'%-LRS>YVMsC`f/&S`?O+Bf3O\q;PCZ)jU9>Ca13Xi-jQC;;H3<nYQYg*`6aYETG+?IP5
%JKU*c!^BnD7L3]>@WHhSJ0W(4@I!b%0Pl,ZX;NlLfS5fXkmPN;G^1\o(c'j+7oG9a*%(!f7TU>1!*mM=+I3r#KW(TgfLU!&Tn#k^
%Z#Yf2'QLM]RNa,#Tf>N.,@0;N%Bg,M;2Ga>BgV-SJi6UDK&o7j_Cg$THo5aN];c_Skl3$tDgJO"EpYRMYLLo4'f+f2C*l%V)0jNl
%Q3XjRjjt=)(V['u>Y4=tmp,cmAE;UFd(VY)==5nKAd!b&+;[U/+me#,qrKQo*pf#[VUC%SGYYu!qm.0Bh@(HJrh\C0^)%mb18eUS
%ZJE%LOK(No_`k=[DD6sZ>hZ[5DL\N:,=<jAQeq&lo*MX6IcGjJ0CPo&ItF;*XB@aFY*KX'\[T?=\n(0IUT!?rl$?#IH%cKP,ji#n
%Kpd_LfZustN<38qYR?2b%EKc.HM=1d(X3hK"a`qP2n%F$DZ<(Bn"n>(V5;noG^d=?'.$`&<Cb!'DYD7T6CVK.V7lchoW<r<eG-m8
%r*FC&.([fj<#"5lgWqZDpO,cP/q:k'c1X&`.F/iJ+3ZTt/</2jHtS_$J7WKtqi'HSB(W^ud%0KR.s-q^[J;..9%DH=7iPAIlf*uO
%CK6ROa->%'0Dca5k];9"@B7_REu&`66Z80`"OH8)p.kTYO#h^/_01TZhhF;6SIamnCCen@(PEGXGs/d9C[E`A*.m+9.0.s`ETo87
%UNab_]`EHiVp2I:(aORBYM]aH_`_"Wa6gWZP<$.SnWplsNCO\)'<BIu1@jK$EOCe1\P1Zm0sG7,/R<mMHQUippc1PK?#8'3c$%W>
%Ii-@3LYk6hgn/$4cO!X=n!q+%NGV<l:I_XHh08V*I;crt4Y'(,Cqd/+>PcP8h?+2qO5J_m3$7q#HMV!S2L2N)g-.5)QsZcN_9$mR
%0o;&gqZ2--Wm(E2LT)mkn-SCs4X[]^=JP!R=@17IDnU:!@lg2+T'C1!ZSC^2#jelPG24/[9WTttqN#;+ZTZHjgE3NH0ao!&/a-!>
%g90T(s&%#+EiZ=u1@S54%Yi5$p<.)L#*#>$%<'V9KS`^+Wn=:d4Y3j6U[=,kXLk/an&'n[o7W;2>+Y,`R(;o(>[t[^na<OY,PW.o
%Hg+dEkA@Y_Itr"n`JT(,j<kdFmqR6d1"SX?PL]PI9O>_XKd6EMmnl_s*ZbUcrGgJ9"Qd1?+)o%/^1s$*ccd3hO))APZ`DeqV.,O&
%7to=l1Kak.G->+D<C#kNmIEMXR+d);q+:#mL&HrPYgq!3Gng"9gC)eH^A3atCZg8Rk%q5IeEi8i]=hg+9HM8^Jqe/AG-ds)G1+R6
%T6HqZ&ba2RmcpD$;=<T8m405AQV5(i"pNYc_@T-:G*U7U2HAd"^U**Yf:^3>;sFVcW0D%PaT;oie+TlB]?Pg**tS13P]Vr1G<K=/
%m-,ui*E-;XlLNr3Z_A"tGooZ`dSel_I_P-9=d><GN-+e;md4&knkl%KV6pDW67pB!G4aHd74o^I[i9sJ^qRc@mm[*h2QGO@Q+IlD
%HTkNfqn?`AWJ--AP?@mGrHaHb_8!_pgm=d_C!Us0>K`fAk6^;TfcNkgRjJ%9SCCZq3,"P+"=H(X+8b3[EVpcGeQ@.=:N03A*EM\&
%U"p?O-1]6H]X1mmb_JCNpS]At&'od+=<C.RM#<dsD*4:oZP-/tQ(JXMmm:VA][Zlc2siBF%[Xla4i/%`<^*<Umd=Lcgi07QDG4O4
%`SB1elQ@h/<lQ8%j*BHn3]$^2K_'/3)6CKddp8'a7nI2=#@&B-JMrU:eWJ36E2%)r\!e^4:)89rQPi!6O-*'U$GbH+<\SjkKODr.
%bO83q<A,Au@A\f"%'QLpH^,Y9HX-Jg2dtg\GjB]?7Z\^>)D%*XEmGlR8+&E_i+qhd/G>cb3<J6LmnEOt/=,[87Ru*%DLYD`VPeEk
%ld0.f=?_'Z%tRiQ1?a)2N4l)MYN*rcqkdc`A)fbMGW)c[^D#f-EnY!/E'3(DWfO)CS)eYUdI$;RZ!+KOd"Dk?BZ9W;$j[iIiBHYu
%*ZWh=jka"H\HG.GN\fY_(HPqNkX4eNHZk,/ikapN1[MFR-XUR`+/M.E+:kp:#f&apgA48#%tn3hDhd&-Z#=N6N7r.eOC#-Y#)l7G
%`//oRAmWf7<c<J`V0(>5I:,,!EukP96o"B1V!5tgTt/%Si2-<2hGlM"0$kT\69&iXbKCj`p3#EB^^WO=Qg6A/H5t/J>F$uaGK`NC
%I?K&oi.6s?#ImRgRH'/<k6&7:*"L)>9to%EhrU0!f7UJ+WKB!"I*khDgk697GJdKs3X^BsOeq6*1O8b?T!/?E7ahh*l)/)PpucVr
%Y+.o'I,;?"btNuo>TA5=eMoW$9/p^hY1q/&qo_;#2`q*O[d%uVn'fal-Xag!e]Rd;IF/^9O.>0`Y[<aOiSbe>iQJl/3,"Z)_';L[
%@-aP^GW'We4RaDEcAh#&rYH!pjl*XZrp0lRd(!Od]5*AljbmAk;^/k3:@=KX_8bRAr9%mYjS\Riq@XH=6979TaOgnsloFR8WKgld
%J=qmN^YfStQi=^i?El@me_Vb1eD(t*Y[D7VViJh]l),<U`?5n%p6\@na7K*82mT$G>_de#gC;-LQVJ-Z?I_;kh1!b>=1c\rZg5m%
%oIaa`Oh?T[Gr0gVmF':BO%7'r3VLLS[q>oe0!k;*9u`j/I8=>QkP0/o1&GaN)FF#l*6a-n:\bk%#Bh&Q;tOJL4si#rS+0j/0?$K#
%j7aKM6#(LZL;5ZkH9Xg(;-Sei5@=#<s!d@1C3mU'@6A&l=K^g*Jq5WrZaKMZ-Pq2FYq.UEh3Xe:i:^7DlGc0je4>(:g%8>N'BpMK
%b]#In2g@%Jj05fW8*6rV0"ZdL`)$CPB3%BEp>6UtP2TWCSGbC*XR9;oSGfo"S:$+Rg&HUFgPL9aSGi1i/=1#LNNaipkrei-n@Y2o
%#^Z4%,?tJ&ps3&'rF]5nrsp<9^OMT1rspH"cbDQ&s1=%>cHlM0j),o75Q<s#i@^XBrnm=8ht`:Q@Phlt3;u/62XNJnchRscdQbAG
%$-j(W+tED1OR>`]In7dhG=##3T&W\^(=8WgP4A/D,;8IqcKB\5OY%??s#6[%4<CF'+CiLqOC<>6Lh*[;#Ol-7'BA$SJmB8.;'3UF
%no`;q=!,3^f;9YBYLbHS+2I('I50.8"m^$?M'*\U.m7*jNq/rN0#jm)_QenIr4O3O^5U&V.bqAjrY\H$na2n-dls.Ns8Ke2s%ESH
%6?J;dmkD!C<8n%Z=$mHFK`;34Rn#ha3<Toun`S::nq7s%V?;*-rU/t1rW`DG$O4$&;:4WPSsT=),5(2[*;\]?I7O;@/rf&K]@uY,
%QM0OK/W,.pEa\F/hr&uE@K"LD1E;Bmj/H8&&,@Vli.(P!5QC+hs7)`\phtZ^:]GA*WFW"CnDF9Ds8Akql2UALs7/s8qqHVqqg\J"
%s5fmP2.]d94R0ZNS^k'DNX,UODnl;C^](-\qUbcBp](2as8.<EgYZmE"oS,pS)i/6IlZ?[+45W7q$44irq<heSY,qnqVUUOa>J".
%*oi#+s2.'lNTW/Rl2B35nt5sW5Q8uYri]";qnMZ\ri5\r[9nEpl$lIaAH-QYLQCI66;@CJ@t4FjOqRd2]6\ZhLL<FHUT=DrJ#WIg
%J,\%as8FZ9^QO&S^/05(X1p:c+90eSs0mLWqnN'DrqkU#L@`1Y>CN:D>Ah%OXTMi-%23+KXZokd/Y@4d)r@eeHJ`M/s$-P_YCHTD
%^]*`k1I:ECq^uOXh\?*-<+QUOc&CjFm'NUh5/Eo:'Vfr*O/ScK+(76b(d5(Y@PdrgkD,-Lq@i3Kq"sr8s*g(KBfdDDQJgf"W\[W2
%YdmsEK+[mG'&,*srW$/Mk^]Xlc0\[%pRHsFRGo"&Kb+H=M)u-57H1p5@$GU56K6ODQqB$Aq_<?o\dkG;&EB>&W"%Qd!1Rc1K6V?B
%HLnZ7A_<s-q=_V$T&T,1"OC^kjO13kZf5h:l-6I&SCd]$]3X1"8ti$8igUh)0KGs1CJ(0"-AToSHM^t,nN/(&GaRMY%\<uqHf"IX
%"_0gU!`ED(#Oq8F:JpqYH)0\5LhPUE-0Z#0>$$GaACS4Y=I?J?#7=E^-+_fnH-F9RS&@F0Z:cqI0mU34]!'\51*4@.NQM+Pm=`:Y
%.41I()t_d\!f`\dnQ<ifDf4jm'N&UDY.W7q%nQMSchGQ'+CW#kK4OIu,%?Wtkd,?J@P8g]28LtDI2_'7/H'(`514V>nqIr99$4SD
%G`F,>E3Pq/`SrY5X/gMu:@pP&G4B,a09Y9F:S2"c;GM!i-S73PoCjU,piVPNQ^8%=s8&'p^O@3$6p1r#^RjAbJJWR9[JV7/^!q,%
%mRkq*&P`kQnSlg8]cb/ebJ(X`qodph<#'\+=hr'Nm8.j)K9194HeDqfYM]R+='(Blr=#TJ`C"CnDcJ$pg,3/(pGH:@EUDpJ^1+F0
%8f4!iK.DU7-o>bM:jUHldP1VI$C3'4VKC"1_^2k*e))4s;@J"T^f9T\m/T[H!cdnKDKmP,P;jQe_04_FNlM0-#hKA@bs6M[q%dut
%C&#!-+`?6l2(M,()7-^"i`i.%>3251Z7DDY)8(AkmeXOQVtBd9:Pj6\EE5hShr^^9KC528D`YOPfL=?Z%'3'g1/3O6`pObGY4L'^
%HX_&rqt<Q<hYhnH6"d&0htc2_^5WbQ0Akc9I0ArQCuCj!Cp6^amgjYPT,2+0mC_@rFa[pDUDqdD.Z7@HD&^&T^kCdMDgtgr@H!,F
%ErinDh75\5%!Z,j.[bU%\_Q:%dWKBcAb]N)O8sFn@q"Z!\'cF``.'D"*,rc<Wf@t0`<DmTT*j1.*&\9PZ8e_rn?%n>So31&HFqU+
%N[sklm<g)j0/t`Xj7[2`h;)LN?^(F2A)4&3m^"]N_\a3o]Z)XMDB$ON=u"5mLrNGZ3Gg"ZZqQ7/'IoJcP"-d0f,#>D-3f3P'af5+
%Ogm$R8-I\rA8ED$s+O#ajHnc,0NQb@7O(Y^#]b@Z';g]eX>8=N9q"FtY5X_$:aEkDf8nPRJ:8A?T@e)I*6IgAiG?c`E+P'NCtu`A
%eMDZ:A0i'0e98HXfQH".eJa@dWd3uX.Lj9hOBUh%a\*_(f\]I]BBo<Qj4J;C4U6")fD.SI'3EIT+)69HUBF1aI?!B.VT:de%m5/$
%kD4Tc1mJBR=o[U\Qbk@"^HZ*>-iDEC:9ba;p/sZ&QqjAl/>GSn8`;[2#Ep9>*=WNDUuaMEc/s_:fiYspD%/_Ai236R[Jm.h^4i*H
%N,-)N\n=rke5UpiGX5`N^=Y"J]JT$`j2Xqjj_c.85HfO]&'>_R@I/SXW(DjtiRh>oif1YCoDK6R]A>FgIW>.3P2U&+h_u';Zh(RN
%%e7:0F/6O^c<kI2)=.=;;qQ"B`4*=[6!0UT&!RCg4065@1$dd'pj#D5h(jR*?cl=G)4$omrV]Gs(3O-R!>cI+%Y8@)2c(2<q$Wk$
%/$\8/nCV[8GT?QIirrqm+$X&`9"E:2_&f`!0AG="_bjN6D"%)=Cu'PSLF3;YoW-d.!n]G]qSpN#Qr0Xa:/6io"m5VQA&t[Y]5;lu
%g5s/PX;\A6_(J\E3AAhIMl<f]7ejT!id6:C1PG66i12J>oqLe:q&n_r%+'T*UBC2igUNNhK/%Br'9_lOANAniYWlqJQ[KN#m;?=r
%,B""\@)uW&rRuSp0[ikU'8_?4*+($3<HCbCbWbulhG)W,lLt\KQp+X('ZCpdiVD,OP+M[lEBL,iZ/92rkHmbGplH&_3jhnL\cp\Q
%hEKLYZ63LP0B>)s1*5:o=Ot\5N`@?q!3=,E!qt9M5#EB3a1<>b0=hE:V0Nl*ij^k!$g`b_a6`fJP%,eF_/[%-9d5Ci\in\n<3b=s
%*]_#a[p(IjQDZ^$'Va7N3J+<Rm^<Q.k`)O4?q(8<?01g7$*W<Sh<ls&P?+4sTcen]H`6tkF0)l^QI@?m:#D6)jDY&L^ZS;`QfBSB
%qlH:innaZei-5s"q))t03P7f,@`M.V<5IP<S2=d'(*,B[D,F*m+U0'C`pK!-,XgGaOd)r!N3[FUGJd+$HELPfFLLGK,V)0&F>&*6
%*2`(GO5.oO/\ShLgHt]+9asDga@4q`fQVs8de*6JW@&NDS3oa<cg$QrjlX`Jo*.&8`t$Nj/PArQBQ"=o03b_AD,&mTA3Nkt6bi6\
%aqf_ZP^+5!>S)4rDVj7Fe1n#[hM,MJLYDo0Jc4\S)f!h"qZD;KnF`..LS4Y3l^ct[+7W,*qX@?uHRJheB]jf9,6IaV:(F35hCpm<
%*b<IW4QZ`,[ISK9h,G030u[')+qJC<qAn=/Vr5'S9C`8BB0T-gS8%.X;@EHZoeS&Q<3`(Lpl"Nu67U8tcR)eL6-$H,.Q@ISrXVh)
%CoG>3;7<Z^G0,KGrb=R)#C6mX&6__?<U=J'4lK#II4np]/q'$bF0(0)g!%icb\m0fMgVL7,!1N]$o$QrD\_>?H95Qr5n*Y=c(%PE
%Qg?&,'5slOY]o.sGL)AaP?33h.i1jd@)_$o`&+&VO5F+T+iDEbrA&pW9=C2%-6(D\\3C3i93lUK[)3nR_g733kb(K(IMo(\ngP+9
%7:*2"OR"Qi'MJJFq@eK4A"\Z,QhGrlYYirVcYs'dI2LG0\>#-;(AW+5YDMqK9LO/-9,A4h%fPpFPOf/*E=I9TK@PlAd<0T>J0*?a
%@j)1=])c-\j^!j6)9mW_R"+<B[kL<tl.F6TcQt<E0#un3CPs3V6sj1-2^iEkS-+W"6j9KK4e''NVhb=r>4qr-ETu;N5;8&g-J7I0
%.7@OTI>l.)I>TRTpB8Q<E_-Ea(uj)DU39J4J;ojHk/Wp:l)HAQ)ifRR'DJ>\!q*KmP),Z$_G)6E%k)fjV169JCDm1gKq#ng[&P\L
%G.Ha_,\?kcS'+4Ln\c(,;MF5ZVjR4J`in^WA)>\2_t`P8ai_83kYCi'*k1StE,>nF65F>1c#)*L-:iBH2L'm`(bV,.igB]FRmHlW
%98O)iM,%>$XD<qRV(]n%!VVOJs#m>f,aB0Q21=A(jmlG=q;cKiGI9iCj7<]YrIV*@W^#Gs9T6/IgK'1K$$L6RfB8/rJ[CP9?rc@/
%V#]AMXikp4g5MNtYXfL'?UC)R\7G\KZ#+<,=U5@[]/!WddkjN?16j#O`_FaQ]u9a9_(9"`6u^*WeYLGVARY#()+]MP1\@7t)coYn
%)ZL]E.qS,?pmB0mT9Hh';V'orbGrMC(UhB6A+5h!rtZjJ_D1TB6k^la@>sjHEL`ZJU0^-<GF7]27/,[!EDbdppo))gH"-@?'82bE
%b*ee8&iTs%-5Ch#,"JR@\5kaG?*Ua+O\o3Cq!lW,b^AYb$H/#gT/5E%>MK33o:?@YX>h>;E"9gp)Pp@J:r[IM0[`=CP:\!I`3];A
%(tuh8`!dFg'1o#\)G]=!>p(f_+B*LSoBGNp@0]gO8(@5ue>uiohY;j9^=>-Wh,fr:YAnTpFl%;THs)?"r6eaBN-_FV+tF=<lu##u
%>p;cD`0&5^*hjNiVB=_YE\feRFQ=ciVIJa9I-.%gpIMX@_MFm)*f`u_a"f0caME?o<M2]l&X>J%a+B5S95smScP?Gb@HHS7_L@KU
%PcYbc,NdOEF%C_a+oVMNBDhc*A>;DdIjD.;>jgk\O08F'U$6&OTDSUg\-04Jc?L+HgKIK._s'Z4;u:u:$Oke+G&6T)^.fdC@;DJn
%Df2mFfWZi"ft<UJo':G_M@CAF1,Sqpm&rCWT9HhB%dF8+O9BcXp$;2!Whqe\9eVPQleCf:LKCA,V:01gM83W]!b\fTru(X]DPp[>
%VJ4)V^m+3[_CYl>\h>s]+P>L,d85j#0:^"R[o&aZ^mZ<]J(`'VGG`Qu?neAKB.c5p;$ofI5Ht]a`tI$F%cNcH9BcKh,,%2@mb?P;
%1?WiX/Cdgk3'q//X6]A7bWD5NdTn/APbb[ugHF=#Hqm7-B785.+@.D`ShgQ/EAL5pIaYS=!<G+UaMoBr?:RYMh<a6@GTl.:d21UC
%6iP=Ss)fk">>r;O0==K(`;OnXY6AH*,74*nh&3qL/9kl]Y?8Msj%Nn$BN.%"Kj-Ob<eJkP#fM?uqR^j2\@@d+[Wl8C3ekGYbCe;g
%Pi4:=`T]D?<PSG)j7G%'-*Yq`^4oj!YW_oH2qJYtArl''MdGU9FYK1BMncLIGP/@/fTsVI(L55]Q.NZnl@6fH5I.o4OK*YlVadRV
%/NRpY`9t?6``fZhGNJ5DY32&pcDe%fYn^l1.\_;_']Sj3oPERY&Aj_1L_Wt7o(!QuDsfVb%.MjYkKU[!\7+\',mYD6P=n%8./;$Z
%CCu(ebU$cA(I)/s&H/)i)c7JN5h`7$5kU)4q@"A;MiQE4)Q!eq."T&q-EaunO0%VAR;a)[s7'lmYA^0"_p*DZd*EAnRg`im\Jg)4
%X+X"4H&%k8>tSJNFP_/6!$V)[)g/YE5uO5`f9.XIdi@g_jDtf)iYQcbL'Q]N0+=l?NRcFI4^<^pAoMYK/aqpV1C^<WGV4lo$ft&n
%P<h3IW1lLd12_<S\,3JbhmGFe,Dl`m^?E(P7W=$6E-KbJ/?k%&iTDN0)nW(X&e*rnOM3BG1g'6:TGj<7]0etu2M8T>f-eH']:GE4
%c[aN33F\/5O&('N._sGoXHA6?E]g4`i_u8(O+)5b4*c%:h9=^?3T/n-k;2A=hqk_fW!_/7(u_hHfZdolpqZ&5MpgTPp,QH$<d]//
%W(2E#H5tsV1ua&-UHOo>D<I0cQoHdq"Bf_&ohB%)Z(&QA@?[(58)o(:K8[[S0FkT8B3?9YM[u:V8/20>khPPs+4,F8/\3Q4^m!+X
%*Vt/VQ$u*9WL?`oKB_7>VV97kin6,8pXuD.m$=.,atbkoW*-k6N'@NR?-S#/Os_jP@^S1M'L%n9NLSN_s/'I,nT>3>U+ZK-S#PUY
%JZLaC2V;TtV("\pDT9BTh7L\(NV:YT/_A[ML&L^q2i`Icj'ffT4!ri`kd<3aX,KooRp[V">R%;q\"A_0lAo"I;@=kYYb>s#>.6V,
%LMs0P5f1>%0Y*<N1<E"I&ioN'28\<Q\5P.mg]`>dI@cNSoQ12]E1EM]U#I&Vn#265-bPOg/Jr\@a_I!B[j%;^kh8^VM*ld+2"BWe
%&sAfZ@LfP"?,r'_dt<pL/tKhZ0K"oN`J%s-eihd/dI`Q37/hk:F)60>:M@;.l+uf#<O'uk]o%+KfC^lkD^ftTdIO"Xq,Es4o\MPN
%IQ.ThRTtClf09JQET.=Q0R&&WLM^='S0e'l*gAL;F="W@mbV0W(48&Xl^kn7ZfkY!MIZ4)rAZ^6p@71h;RX.pEFl!32a?6#X:^Wo
%J1Hbtg^gp19rFtlI_^mgDcVUV&BHBXDh$%5-Z<%?c'nm8h=NXa2[b$L>"#aQS$c'lI%B,q<O0qI]ica4Fn&,hc?dKZLC7>A=dT[`
%@@91b'1\*C]idU%4["@JKm+);F@%^*$-n0VarUAs6($UnFp[lI"8Qu/6[*h4fK"%ORJ.]3Ma^K&E[ZCE(cgNqc0ZC>*'#RE#l2Zb
%S]d![Qf5#/5$%D>Ir'h^.aCCsk&?T%88B[YcSQ,`keOjP)`/mP:5/e,H]]NWOsMg%jTga`H"-#?RphCDXBE@Gla^In3GKBhoepWr
%i@&[eHRH#-%1C=^9\um'[3:'S)dMBIG'aQpoe']5[:56BQdD;S<27s?edBjIi:X>"L$,\Y04ZP$&i]l6C;#%"%df\s3edYsoln&U
%!"F!CAW=3Sg[GaOSDq(8TirYE7?.T[8g"H/hE:L)LfNR]i(P"pTQ@%qquK!I>'fn'E9i5"LfD.7R_UkXj8#ODn.OLr!*q+^F)j*#
%n@2QC0JK*%i'%di:9Olbrn-\e&9>m]+)_RS$((m@@u?TK6.X0cP9(B2AVrD2V9aoe3(9iSl'g[f,NE7BGF(Yc3LYg@);QD8Q[3+8
%q4,4lG/B%]Qle!!6PCj>QO5l`dR5T9$?Oq2aA)qNe7jR(oK=IZrHk!I3GhSJ.I:Pba&+0s0S$<:D^9`,iRTh%WW[1-^[CsRd(J]m
%lPFjZZZt=IEL]E<J)J8*<AO$W4oIXiIA-RVBdj_V1*[%!*7rFW=!$m,%N=LLmlLSG_+Y'uNb#%A"7sdTWQlASo^N>;qKRac5)siu
%).l^s"[8nU35k(Aqppusdj`.7g;4%TK,f.pP*Wsi>2QNn['KT[l/N;_6;9IqD`>u`dJ&m>1T9jXX=n#UAh;?M1S![h)<R<p?tXHF
%>BiQa/@F.+3M2QG87LGV3qM2P;R>90U^:[[8s;j&kM""7n.^=laO(<ohkrDP(RBUjc6;(B-$U[Fq1]EJ41m7"0nD-jRDL-)kc;bf
%,WXqtAlD#VjL`DuE>CPg-X@u53T*X#Wj9])\26=0.Z59K:mRV?0'N!?OKuqd$SV^Ar5?Z#cZ$,01[6O^r'SaRc``R8jSA267@q9B
%=lainJjl8dcM^:ZLn.&-B-Zrfo>EYM4O:30Z*Pi(*dO%ikE0EAE_fgR`8jia!P*KjY>!50[B#t&dim1SjJ_]/H)sj]3Kt!u&:F/O
%Q8g3D.e+4^=!nWb6?f*.aKYu3,Y/P.d)HSo'"R?E=%ptAICUt3X5oB23tqIT6OmpqiLh02@"Y%8El\FXLFRut;"k?_6(X_lO=)aP
%`t).?]'2/D4eCOXZ,cHo4*s)>TX2\f:aGUV*],7*kJ;<3GaaB**R>D]h!mM3c5k4dOLX=B>$R19R<%S;(;E6Xc][SCnKcIQZ+bAM
%="=N<Lr98akCI5<)[/(%ojO173*Y+/:OZBWfX+\cI>,\G1o6'eGk6qQ[$jfmM1\(b$7X;4^Fh(ZMV%#7q"g*RodE'gk8YE]o9e!]
%35)fVZ#rg<1`X-o%+5r9j6;7.NdVjpI)_SE\!]1E/:iIclRKa(\k4ZYX,46)-Kj?G-@%se>toM)$L;GT&>tT2aO\lONWCe%#JP4(
%kFpY%<6dJJ/&:h8pQXYWQe2#+F`h)#>odld<sNPO.R+VOHdghPW$G]p8Wm,*],\h2DBJ)k/g%Gadl7$pC:k]^S'_=1grHES/?;/+
%_m3HKpQu$7E*SseH"`If`Gp^"eW+="/#:ENgL47PL_".AC4!(MA6H2;@Mi--E](13[Cr)/19>YPa(SRlmJ-0+X<+`INLO@aj31-5
%lG19@8oQPe&k^%kr=BF=oLdf@8oIMC.X`TPX#(s@Y_nR<?'PV]G#auhCfdHIUKs-sQc;T0KPX^9RA!oord#+blSqsn[]>^;:4$:#
%j-4)/eaaVAVd["*-P+*%I4L^ZB.jdd?9e#Pp0o3)YcJW+Dhho3fU:nVX\d]&hdiV7$?$kX/!P$$kq$YO'q*mbXl+W#M/B]OeC$*j
%gM4$P5o<ZZ_I^*W&sgbBKP(,HJBbl%5=>l0]i2ADdd,B!8tSZ_.ud(XZ-qRX`(GYU'._<t[^"91dDedW9H,KR6aj7_i4)NTnjOcR
%M./BKP17q$9%$E[ql,Xk=BXi#l[=YRR<?<(D5#%:'h%j(NVknQ2EQ0KOo.=L<[pKW^IoIZ(,dlgOe=(m.S!*AC>.[R=]8MM\c]tE
%RRkehm\8fl?^]qs7EW0jTJ/iah>p,qT)@1!RN7`;eF]oP_m8^k4W,I6r&jf%G0fd&OqW>3G6?rO7Xj1pLY;N@!oI#$<[=XuVBOc?
%Hcm2(e@(3EG2[[;d?V\aRN7#`/4;lC/2-7FfYTeVDs_0$*OZU(95:_V.U93j"J-lg8ISk\abSYb?;`SZ1X=u:0DV=T?<5FcMA14r
%cQ?==La0nd44iG=je^:=cl&Z(_obWXWeVB%MFQ"2G[=9Fl_4h2qYZ%-cg)$mkOljkFamf=o9*J<XP!TJQb95/@!WhLeA:]e&O\8m
%d-7RbM-`4b/.j!m09HM6\JW^e]:`KE)`Z5<KnM(Jl.nnD\WRW>?C2D>%bQSD>&*7nhA*-mjJSJTHE#\9B<GHO<fhe-&LETT@5B,d
%)=8/6!_+Ptn[rBf(,_`S]VH'PjP1*g9BrX5'5&oaD!D&)TR"XI2S.##kbZ]bI(tu7R_2LmV51\E`OZJPQ[I+e:5,'f;FPAc_g%?0
%&X7Q"Sn&F9_rJ9!31)S(g/b0mSa%LYQ8V<H6M8d<99GK%mWi8-om4G@ob&fBRdF"/:;:1_aZB[,bDp>$h8u2O-"!$7WO6bHotcdn
%:A'd$kJb=1dV1e!?6U@aM^$QL8EJ^j.@!=pFmZrT4^^B*OeKe<SEH_X'`$%A?R]hoao)jHQXCEFEh\nBc*_/#:@o08ZuB'>[=r!=
%Pg%B=JdE3eQi'a<Z^_d;g\Pa@1H+oAU)nmL-0'=mV2`3*<i=IlKbW@eMc?5LNhdZEkUN2R49lj/3T$F1Hg1'mA1!j+\3VB9rs)rc
%]tZ]([<nZZ@g%oQH;%G%i5EYO=Bakt-=-toV+=0T]"fR^pP0LKMPjKs6SD>'NU]@BSLSe;i`9p6aKPh^Xo+O[X8N?""-T8G*PJhf
%i,AR!(45fW:<u2)nBVD3BR[L\b=I#7D*S#QQaGWN(9&2*OmNAO,"8rAQ6qL)>u?qZlFLGV_fnsD8&W$r.GFsW+'*NDN&G"q>+?5$
%o?c;;p5%0c?TMm+]N/!PMc@l:pYSgcKX17d_tV$d_1_KHgs!FY6(PtcA;R'b?/sr];H\N=J@mP3H2qgZ$M+X"]P_tQ8E%1V$>mce
%H9:Wi"?2H_#Wlb&"no%q$Cu"b[eb\C#J%I0OU6sq9AM'/hD7,*:s!=!a9OHPm(YocAQRmq6fA'MB/`rDYm2TO.SD[Nc3`]s,/<pl
%0ECO+$_M9S@#9^_D-?dYJ0)V^0qlnngX`]1)N1&dE::kLBHZdB71'?)[mi'5jMc>=q_`40oLj*LN-^98QJMY;1kS&YoL0$1TKtcP
%9Dl-X'O"Vea7Mj_Q5W5M#fX-Nk.'+(34>A+l:Zo,n.6phdkcY*UG%sm%]^bI@R9SoKh4I)#sS\0Z)__,j[GNDHb3GI<irm3@PP_Y
%e<%TqU>k8HMGnn&/BFcTU`Gm'GubZB!HQ5!13>83cJ(mVd^Sd0ZD68pM:UfVg:$=NURu1ikLgY'6JHZ*j+XYP05Sq2V5lCg[-?I$
%GcF83YVBii83(I-I>UCjm%#JUhXp]tBm56\^f9on9BC;h/($g$68qJVOZG3@Fe/2Aju")Z9;=:h/K931)-u?Pkf2[EQQ$8plP4@6
%V`t"#LJN8V_FuU]?T:PD[CY+]Pi<qCZQKS-]"g4"kbuUHX@t,Nra*W>*Fq?9SeKkc-0_[r)tGJEr=I(N,$)HbMn+CYVsi+fSgPiI
%:VOp(MZ__'@pO[.Gr>Kl]+iS3GYY3\'\armXa:dPH$4s96\kqmdA+".8sU&q3L,2e:%&g>Ji[oak$PEg"^f_"a>dO>;QD4??r(n#
%A^R)YqX(&%rUJUO+3_>5^V*qcUt.9?q/-!R[6hKA[Y8&<Eq+=9M,8fP?Bd:%Tl([_H6d&Gp""&B%FTn>j@Y`VC#ao?i\BmJWYLce
%PeoSj(6NuPNC&e0?Q?L?LK&!]P+tKY8[1:&0;*6t:,G3'j7&`?q1?Lh/1$IN^8&O4#L&"=Z24p?QF=-N#-`=M%FLqaR!?:sD2Btr
%S:*XbV$=WJT^c],BZ)Oj&aA6fd8On3rqKminpK].<Q1&9JQSZm#l^YoXWDCbX>E?t1J/N&_>h<&Ujg*N=j&lq;U@?^8EpG],^"ZA
%'Surc]bH`2T=TrQ?c%^FHm2rIfHcDtN9J"OU!?Ohd[Zj4$;R`Z+.^WKIbW'u12`VYY4-$7#F\pP:H2F-rsO^h95kptOT5/AK_*hB
%fZ1.+HB=+lrG0cqA*ad(@4JUC>tr:dD!7n-"*b>^c-\-a3^gj=3HW<!MkNd_rlWP5r]3iAm2_D]1$(^c%C840,YspBYCSFu0ZqoH
%%\g%(WrqE%[2#ac:t2MgBU#O?W)]i2BJM[tQ0RFc2i#a1e]DU`;9W">d?gWJKp9ITQIoJLW=FQsU6nu\%Tr>n&T0%,-lY1L1b.ha
%f.5:*jN7hL"S6N-;B<"(#u"3q%^>]JohoqJ*j&$,g:KU3]T$6tY+Q"OV-0Y`JPltEdg(JDbW(hgWY7?io0mtUYu%5rWY;Ihn(&u=
%#u";*eHrT!?/niQ5%?-CV^Rst<g$3ia=Gnl8#&o:!F)6YbgBE^R?g0^3klqoH_EK'"-]kj.9$P278uAt+tMk@Yh-8ZPngZj&WV[D
%(s`UfW"*d-fT-`H'2]#B`E;42H(heONf%r!R/R(UTt2$kL$D&MAoY.a$Isul'fp0D:`\D$#)u[keVW(bFfL];rKE9DkBqWQ]&W[^
%P1]k+V7IJEq_,1POX6:X"J[3s$e5Pe3Y1PtV%i9R9Jj!iA]A1TF'T&2Eq(<X1?G"1!\%,nLd@9*dfC\G<JkptnmLrRLfk:jW*SYQ
%l;Rn=<4c+3]h:.k(O6?cQp\GEp\hgj`%%ff-d*l83PAOcXu%nNAYV;`du)\h0J?K$D<ASIX"1S5d#boV2%d"I@omI>ii+lHZN&P8
%%B_!?<1Ui?2$9V<L,ag:FcS9*(S&k55HQ7(c4=kre`dZQ_;t-g8171Br@`,97#UE\mq@0XoS=UIj9RqXFT_fAgHb_Q<Ecj:$-uR&
%i#Q-.nH395,>D"J]+qup_r:KJIR)n]nB+pE%Rngm*dK*iL,l\;f_rSrR`Hu5mO(^U8_$K5?>e]TK;5]ZakNEpoC5KN?i@F6h-#B-
%6D?)YGV5<%l@?FFK#ofc+B!K],to5.R]XG<1s1b'7hK'AJ&GY'f[t]UO!+E!!1T8KL2d?^i>dtKJ<)r,\9@>T.GsD2cmi4ZG5pF0
%L(/^%IugUkVJ'>VqU[_HmD:runl^O@8dr!W4]#9$,Di?$$SqMB\&n'54a2.f:ilnDWehie]7>l-8%k]!g?mJh8aQX`3!^^k[/S/&
%'J)9"Y"(_Qm>:)=jEsp*>t,A_iIh;6_A8THnoeX^@dD(.UVc%skoPudBI>\j?TJL2g)fn\$TA$^r)+dn#^$s1TEc>4ir,EGV1'S6
%$g)F9d,cq"3-*[-/5T3Mg\ao?qXJXU*A.IPRES2co@-0rG>Goa/Js*M30S)U/U.jQ&uB:-[l[Ol07@X`kM-oP$<X?!]m%)8UtRgq
%>AhN]+<sK&[_PpG"aAdOpJ+ldLd@8[.P.Y$YJ's>M7W_d_c//>Vlc)3(?L\jP`T5FW"V_a`AK38h;IYX$*Aa0-s.WS[n5&K':ZJ=
%gcAk`ao-YtaH,htWY[=u>dk2M+!F=^=7Xuk;TJslS#:9QKfn!.r"1f;g;PV.A1U#9+p4?:Q7-@p(0Z/M=AG9cfCI\"M\7MYM'04\
%'1NQi)>B!(;c0U!6c(6C_IZ7PCOW3gM`f@/<>Fu71(JUnRYNC:EWD$m_.4jr`24SjA3@^6i5_I5jhcXn.7aT#>*q/'@6IBYp=a>Y
%fR61l]$(`[-^4"o%ZVeYgYFu_:Nas>,[==IEjupedG;RM@j^+O2-e)'%ubV_;6'WjUC!J@nn?h#<IE84>ZHJ'd=e*^ou'\`cXMVV
%/:N`=Y8-UQ/6;H`*gZ.89/L3U5hBL'8'+@HbI]AD%$jS\%^qOEOM.mE6'XhJ`'*PV\&Zn*MCZD4G<?KKV>24_=QEVDl_Y^r#=hqQ
%1+8F5-OJ=2NdD.pQhEaI_-r):A$tUO?P,TqrV^:5]^.QKcXF8_k<&dI/'825H+3e>?'/bP:N+W)Lee90n,%652DXrFYVOu'bAqZ`
%iae@+!c18&Xg#Hg72?Vb^nRZ-.X7r`;!J#Q*19i[S/0d75T>[ch7J6/aZ4o?\l/YTfdVK<l6NRm$!ik^,TeeZR;/]r1(N8('.T=W
%UK:RZY+):2DpUYIlLRn1NK78VEh[FRLV/[IV^>t`cWhi>!qYb-cZRB4b&tjGb&ti\LN>k4#R>cG)87pjGUFsqS&g`@LMX[pG(bWa
%TFWb'`e4VGX6rp;51W*pe!pL.fhR'CYd,jRUI<aslNE.YYfLsM[2'^>S7Z=-d=3FP:,8TlVo<_JjF*6'0@de1Z]lt\SHN+Fotb+<
%dSu,mD96o5X@C)Pcq>'_]"$i_$//J^:)n##\bj3`SR.]H3ZTnqSIX.iSW4et>c6VI,1l((HcpOm^=%%mNWERk;][qHW9+,h>c2'a
%,1l(H2Tp5(B%PIb%RGnUVaG&If-s9,XfWk#fe@2=$8#Q;UI`/Q+Y@n\n4Y4FCenH,:4h;aih3L3_HMgj-c#Jj%U2l9`iu:M3XHRV
%VIqs3?82.KP3F5oN?FY-<h!)OZAIYPUPEDY[6rL:hU/&"R8/>c<oWgH-\]ZPQV8dC-AuZm@4#F,F?7diFF(dG)p^`ZR81da7AeQ(
%qNgAfI&:I9*?u2b:<29qVUI9@QK`M87q=Y$;`FXtRASX3-AOE'2cgb7f4[ai/CWhp`L6Fk,dis&F@\>jm&)K8(B&/-:+RjjTAf8O
%[M<fHmjQ&:p[.J6;2PmUNe1kJFhP6I*S9C)H7R/g?eV,.b.@Op>mUB9E_+Ttk.&+B],ii,&[DP*(Ao$%FYX.C^9InuS@i6C72G,t
%?X_FnX7HE_2,O,")6F+fW85k1W!(9Wh9;V)7dE]cDsaV-"Y@(=n:FLSI<$`].4B/:pEA8T20m')r:QN-r1Tb2nd6Y;U!FS/M$@rd
%&"S+e^!bSjMaPsnckbeM41e&01`EKb<J;2J1S%3I4T_\V4Ys/(q42<,+uZd-3pH`921N`Jl6WN7NUNU::KSOZWP[gd.oacm69Cn!
%*U"E[@-l3,0cGq/CV2;p<'JR+P'14T.9.CbJ4NDcPc=suoj(@m3\dL2]jOF2H=;t7otihf$8>CK-)7K<oKU[#OtLLN=jN&,??.lh
%)-*&^MhtJ\,XjAj#R>-7<BnWr0V\sV;VBK#Nt(<C1m?B[B'@$t;3bS9W5:2n,8QRDGgp/6JG/>&V[6@/=@aff'Ts$hD5lUCh()Yj
%nkpNV4f,0f.-;6n<P@L),u(B(9t@iI6J0P!GF`cS+@hC61Sm^>MtX!E<66)a#,ldm0^1/-hmiCh;B449eU%L'Lr5CE?IBuJia?Z#
%oi*$$Q^4jN25Np6^\LBH65;o3_sa0nKuo2A;0t01.A?$[25.#X=5p0L/O)&$?1ap(>%Qj**XEnnK:@I)<'a+Jjd^=&<:u\A1GY^4
%j5/J#5uXd;5Eg4F1oC[rdQQ'A;[&SWN;dTf<Gt_Fd?CSVU=lB=.L8qZ'j$k>Ou1ISWX!"-D9AgZ*545RWHtdgd2:?&.`#e,0rO;i
%25a&q4D5Ck;q4gEfuU/0GXRO'af1HCN;N+iI-sreh[_b+%IR'Jb!m]nl]ZY_m\$)KhLh)\3)L4A7dMKqYH3_KAAj[oTYu[ZB];E+
%e2^D$Oc+!W3Dnu@Po0MGM<[5r@Q5a8pO%Wl:/i=_s!2TYd$?/X^?_AYqPdDk@48mh5O]XgCCo=X.N>H<-`YK@`fW5Xkk__*UesmO
%2#?3'9/odsj^)KY7.lh&$S*S3^#:<5"NlQfK<co?6Vc,5\*1;oS1%d9*['Q4!F(M6OV?7]I=TV"!`W9N?TCt$$VlrA]\`"Q5,,7!
%G;O<61@1MZ@"WG#j[<O+(K6=7M<Z>_gQ`G+^1E#?=_?0V+RV4nf<k.l))^lQ'@i5n&EVYngcZlaWLTn>rJqF`e-V6NQ/P,[b%(8M
%S2a@nXIQ4A&bqP'"W?V_e]<T!OP]VO.4;.A)us$IntCQ=YO.iuEh`.!,u.Eo'.<'uPnV\\mOYE/-t"4:/_4:9X&hnmT@'Cc.8a3]
%S*hCsUAE*i/qai@-tq(%M98_X-rGN4n"c0r&L(BcikXrcV,K^h;5,1a,mB;$\*kiT2QYr/JS_3BD#EeNG11Z;PUNW)<%l-<;6nQ9
%Z_Wha4I]*&3\aO,^.eG`8eb0GC\2kUh.p9+!k='>"8.m_/0"n:RZ&@.8Ije'4X--Od!%,AW?_^j`#K3aOQ>oH1SPLSE^2_/.*nq>
%#O+_rV_0>W!3W[XPiRA+Ft6`=$-<2bbL;R5!45TF.)u@UD`5m\3&,Fn17U<6)0V#BYTD=7`+P-T^Y!F^,R;+N1Dc'=hl6XN;B58;
%-&MdoH#`p7a$J?bdG@i-;s69rR*%[S_a(:ag(d//'&mo'qm6].q=)]=Y_#Xf=PN/?)ZsnMG&_YbK3/N#j"_OT^^JW.&;GfsFBGp"
%)%P<&CE/'S!fV,UFfrG`3OsiR`>K0F:#Xc#)%L\7,,%j_%_t\GQCDk#3-_+5E0,-3-`]ZQ%OX`#_[2OLOGDjdQje``<eeN%'-BN#
%BR/Ob&T-=6[Z2EV`gq-8<1dUM>Q%BHO+<0`]>lP;;KZ%%2aDj\@1VoJ6kUr>b&;f*g&)]K2e4K0)_rE2L5\1.!C,WW<@9caSL3YH
%PMgu#hqX0Ui#p5$FJm9+X?0oMRePS.MU@CJHmXbZ-nmbPIKLoA=t_;=!SHDr`PhW`1Hc<iYja7\'3BbfYim(&"G`+#F<uM@AEN#'
%9*l*b4MWKs@5s'h?pRjL)ur&:bo%!o1nETeZ,CT@@8\!6$Mb8\_]cqCE0(eQEU$1s$elUGJqLS6rU\!d-VK'S:16']9&pUt2aI9c
%'!Lq^EHH%qH@mUuSejt:&FCI^42hjq&u!M4%@Hp``0/sW)5/uha:1tdq`54sT,,6.J1G?0T1(Sui4`Md1e+XQTWDiI6DH+\=js+[
%?8XS#5kD"L+kUE:N=72K0fI;L8OLdB"=3Oo^8$N0%7fLSXJ(d8oSc9a#Ii-"BR[MaL`bPCSN^JY:;[rk]kV4O3q6hl%@m7JX+gi@
%GJ.a)^_Ls>f$Fs]D0oWX/+&0b3`>`4EMlUb\^Q]RI+HYpHR_/U'WnhY^?'H+YV;KNo6@o=4FBTA%9H'D8DRX9,=W@b^J6pHA&PP3
%Y*b.o?VH3<1FC$-N=dJDRCXg'R.739A_n7TKF"!F2[7,qak]p7N%Q<#3SYPuZ%r\3M)RnHNis!Mdo&cZCsfAhX*EldFqsG*)(F/s
%\RWtofsa+g`s=&^Hq87tJ<Cp!ZKR;dM(J#mQj6:Wl.$k35_*Ip)uVJn>j7n.Ld))G[+&')bXe.+aWCUECcup^!,K5H*ASK?LC@"_
%TGF[H#m8M'KI2IJL>=!t4$B,Cif=tV(j5Di5d:4Vl2DMnI!^-AA=\qeHVZaW>ra'&*AZR4cf"Wl\369dW'<at?q2$#<Se;c0c<`H
%QTV'.^r[[>_Wm2um,'84AF&T[WpTH!869i;$H4#1.2LO7>X#MkG/p,Z9m9;1]]>*pE,s!hYe"<idp\F>/++6^BOC1*gpdDaHqYP9
%^`$E\WC$kljE]/sK6=lk$PnMV/9NR'n],/`8H'Ij>9;<X`?,1"H95Z!j$@NOIgdSV]$+.f[el*I8:&]T;ihM9WP;9@1tCD\IuJ3&
%A.[-1,N?O\UAABjFLj^!`9<9X1@sE$0kcXeIM*Q'BJLQ-<HLa$pQ:%Pes<\.V,)cq()jP,P)*4Ed^1k5`+!Qi(.k9=D.P\p.-OP+
%Bl#(PCnLWYmq=JVcplWD_EYj#)<G''MN$\A998iK::A^[X0"5i93Z6bF>b3,,u7`\hRW0,g02ou33p]FJs&=9WE-:W>3L*uP1'9V
%7&a75RjBK@ak/X_2n&3P:Q7)=$U5^Z=XdNm.=<";kRH9uWaRJh!OJ3$_$,6pK?1Fl6Yc*(ULc"7(4EllAZT:eN#aK[%k(W$*cMaG
%-3^#j"J]DlM+YNb5c)g@.LfnLgHD='%:ast.s`j701rS(.(:D*?1aD!Od9ZtapS!d/nR#rV*2]7eh@ll](h<B1%p.H=,n]Fq&N2*
%Sc"9c@;d%lR-fO-Bl&q2\Fh`TT5sLgU`%u&'=BC/l.m.6NV@]KUT'&-qH0%3?6D\DB.>It7C:G[1Fc>0M"]UTD<Ed`d<%9ma_GDR
%#M\@Ylu#]6rDGKA/.i+%p(";Jq7Bs$42\%R2P/W9qJ-[[ZiD[g8SB8%]P*PrB,0gEUTF\Q?+CH%<mf1pR]:%63/bl@%%^\XNLWSp
%^<clq<Fu20fGBml2tE&h:kTU_E0UOs<)nm8fs?4B;!Wf')b'(Tqe,=YbTE>r0C7t^[hF515h_"q1HNF<;Ukh/0*^<@g>n<aJ,"Sk
%4PhY]L73!6d839h7gaktF=m10a;<P*H;:;q!aA^(C//>Qa_9JBc>-Tli10!eEH8st,;[O0PDQSiW6='NAt[AI:/AL8S$JH\KSC6p
%aDkA+J*E8ZN(D,Irp6.Y*(b%_Gs%_W]4-XC_+'K)e#6iejQ<C!T;Xn9ZpW[V(TWU?^s<U=%sroYjFY72df,F#Ust\8o9*s@4UD&N
%*,.nRm('_G2E*Z;UngZ(Ce24_:0`+-H\c%G1$OB`C;V]gA;A!PB\KGZ7e'!acgfusL6qHh0cS@l8n6>H!2unr5u;W0TM7A*E?]#W
%5(j[mc"+l9#ADqA=jQk4q[C'HGF`BM9e?1tgcA2gj!:!$ZT"/pQgQ^Ne#j$K!5$aOJKNe#qmI6:XCK;gLGt_*WfJQ+ZO[>P.I%7(
%i!m#"S%P>s\5!46`WAu)d[%=1lR_[5`hmA-BYs,78Y\A\Tgtt;.#1&k6l7CDHF?Aqk]Shj&LnC7laLXaj''RA;,)t@\o$YtF[i,5
%r1Ydl),b?,Ke7'.f&g9j3dEapbS-3q1eZrF>(K+!M/Lo#"s;6l2Pg]aVV8&I@c*7o.s[8OCoB5Ham`8JNK9CeAPP%?O!QqHmmqqB
%&M#Rl>gfimd>f!GDeXa;T\KZ+QP)+s5KL5jC5:M=H\_>UQ)go7Y54WKCFig<*h!:lTW)TqX!%XP>_ae7$N\?rW-0pm5CGe\f3;6p
%d^cSe"L:-rC]]#AWhSLBM"Y,+*hTo[2H$S@0T.L+V%cV8],E[BH]X9V`V`hGTIoHc48`aD+[pPd[5f?(Gn9jmB-L^g]J%1(9[8m6
%?G*oHbpmTrpc?ajbr=d)V?>]/9LH$I>h8#p.UVCCIHr`dYZ]DBaLYX?og<1WHnM!T^@]`=`fR1,_dI1"_i2RgaKptom2(5IE`%a7
%<bukskdc+qMH9nI]*^8VW/>t1O/U]?8DqieK>0Y/VWtKK?!r!M/BNt>^:=TQaPP!<,5,9VFL_6kWP/b]H-Y&^Y$M!DVZ:/K"oV=_
%h)bCA,J%g,IJ;A%O;dbH%d#XY@s<#0PgQinM`=KUbR;XQCs-O%qV>I>&0'#YNMn;0qq.DWo@f7RXEuK;W3gM6Jt!@6j=H'L'PWZ[
%UIu)7gNK:ohn"C=<nKQN5JY;T'+am>L@?a0qU[e(D!SAbf_>^k)3IG]:&6'Ea6(beB>i9&EiWS<.2dp&(CMtfTtap:+gpGq*aNQ@
%^>9_/158!C6ei67,.$-/kJ/gA@^!]^QSrFqifSXj_88m/Og2O3[l!._27.lo<u]>UQ@363"o&cZ(s;Y0@jAh<04_&4>-J$s,08b8
%;a>8\aY34P.>AP9GJO-,SVR2-94,*Vo(id[371cr#t6hLRLh(U"Fl$j)8EpM=\j/(+"jn'T55DLn7Psjh&kQBmQ[<@3^i[7O!(q6
%F[`[cF,':iFB"]Brt(H3,!g,ojbq^+c@^M*Mo)C'"N_ZkF9rRYX>*d]$4lajV.-6Ql>Pnq;fpa_gSZ@'in$Ig!9W7Q.3/.,fXA/7
%kb<E>4#[`#$a&kDh>)@sRYT%r*(L.<SmYYIj5TI_9GGYQ<PnqY^.Q>W-BM*7E>I5NR#nBY/fsE8L:eg*et!q2lo-b=9clH)fL3m5
%3+,]m*r8=nm"Se$\%U8KFcqpJmpu*8iU-/.H"9?\U"]dIK[#EXp[RTTHSCq"j9Ja2,!RhK4cFj!h'@&/[psY4[SE<=!7n!'Bu$/`
%oDi+<Hj&eH3NN6A`??sQ?`2/"X=((+RWL[MAc^Y6l!:/>WrgmT?3J]c<>Ai5^:JcC?Za'3G(L,NWt(H)'>37<)3qV9H)4=[p"KaL
%TF9EkQiPWKP*%Ic.Vq:Jj-M&-VOSW_mIkY;WOqBt[c2KIT7OhB&P/X>YEs;G8"iYkZa_/ih1")<I^":a`Kf4_E?WlMM.#'sN(<HZ
%M:',^TWO@60A$n.oJPk_JOuhJm@2oVrd:CpH*H2$lFUDP2"k2idhq3Y2dcnjRI;XhN.iWO(Y0j-?%r*=-f4r!eR$gXOZQscR>dHN
%jXjTlG!KU8FSh?1"_K`2G.k5&m8%]T"2?tQ6pLVtmt1@i]]XBK3W9$AD=G`Thtu>B5P'7\!JfLDn$2]o:UaI)cqM6P^WqkRS7&3u
%)*(Q@;m,b0?qWDO+>2L`kP_6$3l)>biL2[)K;J"?QA40ZR=(&c9(1t-)/[FB^2MI%PN>H1*/a)Ud5T<-Q]/rFYtm'a4mMIUV+WVW
%m?'@Q!V98Yr;(S*JGt%NmN4GiF`oCT];#Yl$!g"7a=+VKPk3b.KY\I8@:DOYDh\I2E!%:GaO6f[oH;X\9<MF^C@FkdmA>e.&s7Sl
%XDS$.Z\ZX%o6bSW)`U$3,o,L2GSQ4-Rlm,k!3:OX_@^t;$gU!@#:b[YH/`"I#e9PahBNRYO*f#<A9\0VZ6`8Jn8m5d1YgU81g@&]
%(722nf>.mM3^5I<)a]as.!E$NG82:VoUg;4c%*HWNeGSncK,o8<'P07<]FWjq%Geec1RWPka$aW9REJ"pfa6:j`S!dG1+SPa_NCe
%[Dgu)8S*m?fm#\jqf/S_>`/n;<ZD/CKqHZH'f:[1G+`q1O=B`t6N,5.hjF&Hp=Tk!?FB*q^*RmGJ<caHpC\J/TbM1A65&ZSh:2k+
%e_O^V?BLqgH;O[cf1[X4Vo/E.9bT(K\]Z^ELYN]XTu).9XA(`$a1;Vp;i#O8@(SqYArF(mLsk4(dLs_KN7r47,`=YX8m'5e!`nP4
%P%50:RjV!Ra_?&[@m7p);=%,uIeTRsP:/h[1(dulF]CZ_.9lqAP993d#RT!4("ldYE(Er6XmbZBgrXK]#g6KKME_hn2Mun7TN>2'
%A:q&5h!-KBRH)[NChk5,2`*MB''u:ReiD0IqIZC.=H@:Fr>V<l&ph)7>Cdpu8RV\_Q!\*p0F';i#SWGGkqCkV]?c3!2M)emBpo73
%gTC"(pf=)k!Vp0CqRsPGbA&[M0N-9IIrqCt;\?+YC6[Kp_/*;[E'$Rr=H-KE4@5*<4=on/rIjh2A))%=<m$hhZLRB0'XdSf4U2P=
%hJqcrH14m7Zaiel51)^UbLo0Z,mO<tU=htsb2NB,gRZY-Qf=+3\1o,\*gjFUE'm?;B.As1\)7GmbM_BF@S#>g4>6\sh%G9ViJRG]
%8.>-V8kbel3q8>)]<C^>9ljc8EJ<%-RpF1C/9W-U7to%)/HsX(]DKts%&pD0GF-UmrB_[h"%2J;VC.N?Q<:rkF$+n<jUj-[jR8i'
%jI%j[lLN#oX\KKT[L\75FX)d:F8s+ifD;c&+iD<Pq<:dQ?cG(_6a=gJ3b"f<>f8_L<0E"b>%M\L(,"'e%;GZOX)Nb2^:+mTH,3la
%b3rHC*f74'Q#?"*>?^ds3`nMb$I@g/.75q6AN\Opg$NS&UunN<=DkEH=@,_?JU@3/:c"b_)1:S6+feQf52p"oW02$A/lK;eWj+"S
%mX?='nu1Ha^(MJ6YH.E2\I'nn9)(G706KIe&3H=I^7-dOP;M.PkdFL[6]t/Wg%@\s1;:VVU4hk$f@p!+Q(ZhY/F=!kD)Ql@[E3t7
%cEGarn7@";-sbm^Um9]ur4$<b6QMj[8aUQqm5ZjOd6D<@)#.`IW[]]<_S3,-Y74e(rj&b>6mfBgN=61<2o=eOjpJi^1lF4D,%h)7
%o"P)]!T$9IN.5'Ul(js1FJMD2M:6?kJC@*ibHpT3TDk$MqY>kfUmE][A,ZQiTCfl\qfU?=7)][TH\.<NREdG[&`)h$l8?;Q'hl0Y
%$HFO'ad'&f*HdM/(RK"D6Ljpfd9i\]\6A=G]+W9bo%0L,N2+WMACpmDT`)b(<Kq9\i+"S[Fl!Y56o\EJ!_\4d?mGAFPOt\8!IHJ4
%SrK"f"5%)`3?aR216Bte*E.-^$![9fj'#rIkHSf8hE5pda]lN?#sH#o;cI)?oW3\>7L'pDYj<N+Lf63C0K9KbgGLUokn_KGE57>d
%nc:i:Cgh[@%1$#/n0^E2mM<l"934t>PIiJ$PJ(l*MTh!4Rb+ZulbM;.Y\kcCf\QNm\(R!E,4NRUL4&M-<m4F5dHe!Q&&QXt%+C)p
%9O;A\8_8]o+TWXR.SM]T521=TU-<R3"%D*&D^C^M:7;F$mN'"jGerO]1fl*iU$qShZ>naJ6=`,j4@_pe6bt6d3KdSF_OO[+Jq`P@
%^Z73e:$%Hq[iACVQV;c!kK68[TFbH#(^^#9Q4k3PUY:bVpaTe-HPRE=WI&c8@op[,&%f$C/fip4KuT'Bf<(8!Ba%UGAq+4<.lH9N
%XXTe_HAt>3W2)5<-^5:Vh(.SRjl)R5Cos&D"J(!<]2<(`BQ=uWerYo(Tf;=&cD/<<5TLXOl=HCITUF2%*GQ9@Ipg"91?EFTNHP+/
%_:AWcTCdu\'W;'fSu.@Wo%PaW8&6PP>@Ht+O.RL`D3Wk0?9G4$+jZ\kTj0P\i9.3CeeH+*hfN#[1t`+A(#bqc0\s-sZ[@.sJ<]Hi
%>.H7oZAV_9gHE!m[2,6>DRO`5!;0^n,MZ+=+s8gV8,RVKU_^Mu*O&KIf,*0/Efq9)9X,<761i2.\[/T@/A46/Rd^G'h*^7=Y(W0a
%H&$-@GI&T]&@larSPm8@Xjatn0]jBQ/*o&9m=g3LAVj"h&h.0&kn0f;]P3+*MA$+H9Cp#]?X%Xr-$unI*+0fqS5:rn]0U+@$JbOg
%i=FYU$u[^lL/>k>_lhS".Ihse38aH_R_T`bbQ87=lYG#C`boSbrds8-nsY8Pc[l^AhFsVt;#nC$NAO1Za)9G<q]\6u7cdGogUW<M
%0PaD4rDpHO^Mmrii%6rSePBY;aCqWmMjhdK_%mpacWckJb:9c=47S:fb'==Daak/LffRkrT3S+L%W#92RKEaeG3b%><b)Cr]TD?]
%F=ab:76MPdR[.aio0Oj@ZZ,#[&bBH!A/Z0]C\ns-#OJRB.dUoh@:2uX`pJ_fbM&u5/LrPkYNDhHnmt8_\OV_4XhKJk]<nrXh4EQ0
%Hol!u1qMMf!Ou7R='hkh-_MI*4>)tdC^9)[Ur<Rb'phECG\!sne+,Fd`K,/p<5Ep=SXct>$c0SS=dH?R)hmj+%1OP&p_`\9q#^0Y
%KGaH1lBTg.dWp;u;e\%Y<2I!h[lLTCO\WJ?Se`m8V)'LdHQASk2f@^E$(X[Ie8](_J$c6.^4L1VI#C9V)cEE,6p.@7.ZE(]j:hm^
%P^MV\aWt4]jbU&Qhegu-1aR_.CC'?:CbSmJ!.Nn\FkMu441$K`$Ob]@_%u1b&"eUhE2S(Ma*`dp,_k$L5ndrJpQo,W*f[ZghDr88
%Go>7EXB)5@bsZ0\>C*Io>7:UOjgObS[5O=1>`&>h7WB,E%kI$&/J:uSCUU&n>=5^a7>uGb8ED'oV,;g5M/GHth7?UF1DGIjVg,A7
%0BKf;*HC=lan[lq"EqkEC7A'9=SML-09T;038MZsc:C_s5qra4+c^_9q#"HEWOE?L(EE33-O+eJ0>3k=ctr4/0=Y4QL#aM!%\H+A
%5*WGJY1+A:V]&HUb8rhlb2[S)M9K6NrRGf7"jVN5l9\?u>uOKOL^rT\^ffZ4G<%>4^0?DI/[CN@G>4F:gqD`eAnR0/'/sU;lOr%1
%E^e3"Mo_kFO/il/Q!<h@Gk[@K!qTLr>Z4,j?]!4geV,-uVOp7=X1+[FI4?REYhe`dZlnPid0aKRd6\#T$9p8eoD3%-&!q&\6YrL$
%>5\])onWH1V1f$paTOESD2X[5$)Zh7XD`orK-6*YD-?"L0[i9-k/)NAoW@;%kG:6WQWqSl1@\EiZMEm4P7d6<Y*\i9:rR?u?jjeE
%gV","4>st#1&VEDY*gqbgEBlYQfr.FP+*Y@S&?/k`:j2*PDT;&H+h_@hP"(9Q-`s*`=uK=[Qe,+BCP@#\8(,i(OF2#(Jo*7+niZY
%c:!6qG:pZFS/Q?n#W>u=C\E[RigY4Me:p%o0igqO-@CJJZ!QN+JrZGg\)5KhHS_[oa:R/6P.5MTd=f&f;O;nX(ji/+9?Ijf:Y?We
%92gq)APQ?T?0WHbnDb,^P=Ta=J@JZqL:Pbjnr[Rk.n/]m?ti(,lg(p-.?/>NBJH*li<de$(H<CZJE/e^h5=VOrGnO5as;TRIRn,Z
%1Fu*HRK!Ofd>-$q>OWg8EI;\0T%s6g[O^J.nF=%2:O[f\G[uf@@AtRLVo&Dd)$Nt`E`3N#"QmuMlo!%JqQ'4]:a6,N@<FJGQF-t:
%-WhTPG8Re@_r`lWXmg1ms*oc55`UVIKo7ugJ(s^dM>81:O$I9%DTY2ZnTt!Khb[em^<j!AR/kY1#>NbXF8L%EJa!]YRorp!Meq\N
%`m1r%>CS3*Gbe_skkg^_?&4h*le*Zu7BC<QBBR8]c'!P/kBEfu9*Vkb8rZrJ\j,ZcQCaM@lRdmq\DUPlcmFOg@B3qX%p7?Z\&'2r
%=d%^%Y?B]a(oQmI6O@WWUB=Cql4:RT>!#rYHkFg4[L.4BBl`^[Qt_M')PeXt@LQ?_gC!A`7dee3k%=Dog;RX2_XLYsK*$4=O+Ko'
%WI9mF_T)s'AN]$(c0;_`=]bpi4j(ObH.Xue54Eg%X7CD=&[2X<7oUAC9&?LY&c!-d9&@sae60oJ]KWbDn90?!>=i;pLA01\MrZ/d
%h'D&306rn#-`YS/CNuck0,Yk]DC1H;ki]e9A>Z^PIlk68A34d$_p5bK)M!s:]GnO+R@!iej=rVIGrM$V-SbG8a@sm`;j1RU7,_I>
%PEQ%)On:0bjP@[BG&m0FmE9phM4?+A8u<ofaYG"u[spDqmh.0OB.*-\o_QL$((i"`ekgP\/kYA+dmMg1-g'dV'305H%Mp#9acOgi
%Z#$o(7;uo`#s0"+@V*&p!o0'3fCEA?)*;c6*1'.STTbR`$Vkpj-Z?rpaad<1o'T\oc-.kM-Z>OF3a$pW:>RR9d#";E&k7>;ZBOfR
%;4Bm$>F9VAR>J5':Ki`W@e!mqb!M7J/[7E17Vlpe)iT0<GF<%+CKKm<@peZZAB<@sZWao]R%Qp\<4U*u7W.c'.lS?u\iFrN9ubN+
%BlPH4E4`=0WQ?=k4;'/%);f*.pIn;9%^<&]EK`-HQ%]g7Rk4/SZeBsis047>REae>6Z@ACRKMh-IB_7)5XDs&O<gIU`(_"U.aCdh
%DDHmEZ_!.GWHJgKHQjg>G/CVMPCZ..9$,2,/Qt<_:<p)mPO[tiNLoe'*EB!m4W2/E)9l6/1'ZG,<O!EimTV=P@o)[gO.?aAhd0RN
%*L0dl3SWbL_Is<?B7%Q^]'!mj8EFs>fnm9&/>L=.Q=9NX!F,2<Won1/QM8XqZTVD3T<>L`,!j4SB6sb;+h>lVqI&duBtNS>L[@oX
%;k(A3[3:Ql<3^W2b*h5R4+"1EC#S]TmD[e(oUS.t8;Y%>4528*prRgT^h]#gT['mWfNaTbZb=8)PalB:2r2U8452jP-gj%u((:ED
%c2d=QF9h?,D'YCNU6>Au:5lnCJJjZERr"-jQ/sNdgh/"9rj+cO5&g7a9JRX)c/!#7%?#Ch]$L)/\h(42Ad%P.=d8'?QS,^HV>C[B
%DbV^eqeRp/gS4QRndtIZe:!Xfj?>Y63m.#trWpu(Q=9N\5q3YFC?e*;TZ)bS*jiW%KlRD:#%5cDLA=e<fn#G:0mV.:#:9u8$+gH0
%7)ad*&47T*5m-8VjlA]0>a]o@*].7`]kZh!P:=-"VP";+E+;<LFeJg\3F"^\=UpT"%3lX3Q?pnGN0s%0*jc0aQq:'YRL!>dV@X!d
%SilRt8J6)`=>)H]U3()n7B-S%.qg7c`B7h>eu$@M6-IaA0!o\WksP>'o3\#$jT8ZH4HKH?n7A#;%[RRV1>G,,P6XK9Lr)'#R:U#b
%D1GK)>@F!'o=X5gN5@J+=ACo/H%dAZPn'lo%)&s+^sf^`n120rPh*5S,_jq:g&On7?>V3K0+SDTnDo._CE@V8ADF8^p9_Ch^fW\@
%lIl6mNVf9s[D>O]Qd]YkD1GVUWaoV(Gtd=<C_$]^1Kb*nPV:u[n@,6XrKZ"Z;:jr\_eE:,e2Dcf;A5M3)>Ok/^b`"EaLam["#62(
%)]JMU;Usp!fI""]IsXPW).a*Co]lL.YWA*#[!B?Rf<dQrW+hIQGZmf\H/mEc(F65iGrg$7Y>"'EomLOtZbtCm$^/Oa05;^e;]3^h
%G:>4HS$JbH#8TaF%QK@"*3aFeoU!WRP+jj;9?a>L,OZ^o0$3@Emp+lmqp.k1&uU3FS)=?Z%5jP'&fPL?&/$I-0U@eXe-If72:MmE
%2`9++-.uNj,qs,5"#^TGU0%OUe;1+9=[S1iM5,qHi<=9CL!#h-3!pZ0'7@e3=EKcAhMhF!f%Y9BRB%`t7kVR)<"uppN$s9&Jj%d>
%2limq<Mt_C/3"S0$4RD.W3GB0[e!%S1EEmUh^rs"ML@8GW!$aMZm,hB4++!%GfUEbTqu-IhW._:Q<G8scr-L1HYBCrTFEJ!>g*;9
%?X1NC:E;))H>7#4,4njIF6G("453F(X<:_X4Z0!V,;5VHI&*?k7]_B:RS3ho4Z0!h$h[K9ZCX[-el)mPSsnX;URmo7XXs+oA6h<t
%WN"!IYH`RQdl0F4LD*:mf[$N,Z['HHe0o9L\c?QJId4'T.?D*RA-HoZS_9i:M_lJ(<5b2S?#G_oQpTt$am03'YbSEg:r<.E,8&)H
%roA6%_rM\)'%I,C"@L:\"\'jPc;rNU"7Sa?]ClTE,P;/:-0[dH@a_@?QekKi)Mn?@_'hlf^V?2*.6_,7,guRD$g[sNWPPsbidJ.>
%20DofNi]98S)I>N95?5IRiZBrAN'Il#1[o,Va=I_+>E7ZJ^:l(,s>c3jhLG2_DY0(5@>F.0PG_[[@sdl:E6]o&riuPCD0n)_B:2>
%jr,Wk,KN;]JO'sI8s2Pth<4XUatO@9SbR'toZHZ\^p8>K"(]jLm")+,bVrqY`Un_`!BQXcc;9>*WdEUIc[T0,NdVdj'jD20neJE+
%K_-m!:k^_f<kuiR3C7j&CsuN:rEFe,klXoY`_#]J,^1^df%`O<qXl4Z,Gk:(hqi%)1g`9K>[5kT91-60a%LRJgA<ft7\$t[O72F=
%D>>$1%O)R_T4;NJpLB/oL5YV=FR??p9<Ui\3'p`fr#-+<&-]Rqof.@*9sa]n=h*gOr`])GQj6lj)@\@5,6^X*/*Q;t&@7gg0;2iQ
%V*HJ+,\fH)-LKp`a>gH35J)>eRZ-6O([PTd^R/cA$]HLXg9"L(i"Fm;UgiVDEH.$8V)ndSCe0OggdM!plkhI$J<?!DjdlS^@[%!*
%rGFQ<LNT*!'3BBk_!Qi4aSrL".le.bi4hKaM2NCh,V@Bpq,0l_-MU5rIQGNX0,cBB//8VT!C6e\C)kQX'FH:-I>kGmH5tCbjoUOO
%F69o3\i=<Sb&AH>&-S"\DQ)'JHpRe7G)G9SHVhg8^4iTILNFmqqc:dFc(7Am7R!D,Yk-D_DF)1:INIqGRH*!B%0;t#3t_u'Fqmd!
%euehb//iQ%&Iga.MhVMG=9VWt+i*<PNG&T*>*]p5Ok8KQ0KAGUF!23TL&g)jU.$5Rnt&]&pQal/.Q*MD&!P,qdN+0+((C;a_O(oE
%!SjF3M0=9XGN=!N1^)I4oHSW<">FW&=Yp7`enO]rE^_Hn6ph)`/6XIB.pt:`6i:Nt77r,$6Nl6SO\.G5(h8L?%=)A'%FNpuF6?sB
%R3jj;It/a^nq&/+!\?YXnqK3I>Y*,6+gN$'mk<'"@.g7NAS[<ce'aC@VOgj5]:MK](d'SHNI&Qr+b6?_LVuMI)EJUsCrutuZ&fdg
%6'#MPItTs#EkiFu&Xf"pRirOk@TKJ64;J"N#]CalOmh2pV-cDdd:$J/I%9\.aROi?."B&K$[JG%Kd]>n8R`ip2<LHU/4ADgb=5qa
%JmDo#81[/@CpHlBV,H)uNPng/=Fm2E9te[u"VD*(!F+WAC(kFr,-%)[Rp]N'b.-]#@.+TgYn1;!.aOMW['I#"bblilQ7lfP)2j3i
%qXJ#J&I[!OG*%QAfsFSsCPFtdnnmC$KgNp&I]/q3*cR3b9>SI"!^T&d_;>.aCjh$8T>^"XD@#s75+YX9DfBl,I<kP^iMEnd57JLG
%o&EaI)($2f47o`_Qg!bX<.,bbL,G3C@(MU]<9,WtP-uT@;s,*`r[knWp;HHWDes+;oJn*%2R^[GhU6EZ;"EX[?V+X&_oNMPAQV(;
%\(._jloB#,2;!J>-lMET+i%XFo2<r=G5MuahA$a`U0jpnS!+7GK(G=ha9hYP+*/M7q#SKN=C!Pp?I'&cG0rteCn^]gJe*/&j!@NW
%,F.EL"1PsZL4OWN:8`M(Akf.K47*]#O$EfU83g%R&H!qBRNJ]'oEj#O(FI]\IQSR5dNfY_<1$ml(0X;jP$i^\pV[IJlP%oE`B@b$
%0$pJs;T0ZilsRZ*9?C6iegI\!aH1Vs-f@!0AP"'TALD5ISGZ.'3M.0Hb3'.qp@Tfo9hS.5T8i=H/@Z==J1iuCeoADO#,kiLCi[+b
%bf%d(05Xo#0hCurFg4X6g.QN`'b*W<eFiQD?MN=?ShI2B804_V4lqIef]k`rPS]c6.+5JS`%Z<<_C'pi?Y4UelslY>qJtZpfqk0,
%1nF%@N01TBH^8tHV,3q6!XiUnG$bGQURJ3f4[k&%Qk4(0Pq74bK^C5W[-1a0[\lfF<$?IoVoWi(?c?q/Z@9'1M/N8/OiI7WZkCND
%6ci!S6dPP!,"OMQTT&=gCUGqV<qr7A6^+kiof8S1o0$Hbn3,lqdHO-qSq9[WmB35tWq/*,n>Xit;UT)#=Q'r"_P`@Vc$W%=`MDA(
%k;s%.;l1t1Tu-PgFW#W+SF7ni1YE%,pn!QP*^u%V.A@OT[[cdmR(CW=Sg$pnPspAp$-]I7#Mi>*`?IW8pB5+(6I,9=kiU^Hp,l_m
%Hg5N>s!Fs5j`<=_.F.XO!K"\"_Y+]&CaXYrgNN8Dd-?U4Pf'm)o7Z^I>RT<9rsWha;@R605VjKe/XaR0%2qhB&"3ZC"HtR?R:]in
%_R6UR/$pa/Ts8DuI#;)d%;;O=g4eN+][$iVD"u%hO'Ja,/qkV"@SF!f<2hG,HF$chVBRe?nPFF07:_k1:QAI'e5s%:%lg%:nk-8t
%^;8g%Y3QI#d"i+_m1$U&4DO1P?"ECs(g0%qZNuA#._#R1e8*"#`CKK,,<Rf7g$L*^/'KK+$mKleB#'AIbUn.]jksWIQhikPN]gXO
%7Ghs5Q@<6^^QseF`B[EM_#FBVj*/9sIPjY%*5AM%_qtQPW)9Qa/d#4N;[3O]KcKX`(A<iM!A'@db5k9E0+VI+a/=Bhp"+Hq?1R>u
%P(UF2^R@\g&s5W[<\"eJFb>FQL!AQnjK4n[RCEr9j&+,mJu[$mLCE`S<%R3[C:(+Gh#0O6EYXV'a>NMg?4A.!6[]K0M*2IaXQV@B
%_ImE,6bk9G<_K(t=CG'2%7m'-A%W[S1#<=CN*"km!iLcZ?+H+8K=i%_-uttH?ArMWNNG#Vfe,XQ_>C>%!3A\q30!I:<,+&)GgU^k
%1<J&VOA;!]nn<t@@k#Eei=t<8@3&8D&g89@l"6DgU=pmSY*M8Dm>0fg]]Z0,8OCc`d?;d(9[^#JPsacLXH)XtbN#-[]]`?7O]"=N
%eL5*>&RO^.bHqRFGd6ga/sK0<OD+M>iSE:Z1<"J-\oF^hGCd^OdJ.TPZr"bdd<.2__J4I">&^cDRDsH%726.?mfN0L]8(S6A+>!W
%n"(B6],=B&h%SB/DZ1pmn"t;$dG=`o*o5(Jl-\=1Y[eX-bp2D;Frk(Qm^Aml#fF8gg,uqcF6hf4/-IE1S#""j]32*1-ulD6SiWl.
%&mas!bBd%KlJY$?BX_k;Xn'OcTUV6t]m@gA8Whg9hgTZZ;]C'0Dl3e_C[+EQ!k[(rijbk:h4!n;4Ko2E8gZ<t$TQR`1pC3C4!B)W
%,J/*['-JO3!je&P7WnrF)]=Y%Ser]a),?=M'@nCIr[!Wlk*J]&h>I6ng<JO>U"qgV.C>R7cU5<iPWcCC-R=Che'rYR2p\]uG-`lu
%aDR:_=(b+;4Kt:Y0a2a,b^*YUbBD=9D`.GEYhLX1S_94Yb"&jW@%ITshJFd2nE[aA<cXHnjk[?Xjn>6hRkaJO1RNEr-`l1/QC=7&
%mhT"T,NZRB]TUlCF5ALQ:8Wp<DUH8t%Ka*1DOWK!,Q1hk\+oUC:?@$rk:EH%hCVomcguAa/7nQ*n+ORu&2h"T<!5QahJK=hA7<JN
%br&V@c2mAar(k2A76At;egTu&9hM0J4F+CR:'B>&_^,*hB8\i7j9I[9DXhmY-S'a5H7QIgGPagNZQ151NTUQ8(2\o_IDGE3WTLMU
%DU4Xoml&(?GFRHW]Nb<^IF\FcQR_=:Cm*HJ10r&6rm&-pZ4%KlH++?T_7`6^\%lH+;;Q00'(7`rM0GFtkM=96d6:LcD:0/eG:W,X
%_c(fhpro4,3ue(CC&4j-2@E&FAK%5u5g*SDXrtD7%C!J6jQ<:Q8m?cSYJ4&6!OSS.Kam.$K$R;^k('4q$fHB%\K7@sI7EBe^;<a"
%#2__ta:E6984Q8b?-5CInUeeK^;<a<k('QrNF:/47*Z7W4M6pQ^p[ArAQj?tR:8?W9$Z?pF6aL?:'6l'k&b;V4C;ct(ghT/Hh-GY
%),A^rjJaZ;R0(h>0/+V?l2pYl`Kr@mNFQ<IXSu0Y4^[q_oLFm_F]!;[9UKg'!4m3jpF0/N/Mo!6[*"Xp1$;/?1i]?Ils-M2A9)^e
%ckb<02i0'8;4s*Z:dUF6&(kjS-rgVf7iRr?OXem[(E',CU$q7$kG___n6R1U)]J_4Oa!sp<r/bc.J5qN1@*#Gl8<4!.T<@B?og)+
%Ppt5q@J3\oU==gmW/USWHAaT`-VF'/9tP5sS1)odR275CjYijYPQI.Aj3EnS/XkZY;l[=%/=o8i:Q.srJW$RU;PKs=mfu]>Tnt.>
%TLtD7s5)%l6$Z?`_\%fNSeMrl=(ZTHPk7TY[^VX.rSVWNXI:N.QWA'sNhVHIH=m=m7e7`6qo+eO1^s(i:o743&l\(K8VtTBqBJ\2
%</-qm"^-\Q8"!8:Zc;c!R8OUGMduga9&XQf@qKD@:IUL"Ubn!d.@!+O0r7XtR8PC^mX0R0iCB85^qskPVA.rf@orF2^^>-'Ppt79
%Q'.P5J33^H8sKI$a0AgX;HXPD=%Yr@$+A!A&d:U-UKf6)-GPs@:9IQWk%d_W65/l`1JW?,Bb%F1!qQ=7<M@2!*DO\0.4)[Dl.IC^
%8etVfZ4X*9RS@Ee*>;,@eE=2gj%8o=l?/,C-2=\n7b#*H&S=E>?"eRQV8RY1hOdZP6UORrk57J6V9n=JeCUP_#dR$pX,GO)&JFE/
%Q3T)!Z,-5\#Mf:>j4DZY1$&i>V5'7l't>=3o.>(hoUm%I]NlKi4mE.(/:SeCk_'f&8T6jbiLLb-3Ic[&;!3KhW$?."\X#(N,Q018
%`F;Y6H:k%i:87^];=$k57$%r=90K6&GEdgNTFRhEgA>S\8%PtRD8i.Xi#)k"&eu(=]fm\iG!\B?J`^B-=65LSQjM#IGG%!=J8W*"
%%\9uc]fq/\rJIdUc_3G#<85dEgljLJ%LklO*iVM^*9[,9]!UhpcinfEkiYQf`P^'K/\4BEFk<5jR[<q3Ep%n%(KQ@-?icFGg<`Ct
%fJqXO4Ea_hfh*ULBRbGW5t4f9Rpi#q8'?RL8'ZkHS_Pg!_[mYJo4$6tPt#ZM3PNb9$[>0#lX?-ckQ4-QC43m/)h!mi`S51<KN/CC
%=Go<AJ^.,Eoou7`gdT""!k<0Y6NgP#!U_m'*kP^C8:j]"r_hoRL/ES8kQdq2jDAd]UZa3jb?fRkRji700;X^<dEc%;,B<*]b3en%
%9a%G$1;]"WHg;aLPuhK'm]MP_0UFjLMb'_3=gnA8N215G_+#Un\fEP0ZlcnZ5_+R/5g?:UG`Kmc?-$e\_6uue#o_eRPt`GS!OH![
%SL_TZfC,nYmWUGB7LdX2Ec0hFHXn(OK4Ujbb1=4<rO=918s+#TbX2"QlD)MS<4\bbq@*b>48le:bei'Y>'JHWQu]-_cN/Z_fB,\;
%e+@4V'O]eK8\/jW>KTfs$#F:eI7A[]<4!FB0G<3^3$>f%'4snupPF&L%HS<r&d*\Q5Bq0,5Vk$M'=IQU<F<C,ZWd%kNA0D!1[otm
%?Mf."4&.`2HQDZfXZ9_YjR,"Z[#o[3r]'i(GkpC68Cf_L**OeG(PEJ/Zq+FaKd`Po4VFM;\#k]>a+#Y:8`*$C3hOe.*fE4&Z:/`0
%8;p.2!2J(SBKs=_Q_N1EjpbmB!.53d1H\Y95b5i"NMlsM@m^U;O.i*L<SfQ-&'UIE17Wi'A4U5j0dJMj%#Js<(/]eh5%q)0L'5L@
%,*^63^i5Ukm^f\i*4tNo,<7E2TghY@1*i[OB,E<DW#D/T!AYoib!gB+7)fj,,/]6\EPaW0gP`#La<LnUOq)l&G#hj+T8Ch8C#@;O
%-4@o?hE[:$aJ9-1qck-:gc^[('P'b-Ds0;djK`sg4YD/+lMO>1`"4\_ItY`SV2OT+!KS[(jX4j!4JSO,;C$e3)GuC1Le?;cO[*"#
%RsnS<8-#\A/Yj);YnGZY'FCEq@_P0k&8[pPM%_+&,/]6]EPb>1aM6dMM32<;Ue'RUGD\ff8uG5@iCFZ>4E=2Za<U$cM*)Z4,*AbI
%.2$?8SS4,(+E8Zi]JrD*Mj:mmc4s-Q"Bs=CZc&E5j@K=!0^"'C.%`I3BJ7$YQ/i32[;>X.l8,a3&kCr4lfNAf*/QDFCR:51J6bi4
%,tS/B_Bf.]8J8=',R1*HT:,T/O<al%@bY<;8YG87mO(Rm0]r:q,QZP4]oXK_=?/qc-Us7eL(d/<KU!gFJ&t7pq5"]q,/:mV,k?.?
%8Kn[:,"^kCF-8p4ALC(1#tZD!4Eo)6aE-]!M(B,c6BidO)D)*9=V=jO'2'NBXg9:YF=7%`<lNst*V>gY)G,+,,rhN>d>oiK+^\ZJ
%Ci#92<Fh>,C=n`s+tXF)`%!A&pD#lhVEKceee..UcXC._*)REJLjL1+gW#*'mC@81?b5Jn/!?S/BX8teM"3423uH*Q%K<JKn;&]j
%4.q(03/(44=Pbg==tfK/i%#`s9Bh.D%MolUjDi4:9'=9&k6P]*a-YJ+3B1UpHDdRc%&`Gfcr)t+nH5;E6GGY;P![WI%]MKkk93%8
%j+F`/%6hN%o@`SN7M>,ZUR;N45D)*\;O5&7hIsWZ^7[8_fFW)eTY!Uo8Jk.6N-6R"s&o*nar-$AWnl9lCH$U8q')@X=.#c@l2^E$
%A8=%%_S"9DL@]ZLn&bb22g@feq%kTAk(/dlVjoT4([R#o2qDYK`[,)[BJbe/93&Fn:^Dake7>-mB1bfmQSL=)HgWV4d:ke^LHp9F
%b=eL/c'$/PpPQu24O^FTmhU\:@969bV:E#5"^!2>O'41*^/iWVhZ#4@4f^tU@OhK"mcO<OqAfdYK@S%,I?\@X/>[*i?G#*$U4u<T
%Qi>DRG4eknKU%kt/1P_O+I=M3Z*`Po?lkM6)B=37cN*2q5/RKup*s5N=tY/KVR1M.!<JZP3VLbG/;9Md8g_H#>R^%-Ehpk<#-6'j
%^+mc-pLmf)^HHjDFe=/fI?3m-g7H%DiPlU6e>d$jEj=58nmoFqMOj:cG4]&V)f*8?]T6?$DK!pB^=h1XJYgC[7?[h#9NNQlNm6;l
%.=%RlWF.efcA-8LSfo*4q4GBs3uLSpqX)]m]M-cP;m=MYEoLc:gIk,0iMsAR=MIKa[kfpAao&I!")c)&6[;4OKQ#0Xcg^N9[HM#+
%W8sUSUNuc9eu1DOUL)NQd0I9-m%t!tbl3$2\o%.V'ER6jF:^Br3)LnHdR2("Q-?8(*N^3$-*M"1\,'2S2P_k./OcCQNS?2ZK\*'$
%JLN/i/jC(jnm@LXbn!DeNMa4AAMK]$?t;7R1gZh*4LMhbH(`ogYsn7)3.L>>Nb&m,L+/qFeKS\66br$4?Pa'Bh9PSKgBapCKP9s(
%,Tjjs?<),,$K0H:Tl:ISP\#!bZ`5J8-NM8jDHt6=2gLfU4,YFBm<V-\MG]T1KL([qrE::-Tb9ilK[jKVla'%i9MtIG[g!D!K56(\
%$55jc$34R)+DHlgH=TK'b;RcMi$^H:dI:Ai:^m</Yc;)+hS^14I5c!g^ISNaAjbJ?XHK5#-?u$i^aV2.+taI"Oh,P'JW_[P^`P46
%@B`U52RkQ5/F,0]2=_b^k4Y,hS%5*hP7?Ar6aCOuoVe&S%6j-ocY("pUR`p9KQXZ8eT6]+@Qd`^m*WX%8kY:[O!\mEO]@83CMD+;
%>9?2=cPRlK),*Hq'3:hjYTDmBKKTji3Uqr>^N/(`iE%dIhK\bX/9`nM8Y5lA]"'68*hOMDEDpXCiFikkdDITjcBqp!8fB/+*aS:?
%)*RDF6qb3-:0-+_7l_F?*&u'!j!993pQ\X4Q"Rk8i;#CZrk\1!juiML-URdG@t4FeB.6Lbq#Sc'H[34/L5O.^+#.r[UMOY:P+0/<
%CZj.3*f8ZRdV'P%_XGn&U*TX-bt,.dE$Eu5(S4C-a7%e'@Qj'/+`i.OeQ-GaRk?9Y"'(Mt/BR[0-eV-C7J\$i)8:9UH(8E;YsbnD
%E$EtJfLbc\T)TURn():/G$O4D$daB*0*,T.V#(&,4NZ=g0sD6;E\*DM_8.I,'3Ue]BTdrGIE'm=C<WsFS;6)aS<PJdL]jt_CWpe_
%fBQA<>!%qF#-u"G'3C.kqN.VZUu'g,CnW`b@imjlEZrR!;5j3S8*aaVQ"XCuKBC@Or-2j]PAbr\0$0I'02&M@(>D3`m:-&KkTB5?
%[ie<elTr,QE#g#W-a6lik\N[W4ma6HYoY.'eo$=aXiL=)muHN)@QITNMs[eeJ$@X1N2bW"c!"P\NO,eY>`1>oR!_D/3pS41VSsB(
%[<0<=`F=f%<o@MHZ.'$1a(ta-EW';tQ=Sd=TWkg@EOQl2bgte0ch-X:/O$8rE`1CjI+VK64"A[8[fbl3/KRuV!+1]*9lTZ.N9?1-
%n[]QEbh#j=h?$Hubo[/Jm3^_"rid72G%]gi(ZTM[I+r-.ACOp%@jKpra6KP*B("b+5kF)^&/W)cO$C;4D*>V#YNt`GST!ia#N7XH
%A9k0PET-RS?MgV?<.'@X>I)E&A'N*LdpkOQi3X."C[:NY2[ji1a&h#,4hd@<lg`LFl`m%'jrJ8$^+9rL"^1;D-7uSGmsaA.5MQ1O
%S";7RqkO@#(ZN0B:Ol!'Ym"TU"``E8jQ]E?#B:jVA2cD.<=0jo2pX6^j6c_W4*g_+k3FM0YKA+dbno6NX4_dq0\nKB`nSQ.hl)'#
%hS)^7mrE_;DH'J^8fsmBYgltRJ2_M6:t%!*'N\UC0>p7ZdB\VQb)NjuKDG572%bFe..=a908mX=-Jr:(2qgI/h2M_2[!brs<;Br2
%g^fa4UZsh[?%nVS^V-(#]KCGJr:iu.bRsHeI$&DKcl_!k)sGId:&TBD/D6ERr$ZD^e$7Q%S)tqmIr#q;RY^fM^<3YlouGWMhq=e(
%GIE>(?d0ZRUgJ9=Ss_6/s#[Q]rn.&Va/oHQD!;'.7+>QQPKuCQW'@/;Ni&+5ChZ(X[l!boB=mr8+6ne!p&EBc\#B>Wr8C9j#L)AC
%+gnJa>u@#Hq:P;neVrmI5?;>B[O\\N=(YJiFkVg/SC1)IB+!+-4L3f&?r<Bg_0i:p`16/kK@\d*s)<mok$&!9T5c>TI>doIPC;PN
%qA/\irBB#tWVKS^q8)EORBf8pKqkrXc#R;;n?fgOqaPj&@A^WG??5CrL-N,"gF]0U'D(JI>qS:ZK"NiP>@6R0,q:^Sk"B84k3C<a
%W6Ea!gh<A,!Hp[CD[YKQAlh.HrjS^'r:D*(s1eO)kC<G3j6^dac.c%o$\n\+r!uFO8J3.P]cA&jIduI9<NEI?Yo%[1-Js:K%DTuN
%)\-T`C^KM3.\`b,76f)`b9lDWM341eZT<*QTj;;AQ1XIQ:>0;ocQ9=AEgGtueM"Xc<!3YrS?fuO)OK@^(BNsho7o:"(A%?22N\[N
%<Q?;)I+R>[+(bej1XmDb5>pVhM*G1UrmB^IKE%EUJdd],e%"e.8)>SX%',?7DflQ^jHVLUF%u2g^*j+Oh%b)sWuRp(!YMt.GKY4>
%qF!X7n\,CHWfH4i8f,4S9gKl%?[1oLq[Esb"_bJVa]V9lV$1s5ohKbc>hNf^`kApFZ;X;?=QQ"Y0WW2dbOfI1&..D-,Zu3C@#s5I
%]$;4/5U-NEjeq;/B75CBp"SC&G<5!P5k+/?kqETq8Cj)`$IEnt6jQCYPES3/1>"e:BJ%ha`Ma4r4L,0AM=H]A=K&/)-m[/Nc4K3r
%.ZCd_4l4gtpOE!grq>f0o@ncpb:gX/jfa1,c#<UOm3f3q)ueuh?iK+6J,bE[^]!:rs7Q=,s5r]es3kn9o?1M>f/MAIs75p!peUqW
%S,`JGTD[c"s5mBIJ,dK+rf;!3*Z+dY:N)NTrq>f1n]gsca'8Q(-_GkdRpZ-R2h1kPc[Yc&s7);FAH2J_r.eYXrgWXhrqu2HQf%c?
%YCH;IT-&RX^]0E48H(\Z\EgUdlL4'aFC@+nM<>]Sn%\YZJ,O<#odfXghu:5ps8'iq^]4/Rs82ipnpeRus0rSu(I_Wj>CQ'KIeiTm
%rjV@L%afaG@4ehLIbQYBrSgnnrP`]()HZZld)3,or1U0@p.)l]IBpO`oj8_Vr?$L]gP8H%_lnObgL#F$rdXn7S"K`CRpZ-fHTe*N
%Y@"-pfu2u6olpA+:\j%#GQ"E:S_bs4jF;NDci</e^\R$Xs7hmEa.$5F`6+EJqfi).n%O2Fh:KFAol%TRo#D47+4d/Y;2QBS$?Bt-
%QFV<^q^aQu/QTcdRH@Ys15;'.A+&$`?d<'(f=AqKs00rMlWEDm0EEEn,?Ho;QcH9/_b0[@9)%LQkq[@h[Mf_[3*]ppFMtLJr![ru
%G?_ZnTT$0CL%!g06_^9C_!'tEp\nTtqcC)O;*]O(n:0Lk#JBG.hroi\mY@(q:LEA_??+2-MpqFE(.F@+bOe5<&cQr,/TiFl'4CDg
%+2>7LDBQ_B=7=hUIott7Q)o((Jb;6RV5"$)mN5K@+',s;gIh44T>[CPVuM5?82TMb=V[+Og:+Ps`H;g$<OkJP5s(G2p3rB/[ASsb
%LN>\Xre>8<"kROr>YCX`a2Kg/]bWB1b0RFQ:Ac.E\XIZiep1*tc_+g4k$..JLq!eE31e]0"4$*A8#"DNi^%+$D1O4Lpu%V/8uO[O
%m;7UjO(,gueXU?3F9ltXR;^o=q%Ok;Ue_H-g33:s_$if-?EG$Wl9\EHn;!]r>46D#Lb1`YT]O@a*ZOdq+4r4Fk!t8sbeEfn3s='b
%`-<$1*J:@]38G2bn>*-sl2!o%KFEP%7]_IkWPp75pG>`Hk9,je'a/5I:c4s$l8[M(=^\eV^gt7A3hU7.6TsF4);#.)Z0c5WA2VC)
%49K!j`6Vj,;!(4/@`XDW;0rnl*qNfGVqH_NA-UV?c%.*OgLaWubKB<ee`43ogFL2Vc<I8LY^o[WGc,hnC@oUTfLNA-br1+&[<l,\
%"q>K[+B,5N,;E2&gbcWrh!nh]eo2OHHV*3OjpFAM2AdI+]qsl+A4ns[jf%Y5'uIIC/F*9TL[N=OX3JNK?-J42<iUdb2(JsbChE/_
%a-4.!$YoA3DMT1T<pWs,aNCqm5Z#s<3Y7#>iiaJq;9d9VmeBll3Zp4+,so(7Zg)ODI<ncMk_E%4U/@C3AQk+\Y#\QX':]qp)5.JO
%>K$pOXLS^ETbXRkmKU'\>)uMe"5lU+D.Z-=(0.B:5;X.!99>2ZQBG?Z-0@l/P13jILZN"K2!(si7McWDPtAs#%0i&ZcK@peG]ES@
%#$dIT7NW#rdUsLZ\Qe<.Kk>4oA(j46BMZ#Ne#+cb/6,"Xa*7*jb;Z*SK.#RKlifR5[*E]2hdJ<):*FT$C+<!-Zhs$Y'c$P0baIie
%OB,,3ZB8QU7PA!1ZM=)I.d#)ka(0.fA$kE:FK1_+NGIL-C[B!BnPVeGUeuh:dlDrtoV=FOl4:%ubBP:WrF/tS$ULNJhfn)AJ<FDr
%am>*0"AC`[-ArWIOP-^W8+JOjp34_MC!NG!0tR*5QgKcTFJc0$g>1P"+]8059jbLI-dUjdrPuJ]pl<.u/?+L%&5,tFP`prJ^0C>l
%DL90<2$r'1jF('3f;>%]H,<?+7XuYg9t2\(^15oIGB;3j^_t='MY/*mYGBVTWHGmQ[<6!mc(!RR'S#t<LI+&d<P.,6C5*;\@Pu-&
%WllNs81kKR1n/V5$$Tn&^tO[=FiSBOK=%^)0q5)/W7C8*a]<TRPA3+Lo;#5jgQ=^BgV:gI4&/0?L;`o:I:AREm;#S31+785E"_?q
%T%EV*q/ROMOPE+S+-%tD"1#&Pk7NL#R`F!,4Un+90su(%2VT^_=>.Y9Z9NF$P"N<O]98$,QNsk0O+*OuMF#JA7[V@5:8gfhpUCO<
%m=$85]PI`n:4Kpe0kFUM21T+Cn)A]?o1oV^]\+BEa!>K\CVLmgphem-Xa3-Y_<qi$:qLWQOh'=V?d0LZaY7hM9rNHq(7j"'^FSHY
%5+4]#mFol>nk#=tr7[l,kY&4u/014oQCE$,#iK4:H-7e4\QAC;^n+&cTUHVgiF?a=9H=>eV<\f-;OlZDSoNST`]<gqd@s"B#B6Z"
%e4,H*c'MiQqYHQ+I+MH;"00=%r:,b2^WJ>:P-CAWl!.kU+fQ+3lJ6M$F-^ERW\t+HZ@/g2bgsF%gfk#+qoPQV@6Q_:<J-?=TCjeu
%G_OK$f/LDR6&Ib)3QK_e02;+SGB'W\D$.MjWA9S0UTq"BWXSX-5sMP'ZU!d:5"nDc5oOlOlZK`$o0\m[69Z!.o.<XY322X.h*n:m
%$nPn;Lf,AtKjr_jFcq'Mp+]*,P9_WQ4pJ!::hD\'YDY4g1W1N02!Cu'A+fC+s7l.>KEn!MQFF'F;:Ru^Q`m*-R)Z^b%CNt#L\fUZ
%s7L'F_;N3UVV(;kbm=d=0LP?HFIo?:Uih:[&o>UAZ,*8VBf@'J5KES8$D-NB&_)cLPuo34&(fIH/uJ$in9=c.\u<A,p1/Z"kk"AL
%O(s('fLLp[XX!h!.^o75Mf]q;%ac%3^D,IWN'`A>J+?r">7=`AU7X&u9NscBTC:gDcar_s%>jr[IBf(]K2Z(>Z&/I)in6(^Ee,^Y
%p'lE@Bu<,IWXP5`NsTug$>d_\N3.UsjQFc<_l*l^k.-eWMO3d,2&`=(mq*:FS=.?@e$<Ze_c@mq_02oL4as!h7""Vj6E7qqFZ@uW
%G:`rTX`A):2(:F<dFbKH('&eIGH^Q5gBpDqWL[j1-$J=[j'A,p2)$gOBu,'LmC-_FqV#)uLSSN<J_H+E]iM(RT@J/_>,'VJ(EZC;
%ii%BEVI;VZ0e+\j!>ask:)0]BYRnM=Wb5QcToS$TgoZs5L4`a%cr7KB=>LH9Yg<ZQj3]at.TqEGNHQ/Lj)K$17P`3Z'1=0P\4;VS
%Crur%[[q5=2k,"oJL9*@"U3Slb6gp'.`'*Zi.e*,g;VX+g$[Ve`P"a4VV;^`0!/@.+AF\pC9FIOVoX'<fAS;/dbL\MCq1"aALb?s
%Xm)AdV5s>/@c1`bVmkp(<`O8]6_mQGKPfU_ife3,U+c'&jP<;e5k1.)g;k2BSLf4,O-Q8g=/+Vt\8>1(MQLDn<dAuOTYK+u\V^cs
%!eH]!Kk5fbX:%N->JAa5.W<YeoYnLuRUI6l/iJhpHL3\e[c6TW`1k6*Q\E">ZS."`Yg'VN0fdW<M2'?d0(3Yj`l!a;ZmV/Io<k$o
%&T*_(BW'<H:$(L^Ca9Ws@gr7H,4X`<`N?/K+!jc;SOpXu=*/JZ:oR$%/RES*F#@LY8h^1?.co*Z;J3b>gF:Bq2s]Gc`F-tZLjAl/
%1cX,[mUj(LeJIsacf?p"AAE<MrRQ_&ARRdjftH9&`7@iB>g"isA[>2dn%Ifu*Bud>`L)q5JUI!CD-ukU7Pl('kcf2&1*r708K*6f
%mqHQaR;I-)D$J,lITNtD*Xt%V)1K&faDDMK>_[.lQ>H^LZO&-52LfOP4SmFkh+%BeftbcbG?MBuB4OGD=9jin0AeFkdEQjlW3>Wt
%AH3o=09@:NC6A;AC_OrD)<:gEXkoEa&]1Y`HJ93faNu5m-/5]Ha*#MC3qTXnC]<;4LfF-)10W3B>A:[nl:O#i?#59H.GNhDD#\dP
%hJH-pWUVOHqqfT/4L:EE3?#1LgFtFq0X$?jLO0P7Y_?pQV/Y(19V%r%N`Y&Ef[Ym"92ub7gh[i7S7g+Cif4tXiLf)68'^T@7*W06
%%"Dcl(*:VqCcCD-b%+Yf/rpR1O5-G@*f',BWEQd)#EX>\-UhGK4n<<B9=*H%ClHD("Q/^n<k#XLR4<P^IU;rT,^q?VbMI0$d^Ire
%4EV:RQ@1Hk&(>H\6h#uNDmRZFT&m[YJ]`#"Gh(2(i(I==oAf@@qdSU0qkR(rghW-rHefd+B<Mqc7)AbVUXl^!H4**jhW)gE:bTYn
%N>2h*@HAXSjLtjH6H<\?8ZgfI'PG>;Q[*AeF+OUXigK;]c%]FL-GVY%k@sce75er+cEg?VI^cgX)1kfY<Z)KeflF`=LNQV[7,tf.
%O`G\gJnMWp6E<B,p29$HCr7eP51+.BX+Y=>aR]&+;.&*qa/<asm1J_8YboicF$s.q0siau!PO5meR6\lUR8!;LMs%,H)NAY%T:PG
%Jgl)P&7dQ8)iiRAPk_kYS&tG551U[jl/\>95\PqTS*mb7?K/,d`-BI$UXjcNo:FF5UT)uN6sBT`:on,H2i#_<QkE3;CO2c:iOq_A
%hm@T\^4=1&@F^9Q#\<S[VQ]DFC%pflE.rV9M<iYg,bE#(2fkCYP=9kadh)/$`MQI#b'dGM=<l$rgDb@s7+e<faB^6e7'&KiK.?83
%S2?$g-6uGa)f'TN`9b\U/^(dhKu+>WB*F1SnEfL)&*m?[h,XXeO5J(AENd:2OPIX;B9);<EFs_YSlMjFBp@u`5D@4sEB)!L>f0l*
%h/"&$od<K1i]c*pI+(G%e7lBW>+I`qhM6GoPN)A+4]c1<PG/PVq-sGg3ij;->MD.<77KPaURI&=P(dg9H>WY+]<+<udm-Oo*O]J,
%`!0M8]dCM%Gc9U6hW+d-:\>Q[Ai]a#m`3:%2046tgCW$\%d)5;LK#>L9mQRnQ=_$\&at-,oC8m&r7&kQE4l!d<9[g1h/)iQq;NC#
%:kQ2$E#MlFUeo!BfqR7W4N?6hBOb7cUh0FV-5IR_BS)C,:9ng94E&Q*-)9Su@LpX6g1\AJnnqL[2HCrH!h;doB0C+1a3*(25,BP"
%AiDlCag$&sgOrUY]4MnW4Y@!n%dCOAQ>V8nA+9!JDX_sgi]tnL.Up#b<B,!5RlQsO-K_iEN[nFTg(^$'eu17i[S0rTS2tEXX0LIQ
%"Rs@(,95ONFW9JS>N?kbU>sl9%t;+Wn8kXHa13b(.hEAAZ%oH!/oj>OfJ3UMLl<5PCG,5Rn15pIYU-f+YT8MN'#1Sh;_`@DGS^4i
%mq.Rc04CbN+!J?^_m[>oaq)46W3bdS#h.!"C_/Jk)6[dQ%Q%3P#7a\HR0]6ECXX*_+9(oF/pn)67Nc7SlI@m8Q4hr=[#B-gKP[]b
%1GdkpVIl?(Qmu'sf[aq[=c->1nZ:d3'CkBT9Z/(te^7;&=-HJJ:`L@h%^q\Jel%K8AtFJ'OjC;2Or"Y_*9J*K@d@I7_Ue'I9iu]2
%Y(s-Hr4KbN)s\%GX48H%j+N3ZY.fc>;,UA)aR\ue!JGE^ELsQ&X5d[,aOu#QTdl^sl8Q@(ir\&kF=Z7n*3^=5c\/*(GtJ9qfunCp
%TOO'/J[R[/LUAYG/Sc0(i8'?/)Y'`H$7d-XW7$\VRm?A#CnVI#DW0L>Sm=q>&W`r577cB>8#r+,Q0>NaMWGT[WIab6gr>+iEmpM\
%+8:.Pi4p&@Rl-U3']r.'N7Y8h_la,+o6Pc7W3>Ts5:K`7TpmiQ,(Kj$<@WNY"Hm>0&-$9A7lhD"H&^0]1II1oDT_>C*SA6mSq?.`
%#omLcAd#?_,6?Q'VB9B*$a1V*$j5-2&`eDIku=@Dp2V@d$&68_1CEa,UKH,27A-$@Yr._5-[:7qq$faY\XNYP_]e2I[.Y`=iaWn5
%PBf8@io7q&*&m-pI",.&la/rLpoIJ&4]OMN$(H\(>.XsB3sXpss!Tsl0LVjP1hIYt$rFp.<U>]rMdId92;KVL-uTJ@2WZb"jNV=e
%Flab\7aR"D9Y]59]a5A83m+Cb9YY<)i,1nJJnt#fY%B&RioC.BMO:5=O[72!,G/G2/p0cX9^VpHa=`@]$'hDE%Qq1^+`@E<K`6dL
%?Yi*!c@(oU`U0^Y[^>Ydi=a^^!hEQ6ll3_Pa&sJLE2:C9^]Amhblrf(%9=VUP`p%-'<Opbrm2^SOZ"3&2q:b7SF[uO-3BGSeMNuD
%<e2>OA8lT8o1"S+DK753VtCaNWi2Z$RjGG$Xn<=;VHgO,P#F?('.s#SiR0NcJ8juHfKX,ObDo.RcUae1UuYu0Du$1ts+8haRD<Z0
%J:,Z,JNV&?=<rlr=ng2blQ+PBa9[tL;6tOi]#N?>,%t?M3Mi>SOA$/Mh98b+rK1_9O$*omI(S#:M.0]B'269Hqd"u:0n3="5eIr;
%;WJ$.YD4\?&+:SbO'Yj@CX9M.p$#mI.T\d4K,U.2*'f[QB,hKqVS=K8>AbAa&:W3+YE$?612Vfm_L.pr`[`3HdtK)e-Xr85[Ra&g
%\>0_V4)BB-Yd+fDU9f&(`Ce,I8]Z"EU+M9ea!)9tH-GC4>1@O2En%<.A>G36G!t2c(Vd#X5].***f?<TKdToW"bGn<(?\N,N#o2S
%/Y+n]j)f*tR8aL+9gkcDn%#n:cbbRKGpdXZ2d9@]4Z;Q*UNddH/MUT<h0Gp#`-,[B1jT'A`kr1g?qXpLC/n-oEl13)+]'PhO7abX
%.&6XiZ_do#8ah=n.e&`-Dh4N'7tPS`C^ic;)gcE&^>#suUocWONCS+%`,@@Z`<R[XFkZ:r%qOk^T4Pnl?9Zk-FB(\CU1\5,m/7,Y
%U<,%oTJa3lC:`)+\p/SQWiqHDEOrV2"Yf3"Kil(rV(/Nd],oclR]G(9"o]f,_q=Bkc?UR4$3#HGFL?0*Lnfcg*KQY%!p'-Ma-s$E
%YK^;Z<Odf/fl+;mnX5oj<[)8-MVjXtT=6lef&dPaU2:+L36\>)l"ms_:g/r"j@/#M/n[dD;PUh&^r!u.,n5()[ksnIRk#pChL8dI
%I@9K:9j\pcUS?]UG'5W+?S1Q59XG-@nA,"PHfLfT[1W;!aa#;N$\KU'/@rf)cWr]"a/C)B[b5eL0TQq1NY+$sFQdObYlVeZFrV/j
%>k<od.b,=Pk1M>7_N("PB2pj&Q#+::mGWKA]goiZq^J,d&89h9H#.nAR;(!d#D4KSLRTZ<4R_0F2JMkJCXlM\)`5"p/7U%jo[Q:V
%ZPj!\<Tqre\/J3?8#gOcKN)Nh3Q(qO*ufrC`E$5ERMEO%=o1mDeE%i?jY.q"PDf8Ho$VNDb&HJYhP9t;in!p"Z]]_mSs?r8#>_#[
%k%4tohCJtMrj2Ak;jFK71Tuq)dJ+'>&X@NUaBlUdOJDRnV/U_7]B72D5gZT]HYh56LLF%n30DTLR")N*FDJ<IF,&N-DpXS("#*Qg
%b]-uJX&\:&2nkaVd,+-t32IoLZ:#"nJ9k&pq/0f**+82NJF$Y'@O%,>/TLF(r[?XB?%Jbto"']dg"s+JYjqA.,,KDR*4Fp<7$9.B
%]95X$-SIjUd;quV)gaD8p7?nrUlI_&9!j]S?T6^b`q?E=?ef_L&pn1:@AFN!#9e0lo4-5Lal'EOTsN6eaBRcb[Kc8TK$k,qChWY_
%!("`_F='?^jk]B;*j\6ELuXtJ.Q8B-aX"\ZVnZlM,(8lN\aT%#dda8H+aGASmDR^\,K;IGY[rme+3R797C>%F?g6Mj4Xt_tB-7Lo
%Eu5m9ZRqA%VrO(RVCr\jT:[t'M`Zl^NsWgJ"f@V1hqEF'O,/;SL1nBX]=.nq9;6P0_Y@b>18;GU[():P7PdH.EjJ5EY=&m9&+=-(
%ZTAa.'!]S.Su/roRC_E5pi5hN2TZ9h;4S08W]65")Kl?02r*:'8J\cN.#nc.YgqUi\mm>Kp84W_%(`,\[Zc]TQ8Df4XPi[e8h-mK
%rp>m1_tM`_0CH<p&^sZm_t4l3[g#AU7:L@)+T?9@@KCJmK=mq5EnZWY/Pm'n-spT/0O\)[HC>U*?^B@LF]ZAD.<;qUSZB?j@`)jG
%S`uQ;,UPC`/"@'ti[A?A*%6Dabo1<$%OtDc;IeZ`r_*$r'GI]IVQQDG"/\Q"A;^P6@IHf^_MUqn[W8]3W\0l#l`6*$3pl5iPYBj2
%X+`2"RLrK`e+##I#gA*J<FmO+:9HCWS%J*_Ldk,gi3=NPYgPan"OtS(SOaa$9#)uCRt;Vo7Ad-O<%nWd7@Io`&jVsqE_q'[XlI@/
%Ui[r@*8\!5\U;H0(Zd?:+%6#_=\1b-d$pS%EJ1d\E.eDK!@St/p*[Od%PBX`#Z$o]eZ_BUdlXeW$=J;Tki,cYc7L79UY'ql8GNpm
%GHoCR:JCFd(5OLOQb[/:lPF6J(4!^5H-Chc)m48lp]1C,6/9nG5lT^PRI+rn,%[.Nh\:TF8gdG^3c#kfO`[IMC/Qkn`@_[U(4uf^
%9P(?9DGpSp!RdnV^iN+(ihLdiK2D[k9bg^n7&lS^[ej,(b6q\kIa]6JOH0V'-J,fRS0:]QMdV0C0GWQ+s%G&i<rY_6/>?+0kr%S!
%_q%De3OlN)>I#W>bl_s4:[p<+@4#45DRN1!;\SOmr4'a0$#(=*$]g2Cm9mALBbY!E_g+-aQnoDDfeA,"?0@kr0(`ueA1t2Jp=:+L
%k-E8>SR\A>_C##8%Fq)k(B"Vu?\:V),V@.NSkYf0C98!s5d_@6]B-RJC8Fp@T_6qh3qk'f**HcpXoNm:*uhD9n8Qo&QL$eL8![gc
%ri$=r`E&>%I<YDZ'`@2`P)#DAcftu]AuA=o9Eq'hGSk[KpLH%1fO;F.F7$JTobJE[6W:!VdQU6:W_:VYk,ia';#P9aAdK1:@uJ&^
%&.4$*%auQNP;0^CSh4[hJA+%&9u5O!+o]@[D$o3%06"uV`i*f.fR8A:90'hZZe$UH.`2W15Y:+jk_(e$f^ieYCIW9JH3pfj]DS7)
%b"7`V8VG:hH^GeZSj<Kj@1Pm&1?Juh\@`]LZH%*>"+/6m3$W4)eaeR[SAkb"C`p'0?qV:TiSA.KqW^>En1&ugYFNeN>,8U')DQS1
%GBs8`E,Qr;?aO3Ll]G7O./.0@bVhAh"TmQ6lm/)qpG5X/`?GFaM@qbPkk!%G$C6Z^]Y>l6?#`Y*"?l<7SKa:`+<$)pJi'K/fg$5K
%q84>k_G`LQ7u-Z_,:`+,.RIU`WrgfC:F-j^QJf%>@`,0keu#Y=2.]0OW-\#@gIe)-rU_`!CC8Xi81+h+Ha:3::25H)<HncCmQoBi
%>HBiGFf(U^=-<WNX?"^'$P9>WT5QUkCT.5kC8u!Om9n'#&#5M9eU:m<UP:juTV&k5doOoo!t,mEdSn-G/XEfL.ZoLG]L"Tnd?4XK
%;reT)0c463hb<fucW^"lJ^ErI'o;e9%5Pg*]Q1sW*JUFVD-dh4cQ`A+(?Gu2`9o7IF>M.lB!e^[?5CZg)I\&k_b9YpL^_d8U$%>f
%0TFEZDWonpW!]^JBpr)9]7:rK.1lS&!cZfSZ:1*@>!ToYVHi:S3j+0,<KkO'0uD3`T_$f;"6E<`=@\^98b(.(`dDq$;sDL>Un3Of
%?NmrN7'M-*Sg.uc'%^7_Y1&!2e!"J?id8a)lA;AkjTKc#e]nTPYd.V9\$\c_#\Ilrk:i$PelpX:U`*/%>EV[]/"X,6#EEa0GJ%Ob
%6:K!Yo;hNKL_)!!k8@S='gR=57[qW0TLje[p@fPP"iPm@7'!-PBd0#CX?g26p/Eq+OSG7-r`>$$Q7,%lP+n9K/[&>&Wh11A%W!Y_
%5R6COQ?F>NVhai^)Al#;V7UItK^l[BB5`oU.UA`.U<PV9>XVb(4BkU-WlJBG7uU!c*0.RhY-QA',3!OjW2Kgm%&1I1[D'dASEiMl
%h.&kfr)/BU9>nV]nTkN"LH@$C4YF1Nb]_mBYO4;[1JaBannosMI7B<IQ@;;hHcqO9BR'ASN0Jsp2<!D-n`_DB5NKTPYeABT'$gHf
%Kq-mGO^abNiBm[l--"2sfkfJ;C&*&F]2h@2"2-oJ5']*Y2WdIRE2MNs-$+N\s3/*48[cQ[o(g"%`4KmXrrC<`:%OG%2`ltVmSo(J
%g9uit9($>oqYHlX0`FtEFK$3a>>'U"jG=r4q&*[^RKZ$5"P@:Dg'.P#A@b_N<8tLK\8!m9nmiQP^$%<r^*urWR2oQ>SVmraTFs:A
%LapBHlS7]\:*p^L,<TQi>bd]+d9#"KI;a'9n>_JL^lEe1Y2bIDQXo-:EeI`DR.]F!/8qTk>ZbLq@O&8OXAN?[D64bFnaV9]r7IC-
%<0boa>XklhFDkTnUg_6S=#q^$)hpZEY^$k9P'-4L8fT#Z9L5Me2GL3/g!'VV3.BFs[SGqDDE^5*L-+OA,s<r*KSG7\:_>Fb1IW"'
%F8V-EW>'XR9W&mq?an@'4r4$P\UH4U[,TaHVPS-r?1B"C91e$i7TAVDMnV5Ubpb*48GZiDZcFN9W-tu8%**?b.9qg@GH5c"X,#jF
%JGcRj(TL$;H(Y5XaaQS<NWZB%:PrTN*-12$+Xg/$5Ndq6M-^obpCq;pi#mRmgK&.nArICDk%d(k"8,NIDkaL9)6t(r1<hP^I%3Qu
%Aj':L`V8E_)c1IU`Q]j.X.Y`_E3h,befS,heIh+WKe^OnW89egI^M^CkrTec.+NO")m')QMsI@U=Y+7lSmL&N"d5_fN@7PEKHo!^
%7f+PQdrH4a+f4Sck"P8@X9:Id>(Y$t>++F&3FJ%)5+U"tI:9o<VocJgWis8X;SD<p1@.:6@T-4mAJnIK73t&ReK2tMTJ.oJ!m%a@
%V&]_a4g.(&2JTst[-ER]XUe7D;20$@eTSY2;8,sC&kjtD&u^3FJB9b0CkAVkSj$:Z:5+E'P1R/0V*2_Qh\XD>'8<!`j4$3rKPb"2
%I9N_Vj;]<<[JZmoBfPa6(g6:=R>6%tHEEu#JD#6@mBe^/-9iA`L'fGCD%YC,qF3=L$]Mjc=<?%HjI.OQfb[E<1-(332LT^^"4T-8
%Q2ld^SfWJ;a(ITT"Y0pCP[=f\[=eW7gN8iAc8WqnrQ3hC,N-clC3tus.J1'\(MZluk4HOsHR!nKND@4?au3H_J'S\/IabG2<f(HH
%Y=jQZf=MJ#-52<c08&pH_5B[:m"jd$cIPe.T4Y#c[7^#VOQ[EPe8\GfT28@.Z&'4S8Ya"KZH[6ueKS$kC.u'I`-JH`Z[2F<-g0LK
%TQpLkVH3"0!BNYuP@`KoLK<tdCcPAjm_[+-l/bGR,srpp(W*PR\STDf,\fmX/)b"]G5XK!/jq08m8HeDV&^GKmL%0:bUh$Pdru?:
%gWg4Eb9!A,4Q+WZfiElP-bb)[-\?'@%0=1=;O#1'J$T_<HIf+"hV2/ON92$!RI0YBVYaciNF9>]duZ*':=IE)S.+2ok$@lL75Yjh
%>uo</%hEr$R2Y84(rPMU<?1,]KGH"s2S=rB,s%8S=O9N9ka4$.]4Hmk&?0Ts#mX#q>OV^cbjlK.+0KZ+:o&ds))bjnAX,e+HW@]3
%V=YeM^?quqAGODeQN%?A0]nkF7X_ZpfqL6*gGB.@B6aM-iqrc$^:GOj&@u]u9Hbr`4\cGf!QJO#\oI>`UB#`'Y,(73D'S\k-^:[L
%=#<*CN@A>`YYC5AfVWYUfS27ZSAKA*"*/DBJDHR!<.M8/-(3YX;i_&g07\Sh;mb;.jY^FEPoeoJbj$/;"CHD>L*\`X>&[b`24O!I
%<F;;*UINNl0gOLJVAnHP*=5,EXTD]^G)@8Kg;>$PdksZfY_[BnGSAieaDM\f2WB>?ZSC2)Zk[=4?9O)(M$M(aQ#=$(\e85*"=VaU
%!e&5(7I=?l<>dR2I!aTlKs;oZCc:*h&.(9GQaY[RLT^-j"Zl=I+h8grV$q,Z+omE:kiHF9N;]hT?eoRg$t6B<%[)N@oQ'`Qk"JXb
%2UB<L/Mdq=*F^PP:6Q%D<'Fg)@(c2"\)<0Wm<ktt0]ahR+rft:V^bm+.UO#O>:15fH0]+BNiYg/nqC%;E.nqgF=U]X]`,]Q)#B'i
%\C/L5.[1X81bT[,fTdHg_=1SbfN3FLGfa)^;,k;<Eq$Veg43m"CXcF@[Qq^3W9#GXKE!.T1a#m4D,A#&pDC_.,pb#cJFYOJP/LY7
%k"$GCmQEo0.f,.QV,"^la*^$H;8f<c']po)'77=+Y&d'QXASen+;F#7'a.UG6kk[J_@G"shM9&k;a0HN2RI+K<BEo+ptk#haEkua
%OHc1Tri`>NGA@?TB(qGoC5=IEGMf'smP=^=*]5C!<:a1,M%j*W_04gGieFKK2)+U4Aa:p-^$p]/f?Y[*DSbi*iSN7/'KAP<b,B;(
%5rZAYE`rd%gLrdMM<0p*CNZg9&/+W2_)diG!.uU+?E/r*X?(p=Ie$lH_OZQMmZ[-U<6)"sD.,pMWitbT:6>8rBV?2XFUA.UCdMbu
%C"6:?,K3@p'b^mK3Q34'J<c>:hZLU2C"lc+ZO&t?(;YJkq=Q1/_o-\/]!r>+j)m87Lrqj>]5H=(WXBGVbf'c8Y2Zue'gkH&6qEJ"
%WKGiU/OGU<f%.on<RH@2(YGWtbFAo2MX0'#X313cEE)BjdnY6;*t?B^G[jU<M'^t/:^K:!d9"5WOVp`QDe[*tcQJ1!$*/[rmK$-j
%OaiPj:)6*?#87ku*c$NL'NGj.-X1^S^nJ(XV?(bB7b3aq7fdl\h(CTF6F$3S,"jg6MpeF?i)jYj2hi9f]N82_<-9rVV$uTAE(S^9
%LjWClY)M&A'h8n7V8,1qQ-EqJaq3^'6F<5!&$t*$l)S*>aNmY(Z&XrRm6iYn%"4A)I>a^i+NDD_KAj$o6P`c7@Q_N7[XBpijG5!u
%fJof+/W+bp)aR#)#*<[@)'f%Tbm(5Q#TERIaCO.V=&boHXW&+VLQS:)#d3]T)_VWJ2UF3t:C+j1A](<IDr$SdVLug;1UOJjp[HN<
%.bk;8g5Dhd%HWacNV[B+'%BA]!e\DDF,ZDUTl3oYdi0-1IV/Z/7dG/N]*6g'1-LL-5ne'_oWrYk'c\)"NqHP<N[\j^6,hK/WZ3D$
%3^)Nm2b!Y@T0B(6OHKrDgkBQW_?oLNoWMdu(NsQ5QRZQ`"6Vb('3VLRJIpf8<_uXkKKFbdU3C`!]BKXtlQD7\2<q5.>#H^Um,NaQ
%c:*Ug^G&5L[jb/dA-ep'PFEN0(MNcpD7IKYSYQSQf=onTE^%=r.O0F%F8+Au@Cr(lZ!;+\;+/hL*:7.Q]>KFm)A`jlkAZM`U"6Be
%HVq^(>JBT*UG/&<+H#JcE$Fm-GA(ZW)Vg'.^)8,R1'Y*IiGH0Y3,q&rf2oksE#s%=&X4%o#Cg\"1?U\n9#g-_=h,DoOOtM)_La@t
%f^]f!;33+q`o`1BCZVm;6A=K8@Ns>OC+cN2)/HJCaM`?(ifrOXROh;*`NVmbWVE6+Fes01i9M/1<OQqCVaa[H*ZZV=[6">t*gKrk
%7d&mY.8+!VFF@aO/:,Wi0``GCd\*cJCFQJ+6j."<#A`SrE?gY?U/Dg:LV[\tG7LLfm'U^bAQ(45Xa@TH<_].&[<T@uhjQn+%k_f+
%&*7E"jJ$S*fEc'q$11J90W?(:KmDj/Qud:9'Dbpq'9oJni:IeZhTBA]Y?J?j\g=LX3FRHGSX$eBnrK0IMDI&8nBD0gmocF"]%`n8
%*cVP1D*),u^l]Rs[+CNth5><_YSmqF2-`FTJW)Ai!f0J".J-V'B>MJXXb"[_;3R=-J-CLJ#u\chZ"8%soDg+\b+%Qq"N@at5L4A@
%'qLE;C$s?1aAstde;Q)HankP->-YPC("Uc2">V/&Wkb0FPVk[o&TG#6dlqQt=!P/l4EqpX!<4N2!YkAq,jf0("=@BqJe/4?!_#.T
%H\#!"eIVd6msYq,lY#>IDN8_=<^c@QQPLrnamp-7=RsF#%5G:4!<=)r^T5G3Hf-5<C.5MQE<[cN]S9l3X'PM"H.R?Uj+EoVH'.cD
%f?qrJeBssXLeImio-3cUlA^]2'^rAOI<Cd-16W?H$`QS@_'=>9PE)4:Q(*@96)`?Yq9kp6kc.\fG3Jd@ct.jFp3;_OCP1;'bIE7(
%T5Mq(=+r-_@T0gPKf?E0bhgT_g4\SUnZ:`[9Bp5^1Bu>KAS0S@^QDKrZBj4>'>^-.Jc+T$plV+:QZnpZTmi(=pn4YdH!bA<S*dpe
%?QCC8DNIU;!fLk(i,^h4Bug"cT&;pN0Kg'\J=t5R(W=k%aO[?%-c1NVbmQ/Z:YPm*][N<7l4M5'`9W-1b<*^;LLEX(^66e:`f@[:
%HfgN]HUanF#`GS88[/X1H7h>1l83a8K-7dQ]m2Ua1]RYZ#D\2Q2[,&Uj<PuBistS9PiHlCS1f'a$%@gQ7iP?8Tuj]3M%%B6cFG.`
%O9jT:SLRb`F,jp]Q';?nj(r^@l@':RGmsD_''+;k$VKKT2H8Zff%D,K^*oJ.e>eYS'$[&q%E/\(IUiKQigPg,#Ta6<e]$<I!jeOL
%6m^0ugmXrmYrbH@,CWO:*'%f=9Su<F\TN#94/mL#gIc(iDq%jlN<$Br1#%Q,Di8@-=CfTGVrlb!%TT;>(FPD*'[_iB:!L$@!lmAS
%I1m@16aC_*o1;G,SW![/rH'Z-*Kpo)5B!t?f#%Va:PNO_.sbHHq5&b.p1S)Hg91]i+u3qM0'OU.8[^Kb3ZtjA0EjIEaJrFQFpV&V
%1$!SkCssR^l4"+b@-^S.ESme"08F9`Q2uoo*C3#_DKTRYA[++R4!Y>\.<OjO:FV+J$(c<u7J(J[6dVSJ,J:sn[?E4SO0PFtaG#A)
%c0oNB3oafR=/8d#e+PY5WC4-hpc[PJQh,3QfA%6:VK(]9rP44*D)A*s@GL2.jjtpNU3i6"fgmVCMj!1(c!95#1.&47D,mpu2sRI6
%>3(Z09P6ZejBT(:TS:f`o)0SM1*@e/]p]=5/g[4o`gX!=F-#W:qJ09]i:A$V<Oj9AGrP>t4!H5MK4aZE&fjYWRR1-aY4)lmeY,uB
%agdEFoI'5u-l"CuUju^sXF*q'W8Q.deTO!MLMBd!UYFpr1HNZ=^GUYKLC-eVbI,jr=f/-tTdO^RlFBrs`lJr;BUCoSSUB<B*><N$
%AEWQ@n5oRlCbE9:c<Nb>8E?S:iWVJE0Sm3hLqW6gB\T%)7MK''&nfjLS#Mlt8RF:;[FPZs?]Z`QY&69%G`efChG9^iag5D3%%..o
%>n8-rVW@'O%u"9ks.UsTpR*?=aepI<*g?K2R'rtYhm_jN0m4#kKr>q@6$L1hZKkX2g-"p:jiT2g:-"6n=S9CG8u/%5c#eufffV[[
%"gF/4&@jj$eC2[D^cf,OZ*e;U]9C[."-P1+O]F!KjLJ#l@;tEfWY]^l)[Dr!#>9H*.[-+Ebqsk%"X9<!RAJ1pGG<lO;u^u%8aodX
%@U&i/pMKd'?Aj1d9hE.;=Xo-OEYgae*Rp!1%tg?F%/8&U[2*%t:,'u03<1pW0QGA(jM1iAUlZ[\TG6(4C$=Ca2MZ2Ic^b(YFRtH?
%M\O-oms9J'HidC&NWF[t6.n8h<qig*_o+:+$9!"\l6)&eD.3MOMlR8K3-<iBZ%sBj:#XJ;!D8+.3R0nbW$fX@n5PZ]n@,FsP+VR/
%==,SmMEs>pK6>Kf_d%A%#I04m8f$G]6"!QY7-MsrJ-L(IZSPJ0Bh,LlX=i,B8n77-`K%'C7slYo7[s=fras>>$0NpDE8n-"?QBUZ
%_I-(Brml3QNM4Y@CJ`UP'JQ#JZSDPU#G`r@dtgR3bdd"-,\+9fWjaZN=Q\,-k;_4!b:;G&R>\'Qfq)-%9.RnHOkXTh:#LLA+d5;D
%5M^nIf`RRTTC+#8>bL[i8k1YTHWiDC].OYQdp1aH@%#h%k(nhJL<ml<o2qr(O>0%+poI%oSLs*i=2k!6XQ[%hA*<NM#cIR,OD$TV
%W`KS2aC\he/g*'*T>]1&,A+3";LN-FS8+<h\jR/t,*'jk981%J>4#^M'*XrS?d2u<)fnH.CKb.,OFe&^K$/L=L:DPkVhUPN)[]4P
%n%3!Dn#dp*`9e"3CLk[<o(JXdmW_sa@Dj$=J_k\'S?JMq,\jER=5RUp/R"W+K1@6()RhK\<l`m.h3P>2%Z@]6VNhI+f7Q8'V&3$"
%EF*:6VG\]:.0M\MB.E<^\hJ`Xm[5G=6K&LHG4Yr&k7I=*(5h(K!LW#(K4FK6?!T3]2V4aWYG[8BZNdQLgOosfQ\5pr;<_IZ5m\[^
%gmj?4P>K8X9@M>]HYh<cp=t/slb?&1l0YB5s6IE<Dh%@shL><.AD?YChs%oOmI1$9(]Hpl\+27GZ\Z&M/brMeq7VC)W*-nJ!fa#'
%/r<FjOAJ\;e.-^oIiEqgiZu.$Zi?%dlu#jTOst\A]S`NX(0dU2H+KtD%HjKD`^DNu8=`6J,QH6FZ`trh@,*)0oV>Z+B:sp5gGG3m
%*pG8T?LdTP>8Q@9EWbYBY&iQFqTSBX9i<3MIa^fnhm==s8Md5Fo+&(feZit*krglfX!:[+3t-ioTs&3F:Q\j#XLUo"Hj-6D=BWkm
%:a3c]R4\QLdcHUQ#.$RgJ;03@GVo;'Ma>EE-3Fo9TOE`hT;'cqSSZ=03X6:TOMJjEA?.`-<SbWe'R9^=a+uEfgB<bPdsE\LiZGVV
%,+/CDp:Io-$r)H:X<,l=E,5no5AS\K-dU/n[c%J5+AM91:>a&]2nGP24[#4&6+*\$!IH%hJ'7^fm6]+8Co41'Z-8*JjsOb:.sn'f
%`I`'B8fubR_*\oNSm=0I>[>pLNs$XW<n]B4s)[N@du-PJS?$AJ\OJPfR`80nMbVg'Q3SGg356j'G;l#7X4F<A:8nIW@A9I>;L<cA
%WdfcQR3CN:/4/Bmk\Wdk5S;66fP!92eRE10q9oDq/c7i?4ta1L&oXnf5ceO@B$VqgY`gD;63@euG@n@Y("*l-<b=2MF9MsQ8m5pE
%g+,pcW/R#OpdpGt%+Rh2ZJ7A4Z5h\?b-?O\+s6fa:X#CkEsY4XHR\#\NVL=nYUBPOfVl"IG/+\oXTU^#0mBPc)?&>mf()62oS\WJ
%&P&ROf`Z),"A065)>X-/[ZjCk2'bF/c0h7-@^CSi)k&eXs,E7?+\rU$(3&o*;<h\i6KLbh)oA)iPC+es/%tXBG#[FK9VTtDenQ7&
%.on9&IGD@DF`6uc[VGD)m-_jVS!$4-Yq:g*5&&VMYEM45RP2TWo6+rkbe=IAW9&Eo@V5\bNF3I(kXA<UkR!lMnBndNA`&.^Xa\'C
%)VZU@0-dqU[DaIG3?3*0X[8pWs2oYIF8`DmX>Xq/nl<!J'P8G^ilraiID=g@X->ZaO"7Z>g)SB;`#Q#dY=rff(_mH>@s+Uf,dKMr
%G>7r!f`hJb'jGa8BL+c,emkn8^YNfqbtCJc,L0hP2-JF^5iMq9B$`c34uhKd49OAA@oB6M<NMgn*rp+a,n-ERf2^NJa*"`L2up$:
%MSG5_s1VW>VG-[#T[tGTOSt(sTXlV(WV.1bCcs`8HaDU.BdRbsikV_VF;>n*H3H,H)t`eeA1CpX:/Jjd`@?2tr@CrTBa5hmA1n5-
%?^JAPl?05f9#V_n`$I'99ZS#tZ!ZCXrMIQWF/SG+Fb`/_EX]LYR>pbeH,V>d\Y,-QRj%VV37qAoe!pVr$@ej\`?Va:PS[+M'^DpM
%rVPme??rc0'5;apC+KZpn=1%."EEh3l$]>@HDVj4DFNH'm!PP4M;#1claktSa6q"N`Q*?!aH-j)C:7'5XrD2p>4KQO1[WKQpN1^C
%b1]AZjfoUPg*]dqU,CAA`lFm<pc\SQ0Gq0Ar(Ns,@Cu@ZOAbRcS8?)XB#NpC&"43X/0nkgl"pLZS,K55:TLjf!=*$rY_18@7+.8W
%IJr^RbWMWF=Z(LWG<=3H;`AX\UQa#5m`!euC6VTTAuWL.f'7&a:b&+'j./%o,gOg^g@/?p"1*ss0(YbOOuBRt):t-X"1N-6:5QE>
%B]*a+H^/u:LJ'C?2*PcI>^G'qa&/n<m=`41Rsg9tQ:Y(lQ#1VuHff9+>I(MQhl*`64&3s?Mf`F=J.Vf40>=;1I-c7#V2%bR8o&IT
%_pr^`#2EYA0Si3epq0dR$(1"k3FJj;72sM*/7PKn1p`$A6J0e%Z\@]HZcjd"$ON>"oaGAA5H0S'_?1\3R-.Hk:?@dX`YU-dNTjs>
%M)iEt1W;-,L<_6gOjJ^kF'3Y[ZZ^a[^j+EE4,_mAT5^Ws4<PhSM[?k?EZGCpaoOq+MXCCAWbs_'RZSXqp!`3(7t#$1.;.G_QudI9
%I5[uXWE(%;.2O#NZ+5j84R=+B2(?Z<;3n6rcjWk%d<P9gOVcX7/!](,p+jPGI5LgqHYKb$0'Sj:WEdL;Sm/[ob'gV1)XqutN8uMD
%a\fOLk"'NIn^`Bj8dWq)<0FN9Kr-NY*1VX820T_F25C=Hn'-=1>b/og\4\_FBsTp^.9I5Ai16lhBfR6rMnd#RR*]"&H?'At%gh<4
%gR&.[%2KN<P=&omSlB%HO4mCRIa?D;5)q4:(PT#hVF;!),h:#n2sIAEaU(n`$AS\-]!%:O9$nf^.D>H0:c%QgGVDPV<:9VolM,2n
%k%8$`I,Z-8gS=S7'K\Ej!<TVNDYKg_9lMYu;biu#ZicL^K[AUu)fj!4dq\H$ip,b8S$$gJ`qc<0A2DMC\Ok'Oo??QFSRmOS[47PK
%eT0F6!:c-b+aRtTfD"#RN@&cZ*$TCL?9Nn8-.d3tX<-(am"E:qkNln]7IXU88$NpZ!iOp1,O>2>p7o'3nR50,<9QWna<HFMou'R#
%&K)@W`&g_Z+5WX=C]%%sG<QGR5+&05U79.3@n\?d7P\hP&p.s#e`aMiZer/"*tHYq=MJD`K'39c>//n&lDsgL(_/V3bGlVE`8,UG
%%sGI/gY1BP\M\qggXbN^3PFGGXY"mEKob*"XmOsbB)nh2,%7%Boc)O3DtR+rp"T#:0scptmI#U7q)N'7npk85#0qD`Y&ZcuZfIJX
%K3YHn&I+#d3.e&hB#![$F^V03DWqY]J:0n5VimR*Apo(IGu'K#1G%?0J_#%ufH,XcGp!jGEP,_D1MMdPk97%=aYDjDFUb71hS%V2
%=cD*c`pE7BX162j/5u*cGpW'F\1Cn,l=j4EV&Y?O$Db;(D^nc,WnME-b[q,Ag%p_]f8N,f'=6S=qX-XZ8\#M>c0XD=fPA(;Oma7^
%`SC`0^l7g8*?.cQYZfHc#f,r*,>Nfp%Of%:Nb0b?4Rra;K@jk,KVF7VMN`QT>5b&<=MfAHW^nU;n4P8O#bea.PWP2uOn4S%T\>Z:
%DPF2EM8moE'-9I@\!siP"b:,W"m.uZl_un9k_],kbtd"^>;c@CfEO@d$d/CoT!(qrNUE]7EYu?W&X'[K?W+m\>8u+f+k'C8/Z-0)
%GuaIAp!LnCL(l2ajmgV71$RiZ"C/iUNrLd:0S]DgeJs'?:=XL/95YKoST3.$+UnJ-/C%Ku#;8]K235?\.9Kn[f]nEJ@%O\oRdJtu
%GAV=BU!1r&Rc<+sN3+6fmMkil+d-8);^FMoL])cnH(%;Ur6>O7(<(ftQueDb19bK=iILKoC($N/^8PYBo+[k-2g`8NRRAaiU7<`0
%nsgrK1W)oBV"Jh4WM`?TGG-KdLtsP+P6mogUu"4J>PFO=1@[kB,VCfA3CgVocJG&hXt?gW9f.krHBPO4.>bH<-K;aB?[pRC<bE`X
%d1k+e+QcG9c5psh&H[20d$6[5rYC'?h?C.;VE=W!46@#[,+k8$XtFOh-jLSB4incK[/k`"Q4df^C0Tjm]2]60/C80-JI[k"3ZaN$
%c?=YUeQ>\iV9m9MIQB!6^\*f5^"H12,mZ(/`9L%0^#WskW$T^`UeUl7+[qI]U@^V-75^^u.00,NU[f6D(&1b::P9K%cJ?g%RIII]
%l.FR-go$=epML)&8]\XZ.<2H1+C&ZkSI/:gooLLsXi!Z.[,@MfSuM5N>]%h@'0?03cS&mn$\o,_futnA#W.>^TL)06Ec#cQ&BVb3
%]R/;L^nJAHbl4im+3h_3fgRDb_6ZP,T0piMUASm*cCp*3QQk=Sc[`QJ"feM6F82sGM2<_!,kn]4AKRDc-gR$5D!OoL/UJjWLkD,R
%l=9.['[EeDkn0&pWbNC6pSPPSKSb!*PO!LGjO0m%i1Tq+@o7Z$2C(KbU#A^f2]lE%a-RVD=Ulf(:ZGbDN>5@hB"`/gE\L4,>P8j&
%kK<K(cqKD\(;ZtQPr_Z^\q9.9O/a]L"d'h\q=[+18X1?SG?18Z]at3R&HdA]Tp!6";8$O9p9A6M6VWs!RuNC:-fEH\s4%?18\=#J
%5+?h"F`!Bb]-+>70,e^IUi42HP\^2EYI<JoVqE0cq4j@b2$63$K>t`(9g?Z*EqC3>fS`]%J<6hV)efuuV\68_^0YlFUWo!!SMje?
%ok@=MHEng$-pGnIiMY.(omAJ_msago0@)r;5kt8n#b<bnL,]UZ;+,BL:q,'cX_<EdB^I]8qjk9rNp1:GZ=uGR.Y%kTXtk>?!GHEa
%na>RZAQpA4s#>U;3^N`ZREk-.UEs(.^HOSli$^m"B#(0U\c\c@ekEr=D/i^_Ro),APMoM==PI3ta$d<:p>0W*2KK@X()^<;*i`**
%>DC`bQ'G6KinhGZ.m5Cb"lZ).#]*XPL;Vh*6JS3d2]X7H4fbX;j.$Os%]<o&?H^UH;B6LnET71DR5[ARUtta\1cSh!9g#Ztp@G.9
%FfAS$LZp_96)0B"hOZV)98C`d8+:F#3r\m2)/^u_C3:ugUg]1f<_2Oj>9^DNWbU9epD&BS%[k9M/b#6Q-]$Z"1+iN[W?WP((-7BU
%U^FV?0cdL'?J!COF@,!(rtoYo@ms!^LAY=3:f83<;lZgr*[/$JolK*n\e;_k3$E`_$Vbc&@!?-%[M!R,8:lj*rqCSMacVHTnBq?@
%9"-'M@mi6]1\NlY)q//nU.@(l@A'>__toRceZQ/P[A-0?B$48CZP8>!Tdc)0A-*p>6?j0,!9m9`'j1Xg`#5AC'Sp<\pGk46&=D?T
%$F^^nm#qt^LmDMG`S!n^S_mN]'hp8GZVi6#`Kp?/lBkmoP$cJVa_Y2.Oj8*`1(%DWT<)F`Pt,u$Y`^;`YJ[Bo'SWJCC>`8W$_5/'
%^i574#.uHY+ZH2i?L(2,bJiuoQ*PYBE5bs6"^^V-M%Ta?0G7Fa2BfIMkFlltS"Rko9#?Ah>hYRNUgjP4(r7WY=^R>lD&RG'H>r)8
%2P"=ThqP!VF<E+#c(`n0`A"Eh@jkI4,EVbi'cj<KSI[S=-s1:?XA8U8#rp[n#B@PVdF8JLCkW4a2@Ti]cVNa!B<=W&<p,Kms!R)"
%&"p,G:;`11c2;>=k!J]G4MA^eQA^e40R@"lCKR!JPMU2:U<l_mLE\[HP_-k3/Ok$0cC`dDMVe9P3H*im+HtoG"/H&Z@Jkb=<YmD6
%,ln78CidW:fGn\&j3V%fEPeK6@pWEa"<?i'C#Ar:(a@@WI2mQce9DTaPc^5oNLCJikedPbc*jYNR+0n$,>'cgD+I"q8?9X@Bs8b=
%JDuL5kBbQ^+,aP^+a1d#9+Gu1A):=#.#B/A_Fg1(n0!0Ni`n$rn.>8V9sV#pLl0sQn>2+W?<=OU+j$QUgt\I/0Um0km3DC>o2Lqi
%;7.010Cb/M.M^.:-XLC[/K-kumOGEZ"qB:_&e$/,kQSAU2CsO'Z'>nPN@VV^R`-#)h)p8[2lk%/gE>A6T&b4cLkb`jL^#l<Zu#2I
%'lF<WH1G*+m9/cSksimlE\sQnPf@QXlBG)_X03D"Vuf!Ff1'DCK\c)=pE8$n=&+=c]_JZjs7)4S#X,;8Pn\_u!.g$3oa$m8._C^0
%L*d8tUX%S?%$8&)&>5I!!,#r?#F^SLCt!=7T(23(>G!#9g[h1iHZJacEV'e/UeX(kmH>W21SEjU+07;!!h-,j%J!!9mN1P:n`#n!
%@hR-I2oXS+Bgs>8]5GlETVX'[]Mb/!>[6eQ0kFEO<<F<^HSlOnPQ,XV!Ok\j_2/F:jf8#qVr!(*!Y--:<nsoV's/V`05M1ZAa&2>
%]=%+#HHMZ9%^t)c[QU`Qb[poOZ9_Ugl1sU_S'197UF4ck/Uq4mQ+16EJJ,6!jGSNjN)!3/kG9YjrWg'bbI&XB6c]aA$;2%V.j:#)
%j+\#])r5`\_Whm:UR7e]Cf2bR[B$G[;Jb>a@)VeUPmS;\8JFb=*VKgM3Zb*W0on:@k?W[%[Gs#i%^T)3Je-\8\WhMH7$!%+[c*,0
%fFBQ+[XD@rM[`I(IY*a-"DI%Bgna$GIEAqE-7m7*pZZA`IrJkuhI9b,pXNp>[MgUGn4l,']0bd3f"a\gE5M%^r5kb_Ri<)9Z#X>V
%<lI<U`CkQ@k]>^1!;'*)_BeiaC9-`c_.(=MfakfcGml&M(*q=\%j8)m?VXL-fhW^c&%_MEKk14Zo=HDNEd(S[#D95+c+%euXP$cW
%_<Z]BJ3IMrQ-`,(93'YlZ<.lT?ZU,*U3Z,mYmVU*k>X1!"_tX!XlDqRUbki;@hg9GG^.G_kmW,D-!55qrpT7&=km_FJXYX+3]pH&
%=>uo1@k)_"TGY-fa*K=dT20M=1PHQ](:Uc@<I\h8mN.^lQ-)T9>/22?]9q!DC?`C3C\6&XZf^@YYOX9MFm5>ZC&aM@i3b\M1-'n3
%-qkBY,L$YlJE(Jnd_a:WF;FminW,CmUnBU:ke?%579p/K'll]"\#\%)ah6thJlZR)c>E\N'U>R=++t'5e<%rr=ijMmq'!9mOj^9>
%!b)]NTBm!JAsQWNl$WJ<[R9laZ<-)0At`Lns$4Q2D]?8uW]Vd7F3W9&X<8$qe=qMuZm2=c>&'UYL'N,P0;K['b)CDh[_N#U1n47L
%+j*.FmV86IKT&.K&.^QhXq3(1IP>tG+ct,+8jeU9i=e_=*>dHHqt\-paueM:nUjOHf/qg4nZ&3GRPg]t/;!aW)&ZV">LP%I)8WiA
%5`Mq2KtM8gLoS>(?34;%.ndBA;B=nTeh0\\;`EO])"_GV7ik?.D+),TYq+UGk7IH"k@?ND"7#JJF-3M(7,aH6_Ld!bi"[-T.JWS+
%gW#EYFZZkIZK-uoU7'3$(rL=W<D2;,3aoPj''P8=U;V"cHfW,1L:$`An\JhjhD:T5B&M=r-H"@BP^_ph<a7lm#=ZrN?_6lY6Vc')
%>0-!YhPh@l$'D0($U.94>^@'`I)U(t1Yj('*/(/im:1ld]rf]f59Wt-03`H8:uKgC]C9m.U(XeK?CpHBO>4YcE;$M5b3-3M\!3t<
%>W4[NHnoX"=Aseh:9c;&8V6F!:f(b[cD4Ps4d&TGGFI\;&OtN\o,agVU^M`'#,L;j$E3)K.dpaA#?,`-+1oE1?2FAl\S7NR$>dY-
%&m&C'SuR_+E&&N\;+;8LO-u*iQoo<S.JSF0\ULig^H-iA#;aXIkUXYmJ1<N='tLR6?Mq'd_UQln2$a2tl[W@&3tl657m@]gK6Df5
%Vq^5sZ%-2oS%1SmQARI$Ft't.N^a2k.@iP:c$\lPP!!O.#OB!+NO/h()Uc2b^qg)\7@KB>[cLD?78Bna;@`*61@L-#[^`]ARr.,P
%jL/9C;AO6afc8p;g8&Q:@sKoG]=D&KQe$c=`RFu!$><%<lg7iU^(uPJS@W4X?tle#Dc@T8*)5D$iiN5aN#-'co1A=h>:@_25[F66
%fVX:@<"S4"LQ?&^CU,@ii_7g=cq=g!d(l9>%ZFK\-lc5lS46a%5tiJ^ZZe4/E^FmEOB*EB-nA(IZ(G_gf?1/\:#9kcbjTGPFq/4q
%jD1K:>@,C)QC!3j:R^sq*CljJ65tMT\NGic>F"VP8@n43ljI&D`4uqdMo<r"^JO2MKBIQh!bTGKpVcF-CdKFU'dKoR@YulUok*)%
%P'\6i*W>NIhRttg06IFIhT`W+\Z<"6&^=bd1hWB,6>pq>R7E<PKAl=qHZ/WRgRK=?G&#0A'>q%"Yjc4[4$GRcMu.:GfRO3'mg*jD
%pXeco)<GV=0CNMuG&h=u:fu5]doAbl(=[5m2RXp2d(C3l7]5(3^!k!.cjEX9AK@#KZ6"E'WN,Ma/pY`R,?EW1(+ni/"/*]7Rtl-T
%3"1,bWdXfdCa@\lR4Np:7)eEm3`!tK;[ts.?A^T[2WsgLjAIB=HIA[om^-Dpj?$),k:G@'=Ck\s-;]V,X%'ma3D&%RLuc?f6jmEZ
%`TEQZ+u[p6Zob>_fc%SW_32n7*R^7tDCZ8ck`o&5qMop^7_0I%c=bjmFJ`7m@1o$7q52dN2/P/BoA`aYRJTMG]:1BoY,9?$a^BFS
%m@GmMNq+P,qW\NlO;2L/E=*rSL^YcLdW[+&o^$?'E@'?OUbtM<!;gU`CoJ*^SK?;_HWafkIb&a#^Ur1PR52_'A4.eri#(Z\TI(6&
%"tel8T$Me_^F4-!2<UV8FZpje`T/[P?LPSK&Y20>VJ3mB_JH;+[e=B`GOpj2;:'NRbdSB,'geqF,^f&bo[SAEk*_LQcoJnRI%$%W
%@nE<I[@aB8nUPLdco'R*7^AjBECBDtf,[GRPUPq^Nco(/M:S#3Ln-q-etd<jC=4.j&pZj;Om0<fL\D_Qm#8[&TsBVrAr/-@&J_aB
%c\5&Hos,GK1IFobLHZF?c$n:/9C=S.;*E"GISK0+/2L(*p!l53_rc'EHZfa@<UorkgPD-ekVni7_<a7P_^UT^<8"j!?N3Kh^,fBb
%M:jt-:7l4\n:l'^#tlS(WqT(J>'ue.X/^S<N?rZ.HjVPg65jT.ejOn<@^o$pE16D(41VCoen=\>nql$_S)SN67V(:K^sO$qd%=1,
%j%4U3hVI)'+QMT$)H[P:0CZ:MZ-s8Z@i&p'OX`83S)tHPDAl<V3Un%]`X]KUdHpU$%WR1u9FE#iEM=eGVi`Q3R8].mCI/BgcMhk1
%&IL.\"F&%Y]8jl'=UZ3a?:^3EjY0nurCHUdmd&b5rLVb,8(st7'iD1OH[Cc9g[kR9Re4"9p,b>Z3B&pHFCiM@VFE\gJtuUE"2=_Q
%UpQ45E6;\lY[*0TR]2XqAd_Jl`/s!"qIoSnno-&F=d5*_YaXd'2)bt6Y$T5$E*UuBNg!gfQCumJWnmX72fFP*ea[/c;F?a-!2A5K
%8UqRH,(]o;$CYViG;hT=QIb'jU*hse&4ptO9[?o8`R>8*:7EkMRL5&'p+NJ<8Hl[GCC:c!h2S7f7i\\%J.0u:N5g>WF"rm,#j2DA
%DtXXsWq6#"'dE@j6$\RWlTDOBPT?YYM/n%7Q`i8)au&[g+F:+(h9?]&4`#J)34]i8P@`M=m3tdBO&k)#FG)6N1_ai$.=p.!,\`b&
%Dbo*YeN;Iq@B:Qf=?hJDrqXE5'M-R0>?/pK/ufh9,G/EU'):PDdO:8;[*</_LU@mr"p,"(WTg8ZbAHZ@58a?ZLMM+W<_4D9M?M[6
%f\7oJ#[YU).!6Odbh^]P*9gT7?6='!.c&@M.09Qjf,hD<eKQSjQ[J5D*Y`n(LA,LqiNuPbTqpkY\_T0:k^V$R56N$W#X&(tGl3mC
%GXR#:chQ#-V=&q2eKF9E''Do1c:,jrpiiM/#\[;DqI/P[;`n6d5&YdQKCLV36]Yio.k?_*h,N(GoXMr$j.'Q\l=OmSkH],lT3l0e
%a;B4_Nt17:q<$il09PUq=>Q0"2oPZ_*$tU&m.]:A^e@cLnkqWK)\B5@on7A;P;`@_>l:cg>RVQ?RA#MB$*gJQ,Usm(eY4=9O'U&q
%Qc4tqdA=3FqIkjVfqnq#ONV]Gg1TORBEftF%@il(@+g(/'mA!)R[W;:oi8DX-bpiXB/fnSS'D50I0I^n'aqI73P#r1*/qY<208;J
%#0>)Eo$$G.A/Vg?*9OZBj&\9eWf-8dO3RN92amZ9p17kGhq&.t)m0CdC$m$uS`uq@7?F6cMs2Tr,:LA[*rAb+oTrhkqh`klklnSE
%UP*!Z7D8G(48rJ:o&$2gO54lr+eg63,6IZuT+M[%L2G4DW-F&hmU<C7p'E+RqT#KG@=SSuKL;9JUT(b@l!Ug@))g;22ROnaqW^7;
%k6PrPP3d87eRm;DWU?,gU\>o+*judB7'FrKRE.l9-JLX#MH>s<U-CGhK@A.Fc>asT*n!7XK(p.i!%]A:2!sUTNeHOJ77kHXLY&c!
%/^.F^GZ0=p_2Z/W1tCeH7:tqPbN'k=REsqnND?K@mNR2.)>n:aRE$]"qEn$FLRd'/3OKrLC-Ue/I`SMeOAgKIkAT,*bTIl_2*SS'
%IZRTUnL?9:RT3^OKe+DjgS5C;Ct3BdD]@@>Pn'=AI%K.s,<"]\"bP,<RoIZ)S?ZXm"*IN5'=Tqtk;]53D8]:<Nflon;^l/3/75,)
%0EATm/PEF%>590$S'fh*kJ&tQ>sijreuB(=M=)q-hl39oP?*,1ENODFN><a-n9D3Jgo7)&aX<R8bshA,(L/c8la8>&HV>%%?HZpa
%RFmN0-kS/I2u?=U'h/Q"NYd\WRi%.So(#e+Vd@9lP0Z&#+;t-s6DJ;g33KApX@L^rc8q@n'5GOo&TO$eWbO;o[N29RHaB?q>_Q%W
%--p'tj1_5kQfrsk[-F^hD?"kSM")`#B^.Jc;^nG4a7m2DnOY(eJL>6XjBT.5]Y2Ru=r\O517?9tB"tB^fo'_nBf(o/??*uP9pHSa
%B$[*IAP#@>J^_7jEI7.n9?ZnQ)uFY7B6SORYr^D\fppkY,8sUG#K\$hIa@8q:Iq(O`2KD]ijqHUlKI1)d&=/8[:_o1InGOtrFV;[
%bG7A:g)+]*e84BgZf0,`ftr.'1cBHVYGA07BBEW,:/4UHWLnj9R/O2.4L$t5\PauE]8G4(6fQfN:srUqL$JeY+CPTVGrJVfG=D)n
%P'Eg3L7FYdCp.+o+L+cCQn+!bCT]f?S9qU"opEh<gIl"REdF`A+Ms/3Efu2iIC4Pl7fFZ$R3bUX87S%9c5$n,i4GCu3m$VA.4aX,
%3)d>3nVP7po=]#n'0l(/khbYfcu:&Q"iWD.lpSsr7F==,j*IV2*8m7&.F=r+!Urk'b1br9/Y\YZ(9@aH#=+IC(,jgi<[ZS3F7;%t
%7/X3KB#!YP@R6/t(3i>&d73^Ka2q+I^rL&8[?FNtU9_XYio0=c:eGA7C2!bTQ2sTmo2iO2FBN"->e)[,JH]I"i.]Cki]hJW,gE+;
%n!\WTPn'/-%*&s-3C,brqT7$OablO0>n/]D6kY,aEHH\3lA\jU@_'/dbsN?5'O+`jrPphN8abF3N+mZXp:G4?';2m,?=<(O\KNtY
%174-IqYE$8G#iJM$Er[&Z;8$([a,/L`VJ&XH\VD-7S;k'+A2p6NJSc;-TRl-YF'Yjca[b1b"kE:WqH7.IUCXO%Wtt>3D@+T`>_Zf
%n$HXGMk3A)Y1%F(C$)qnZ"kSK9h*)FgNMft2SqW'0__-k=7hZGOu>\oPa++nh5S"W7YC_eCsuI0)M?06L>$Y<Na?L:T'Wm<AScbL
%:.gDQ^d3d%iGg'YZafY5H!h5/am"aHRf0B@SSCBS5a:=[L)ndAC>A4C,,TUsY,padJO\bip:DB`b*/P?qP+Uo9*412#,HujGKo*l
%8YquIB(\FUUY1DiErHL\NS>p2HZqoH@g[E32il5[lKo%+ZlRE*O[f96Na6]L07\#:#39QQbS6l4C(*L!pF6*+VSTUEMi%de);bCg
%g$bB#]:J0MJ4rK8@-Q/\K>E.hjF."i='s>L"CJ'XAEE5@&V4'=ME(bsUBMM!jFsbr*EkcV2/e#84[JUGhJq"AEt"4#gfY/VmOln'
%bE<Y8c2.9s/%nDRCdRd!::^]Ak@m=4I;TI7h*s7W+)uZ(2Gd).>GaH5>JE0/cSMob1RB$0a>tAU+'g<PC(C9_iW@f\0iHdtB=F-_
%@nk+d7N)#jkm><X@`,2]/gCNsI'$06:cqR0!ZOf6hJ`.#n$h<(51@72lD)GJ'.+shriB+,m?Zt3'b7^mZhI\[52d1q4PP,B;qGl?
%&*!59/otjC8e!XNMQ,?dT"?rY?#0-?Vo>n(%We4Y/@lh7e;^-9jl&1nEYAD/DIE7UNG.[=fel4I40-=sD&s,D&[E97NDr)ImcBki
%mlI"i>8'`O8`fSS>Ns9:5&&VMcT'3b[YYXFJ1nn3b[]g4!\H,g34EH`R:JZME,HV;Ke;Q)NQq7O/:e[6qkMgX/0k&YJ@Sug(Lf#]
%>cO74YuitprAj_LL=>SCGcbNT4:+!/?EX]],U\l>;O-T<L5'O42t@_I#V7(BNneG0G,iP)`0T2L'^3-A4_rN5TAm'(Z-FWph+2#^
%E,,=i&B+YsEUB9&($$Ah!4nq\igDSlS6*IT]NR"Pil]K+pO7T<o0J]s[EaHGDGAL-#a=3m2QHXLks9?P*cNPDoK07*s)@X]@;NL*
%eWY?pp>p:eViJZC8b^YT3J7YL,mH_X>+2:+AMNB@iqEs"+!6p\kkFG`07EHLS]V,O;*f&mRSoda,;,5#?6[R%D&i4@QBdZl#T@s=
%m*E;(=,2OFNI'1m?%0"(dBD\J5<n$#V4S:_j/.&g+.EaqUtPYq'9RD9H+:G])*`T5q*eZ:Z+05:k[ON=^Z]rI]l8N$Ms[4MAb!ZI
%p2l;[)q(-PmT(oO?(S4?HX4iJ/)lb>^U=rM]]I`U/+JD(]IqS2jBI(+$bUGYYhN]f[BKlj@?)(Th$66KbeAS9$(W/Zf0R?9*OGNX
%TDkCmo?T>I^>nLO"l,J-+#\Z^FPNq.rmbRkYDSk=LBV%3`k6-u+7K0^U&!b$^Rff&\:;\[q4E,ZDeXcPrh9.`amV7r$L-uQOPfWn
%hl/^;4@A`:mq8]oa/-I.-*QaFV!H2&?+,;KrtesGP4+OI'#3Ak7bboHZ0Y:bg;V1m<:'j!Cn`OP=$g6U'Zk1mU?^TW$`IWRJCKH8
%77Q(4M@e/`_+1t^e/*SiOVuT!-40M.$LT;FT\1e3@Qf(lq^@#3G[=]T6OL.$]uSG\\W.;Uqub5Ip_&LAjbQmcj)%8\R"@B)LtW<p
%J#c?[B-9e?C5M`F[cZq[<JbrF'3;+gnajfpr5V#Y$jt^!a(Y8Y0%bBpa\j#02I9l!E9FUb7@D'uG*b8"-Deq'`@TZ[-`ZC_NM;aJ
%#Tu4CZ$MI0UM4F1(`6n0i^3-60N`*Y(o&*LY@..%:JsuC_M5"DI\)-)>W8e<3o*B$l(3_O<Muq<q<3Y2eK2K.c#u?e7F5Cep@3X:
%.t5F>`W(?6p=&Idko(/H(9.nA)/qj(8[a5Fao\0Def!b(;AR?o>[Yu'qIel?D&T_6KU$T%_ZXsC2N.#Y'<9Zg@!*p@%[<*QWhepg
%>7*n-4kVJ4``DK)S%:g%$!p<MCM3F>*X7`+0aj&AjI-iPr%5L@\Qc%@5A#-E0?:9Z18P>/\@YE\XjBtEb:n0@dcSQr%94`,rN$n:
%-dFSU_3Zo2m`:cC27'UpdoXZN4gJ63"4fnq$<o8SH5``Wf2?ahf%mc3=&<ZTIq&!VX]?)5..f'K[VO!>6Q:0Dd<t]ETQRmdWT^Cl
%]@LEhm7ctC[:)_:DUO1pE&T0L<\(Z+NXhNCfse_>Wr4C-e54>+LMflf3CD(14Nf7:-<+*aNj"_qAL!&2V/92pS[ol;gddI*(p?!N
%f:`0f.LQ"-;O_]dNl8G\6er*n6e:4@N_Ri!a%>XNMt[]Ql0W?@\)l2F\n!Jc6Ku`e0o!$/2en4HejGA?QXO^,qhRP'.\E&n@Y;Rb
%Fo_4LA\[Bu,A&I,[Fh?t2g5]dA\5<H9jt@]>IaNB2R5\d,,8CZ"S=8E(778q.!:p><LqPE0`Zd_KZBI,dTO>7ktnrP:R)K*mZF\7
%2D#T*"NB<G8A#\c)3lB_(EJ11*P=5d$iR'bmC.17KC+,(-Y`n7@Pq#iA)CqZ#cXSaXX"hhn-(K:QBL4$`2lTfWuGIB2:&37;DQk1
%C:^$aif(QlDd+0mb6-`U*?Nc;>E+WS)Sd]DXMSf%D1l]"Hl/>ul#B3.,_*)fcRk]*Tj9\3p8bACNJ@4rq%m?L-Fk<MOu3R`YtfWr
%A=H4p+qe?e:cLT<I6Qu"f+*i0\"BE/k-D-0M%E/PC-!0SM`Y[MCoU%UU3D5YZ$J<t1jkYMWePK^Dg_QL%f-3iZqQR7l5g$?1"tgo
%``c*&[:XHUWU?7T7Fl0O=?p4be2%8]:W*h`^Q+2M&1"o.eTN6V1mdu0rE+=:>7nsAR]MY1Q)5)kh35kRVaCF@FY>FL?SI@i5pT#0
%l;$\"4,657'0n?s"hI6SH"-sVks(V=b%aeBfLYR^2/?/g;'&;<Q*2(57%KeM,"0em%&X)s\=-f.S`K6;W%&;p-;[[t`_aql:s,jh
%"l9<@S\-qRp#T<*K8l]OEJ.;WKVY_u2'%c1BF`DoK^K1fa;3jJ",%.^']SHHU*I^2`)?QpbH5jbm7!$oH!DJICGWpW&P20CXm2d@
%,@JiuR1\C8jMFOLQq2t*#(F-;W:dhD0r#<]6dU?9Tg/]T;GOSkG">*!b1Ml7Zsb_=$nEUB$'?urf7B+84@Y(.oAWZ"*r5a,FKqBg
%eu&i63mL>4$q'DEg5'`R[SI"RF3T"F/N`$@eb8;Sd[;';<-:)'&?3cdD8-oR\X3+?BZGZ=&L&;,U(>=#[D(Yl7Wij?-g&`=R]Ag7
%;<-A$s"Gl1D1(Z=a):gNcBmOboI5Y6>c:EK:*iiQjp*]U1:'@EO$/?k!m$P'/^>]^jA!=7%9Alh[Akib286R:%ep*][.Db0Q2C)j
%L]26\!L5#-\5]4+=BH<?6cRI&9JOG7]hDDLbY*S)aUpUacB1\Hjd]/s+>XBi=hEO[]t&J2_5U@P(U\@d&Y).D5P(]9`C*a6@4aeY
%ghA!n[[Y2MGgUq7IFSeS=gcu[0,>nd:4e9M[j\JZ+KOQYV(t7.csp^;qC%^)h%ihU]gQH2J=+.WLT5W02DfGtfV1hMYEq]DpNC9)
%/a/?U6_9?tb&OcuZj8470(%FNb>!ZEl\R+G.Uu`)"(*\mj&eaY@nDX2bf"&ikLm,G,o\u=aVWWu"Z2UVg@35)eoB^=SKKSld&D+1
%cWDV[J^/hUI3uosoAjc&g:3ZUf3=)m1'Z9D4U@9?)X"4<>;geWdjeguh=qLM)ulgPZE.)-'pcONl`4_N"E^h<oe^Hake(]'6Y)X:
%T%dC_e`s\:%YrlFn5,X5A!6.=\JW\^0NB+UI%^&]efkm&*'>XH]*:=BG0T+&1.tL8<<HMka*:T7"1#5Y@J]"XqfL9":f[AYUMYVm
%KYm&p(1CnJ<\dlroi!H6X4QHR4D.DT38jjXCs/Wg#laH.ekLi4mFFs&MX!dEko];g]N^DbjLl#`nE^Tj3sbl-9EgthQ<1g&*&[)J
%Hj=.O<-^AL2EiFC4#1#,9J[1R;%tMe6i+E@D9cQ'b8KW2YuU=aQ47`5IFTiC;:(\1(\ZjBUu2Bf3Gtnae$eP%9r^^[?kNnNZ[4]E
%Q5<'4<kCrK;*_kS3W!9T;7JCFV'GM6`N\!i'6fTm=F_"(9.ng1dTq3VF`Al4#G-&tfq(If`M<c6L0Dm;;_uMdE8W+?S&iKfQC5q3
%:m,Sc2sSk`IS@)9Xk\t5YPk9#XISr@RiOjieMP7B<E(1)=i7Gq4F&Utb>-!0TA>hXrRo\5\b%k%fss[SD^-*0&k13o7a3#;9F=+R
%;Yr)ApH*2q!6_D<24t'9[BFdd,gNN\l=qY"dI<Fcp[/$u$t#jaZKop\2g&j>ko)/FMq:4'f:j%N<q[tZR:ihhbnc+@%0\Gj=SbqW
%HbLf49>MsO3kYMt+"gE.VW0YJ*Fb%1p#81!ie$fs:K%i'r4Eb.rrnq^XVN=F-46@0KF^e=I2X8*cFVB7VIAcp*(>,*s'S@pjWt38
%1"c3niEJ`XCVbFLIEpapW]Ao-nbK?tYl<lBDGiRh@Xcs2)"(aZM&A3E;5BZC)$_MsV)4DQrnae/V8e;B<c$Sa^1WB&NqD>m6.?Kn
%naJ@+qt&Ecm4S&3KD8ar,l%;=dl4l%`HUq631Y)W;`8&^jZU:f*gX0D.]<tJln_6C)Z3/0!nX8\:r,;\jV@p-#oB&j:6c<SQ#<k^
%-_$6CUY/;tk`"=>bim-nFdbI`,kK0V3Q8rH.:c-,O9+"R-M:U9h!VU>/cR2V0d[^1@f&Eala*#BE[b3T"$El?LLjV'C^>#qT.h;s
%IQf_5J+D'^`sXdcD@8O$#bX<0^Ps:5S`?HCRm56.&,ep$Hrq=O0n4Z/]<>PkroE<:Z!+UJ#UPhY'RmGa[^gTV&NUJac^',#qn`+^
%E<nG>gioaQ.`K&jfmj[1>_[b1-,lfT</Q'LhIM*BRoNJ,-@9fH*4W2%)81!;1K$j$TCqur05ehNQmN^@>[pW5/09C4CuagOog?!k
%Ni%+0>I&;pfE<!UVlFQ:aQRB9@'IonB'7(G`U*'_g@)IKr.i*a<&=?#\9&AU39Jd(QX"\:A.F5U;"i<M`[F(_7O5b:*f6'R\&Y2G
%S'/(GB4FF/YRLWl!8MPLY+SG(e\CNg3/b>d8RZj(4(ZCKTT#tQeQkgEi(M*AkXb%kGM"fEU(9oq'N\q;+(AU8]Ophkf.A81@)ZWd
%Cc0j7ZHUF=X1l$^iB(Ot7eU@L^^1P/<mV]Wjm;Z`3uPfMauBqmQpQ0?2CIa!I1TLN\S)@&ddc?%gR;!SW%0tB.I^84#)M8ilr80V
%(E94>+M;aEb?V?sS8XAWR*B\/,7i9Y^8KV3'n*l@]RK5'"-s4A?<oQK0i<m:8$dE-HtMBV[iOf<qn26UFsD4/7n[Q9l-pPuCt1aW
%+\VYQ5rTM4P:(f9Z]&_U&9B^V_4'-u#!_3C!9>/XV2G.2H``G8Z0Aj[J@M*U\Ve_N1'gkS'Z4$_Y01U72JYq86r"fa-^2a1-rf08
%Ypf6!"3#J&em1`0(?VoeXX"DFeQ2n"8VggHg*`8RU>%-,pIa3Nd?EH%+uf,3@'H$;0RKYbI^LV:0IV,1+"q2-3.V=(ei&WEE/OH[
%>\`t'X,gM[Cp"5Q^JF^k[Dt7]os?7YKIY)cfTg_@V-pRQ&*"KBO>$1@d/<5,p0#hs!%MJ^??rOHmT]SFJ+`^1dHD-qi8DS@W^[aT
%ZY-FkD%])K`kdPS1`Z`W+ogHtmJGT`#%JZ(#U6aA"[?^Pf,j[8pEu\tqT3QsVOrTq"jek\>"i1SdMt9BUmWV)S_qKDYjVElXP]8X
%@S=u`/X1h`Agpm&:jV6@&rBTk(2jtb8RtB&.I!d/U,Mm^q.e6-hJAerW9(1'<JC@-=WlegDjGeR5KjI<?u$fU`CAifNb%a=@Z\@e
%V'?1!U:RS\G5=e1)_a'P[SX\5_MD[0o%gTs8Z?*u1L0ri2(cO<(Okd2>rM"'0B1a=7Ynl:ptTI4\X4iPBYWf&p%.dhrIYS#5d'.[
%oZqg,C[dRq32*dNG$n+,NZI(%c.b3NH,Y)rR8'=R"cf3hJRgQ4EbdS1N;;Md+#4^:Cq]]=#2&a=31ld$fo(4MH_'`S98R%pMY,6p
%r&t*e]U_6:/7i38+("]\D7GWc_*u@:+sft'2j<H*'#NGfD"U<2b$Kohof>b7kK:G8MIgC]RK"1(h-t>^'Z=stG^+OtjejJ5P,ppc
%I&=g)qW+-IZ`?I<Pc'R6cG(SdXMRVXIf9g1D(!ZqIc"=kg2a^oV+"X?mCrn^9a,S;DBj/')1uG:8WBhTdg%Q4YT'm9q[%kS).f,X
%Shab6>?9]ujq<d'c5Nl6%:?^WVeZV8c>I9$+lNg-b.m^!A3V;XdW[nYs2\S.Qs7]#q0Vd1;FDqFXe-uYT$KHZ5(^diNaCbC;Im*T
%SmWZ4TQ,:Si_k-SXFK_q6(PtU:-8Jl-]BEeTs&(rcLCQ-GBYsYE?%Ic^)QQkfSb;c*)D&[.jpfe?irgV`.8SoJq^RnLb(!-U1O,W
%B:c-gR@`6.A4j5fj@6ePmB>dBWNL^9/J32+!t];rPH(fqHuRO]N9=U$F=P@X-gbPJiFG<TqZ$fVU+S=OU-\`=.P)D5k')uFKD2Ll
%^8U)u1P4SQ6h<_Um9kbl<,>>?ijHoQ9ir;l<+S8)P+/^VX.0%j+icLUVS-LSs,X@dM6@'sWkbX*,K*5Q9C%a<^I:SNl$67kTee9)
%L+c[#Mt*?-M+t!r;boZH1K:@2+p9!W]O!oa4NJhs/16c`n<7Y5Z#*j(?k]rQEW>e)p5=C\$iThRGDJgFboW6s7#kB.=u;6Em&k*.
%@rYJ2"r(l1G2ML\@J%\Fi)j%Q"V+it&d")<^Me3"]\R^fDjYdINV\-KQZ(6T/UQ7EAVoU`?EXi+"98kqTOu4^/>WDOFh(YnP2rc;
%fT!&Q6g-Ig%p%''ghBJ!^UCILDSBD?],i*'b75f&I"Fg50\sADfdc]3X[Y;jgb:*fR1<tXeLJ,[)V$k+9nRKMCp"ni4_OuU<YO?$
%2IK"I4SM%O[(1&$>o?mW;N.AjmWo^Qgn8K4C)J#(f,Q3U8IS)60W\,8I*(\E#?"F[Fcd\V[2Y=4K?<f6QRK5.l;j0/bQoGqS]de/
%DJG$k4b)36n[#RLhd8Nlo(71>qVh+@HNBe+=)ST+^>/a-Gk0prrQXroiV"r%l[um/Z\!qfB7E/4O1W-A-VqIe3]t*$rqXfsA,@Eh
%'@ZU-HMF+6cgP2o@o[mh(r'9N?6!kN%_(?MZf<IVFjjrDs0Ma2B;_35GkL@gRH(>\s7tpEF_g'OSb_tsIs]dkBD]e/EVh,]R_QSI
%4*g>]S#a0%rUFejm[rD)DslIF7UI1=?G(+#rTWZ;IC$]E?ba><htJe!'rV"s&BQ\!C)`_/HeP.?iJ8tNZU"XoWgoY91dJDE*9:-T
%lk,lZH#-,n@'*[O(O`iUY;6K&9a]-:7#'@FLkL#t:Fm^bK9[bAJ^0R^96ueg#Kcbmpl37_&mIe3c;`^DD3uAbeKDQUliRYjb^*8/
%V6L5G9dgtt[!ujo0Q6$^ji=N$P)>l#LR\o='N<s&L+bJtSK(e[o;KcEq:&oY(WWT6Bm[de1+_jpl#lg4b&U3pC)k6rVQr!oBi17I
%^?U!=GCHM9T^%E!,.j>KKSWgS.R?Bni2WTOX@]!"D!HWl`oZAQq'ORJ>1AsE69"3'R["$%>8N0Qr`m_f[!*ARQ:l"VOVuMQPM2j%
%#0!.A>Gd5T<5fKlr9.'_C.UM)o$Wu2gZ\@;IY,]>o$cTjQC2E='Y,q2gEu-Hh0?+?5c!I81Zs-bmo/3Wf>J!b]GCZuC;_jTeTfUT
%Js8GI_($/:8D:pt#:Up5BbDnjjdLp3PtZ9bjNP,1W^Nn$bbhVR:rOD.k#G][+t)]1pEBIPW%iCak%0$MYAceI"Y^(mhNc;/C4-*n
%1f,rh=:F'9^l^i==(C`SV.=mu6YnmG"BSpnQ)(&dhi'l77u;c)L?\!,>mmT%H#?QsI`+2aoc?#JfJX<i&r%06D3E#p\_)?Sn%,`P
%n<N/=1h?Fp-5'`*#hb"l#6).*P"n9);R@\O)^QRX3oE/5E^+EfVKM1+gR:hID<OI2g<aE!#i3f(K4es)Mj`UH9MK@PgBHBGXkTpS
%\W@`0:;WN32pFZ]eW<iVW^\l@S2(.s7]=OLZt\"=oEJBa^#sgjK3(8L$,5EcJ%\!0O8!enXQ\\f\a?dhA7G8UV][1#*g<p!FhGK:
%gJ-?Lfc'Vn\aoKRgt?A2m&;2bl.122Tl?dFW\/WJoXSH$(>YQS!dBK$lLn2o]2>TaRSXgT'E3$!AY/7g6lP#-l?CcmhpZ\;h6+n,
%3">]JXstpJj(_X1W2t2CrUnjH.WVFu]rMd;k.(FSIsDjbYN0\Ie]2'r8ePhs[MM/;9jOr2Oas`ZGn(\lqoEab@+ci3BZ:<M=OiO6
%P=3Hr1osB?#hoBadIWP5=38drd0AD<54DI9Utmc%^(]*]R]#CIZ3FHoo\6G$6*-gAD7:d$26%*SQ>[F1*@,uHR;EKJ3XkcuFAKi#
%W);oE@nuDcd)jM$Ck2,#[2?:^ob`h6H5M7?Y<LPtVlu:1j.`\/9%2lVmIMQ'LI?/rlkEKrE3(?r,M:YA<G*2l=lGf5"*d5T3Y"If
%aYp^2(&j0n^X.Q%232?i<i:-c]SAdQ^U#.[7@+HHL`6'r9M.=eg7=Zf?pVHK[Xi1)L1E;A4YLo9f$M9X*m`3+GIg`)#7OmthpHAu
%1j4Zk>\oGaj"BB+`rj'<B[cU$+HG.qMf]\,]d9uVUhs#'Q\p\X1fQk7BKI[X=oo$78pnQF-miuLd>[lGq2eP910fK>%Cr(U^p_6Y
%AtYscY,`G-`aW-7b7%)(<j/DW&6QSkh$dh:"WX?X$Z8*0&bE)Q31GJ9+AQP,+:4(>)42lSic-gX.5RcI3Wj)0_&_+O5RBCYlPVYk
%?;ah@er]lW?]qb!ap2iV$t?Kt6Y<FaBTQ^KB%q8,.?(K+i2fCT$t^(aA<WM.EGU4$@[seO4`*caSZ5]J,S(NjY's'BUiq#V8L++j
%/+(;[g]6E(e<F6e1`;Jc#?6!/cmOsM(H=`j9"*MiPfPWnO1MdGAN22T=gV[]81Dd><n6p%BO+)IeoJgieXZ[F)lGP&.FB$q&[f7'
%*mhru%t2EU,LP;uCUge8W"+1;F*!tLCfY`b6eegJI6l:cO/L%.XX]Co8c(1L^kPJRH3kS(hB'MnrVbJgg/cmD_gF+1CpU+s1(gQr
%aJ[3L$kN^LSX53"En.@ZM=$d]]hJ3sH')k*QH>LNPbMM4*#`qqodb_EXQ[u2$@,sf9KH<*Ye6^d'&-$PV3tS7b=]$fo5pg&dhe&-
%HDM&2QH?b@2fu;fUqb0oH0VR[KI.C+jbR55n2%8Gq@t![a_Hm"6+rdrGU#mGYCjrnJm$G:8Y->>ZE(ZI-:q7'6J"A(c\q.o^@iUc
%%IK%C41*E0?D+*4>[E.35i^IDO:;\K>T,PAANm9$e^/DW+<+84ogOmTUN*7P)?^UE=[-(JMCdLL;pH?9'fgJOU[O,47h]\5nt@c?
%gh(6r'GeBCG-BW;Ub'BL.d>&Bo28O"8")V5VV]rJ\qHoGc#(t%*6),HDD&37XE&dH_342GOK>TU8HI&$ZW,d(WI/FBo&S5iV8Vts
%s1WCgiSdMChE,Wm1NE>1Z9EcS%:cBS6/!saJ+/3_/S"Et2iL>H,39IN4S(>-p3.#Pjfg*=Gh073E!`C?9gW^#Lek$:chK5WL-dti
%+!bep.@WtU4_@^clOLorL'h^'U5Kp`e(<D0WI/FAo'"MkV9&7gs1[*DF1S[7\S*)kM>HJK(JPo@6(R?Ac*dK(#3c_#bobde^7nEe
%o8o1<-t6nfDN4E!RS7/Jn1Ajd61UMG@1;KZZiXA#QOu3Cp&$H[GuVVmndN?(e@dO1\\N?B=Z(d;WD'P\qss\r>iK?EqI%g'9"Y9p
%P'\pnJOQe3im7q.^F((5qW*(FUC0aRV5ePV/!u75;*,>1/7q6!aUm[JO5UUbQ1dRV;k9-Q6!9R`*D"?1j:k"B7_.8@<%5E`S"-"a
%:14j=<7HVb7hikWP0)R#.8OX9$Bl`Gg8kID$_a5u^aiNslr1qe'M2"F:4PJ1N3+PU9ZRGM6'CD=UL@X,(:&5>.WU-X9B(!0=o93l
%Gk=:/KQ,u3NnDf89*r6:Y.I^G@Le^+["C@E>Jf2;j\.e]cFt?EZHsEb-LmVrBY+b1<Z#JZ,;=[H'%804-6-Sg<$_.;^hJikb7tfm
%3*;t_#P0"5UuMc?dH,WcF%uGI4Q.)\U\[`_F.MIAHRAtY,n_\E3u#$FIF5Eh.p0*GjW-WQP*\M?Z$M^6-4rLILr"1l,d(,"(inG(
%3[g5b6VYrt<Q+-'(qK!4Q?<?EX<9`7MWC4cL9>8=QGEb'H.Pm0c_^/;LYstc'?p=PW2#E$EQf'?a8DM;#;qHd(or#;;B:+bYc$0;
%L,ano,JH.j;mD^,ip[M>D3#VJ_i\&H,rBW&MHn`7YXj@<)k.?",f\1-,5q/eT:4G7*cR[K<Rs)b89j-o1IMngh,_!,H!CrjMTN;n
%A1:/4'LslD3ab^hU-\\Hpd:5"QO:!TkH\/-$+eP[84=`kK]I*@c;)41&TpL*q#l?H(2RMB(ai#8"jSD\@Gt_G<R&TqAYf(&,YkPN
%I-r5ll[4:u^ONZIi]O!Yn,\(q[06fP8"W/T+;X9+-S\L6(>>TGaekC;%F0UiJI8I()jX=R'$XE&D1P9?d"OMPMl*Hf)3$]2PG+7D
%\>'#[W9nWoK5SBcQ!Gl3+DAt_E$ffrf[@?.9TUY2J#>.ARNu:XoPt_3/Np$nXQ^tI*tOGVqp(t+&5>He@W,6=h4Q-(iG(ML^n0f0
%X(+rfP9_Fpis]^D(kmU27i5`R-jC30)<H0WXNB`@rK7mB3g@l6fMDlccb:,T_\1jco3HGGZG#]nhOKQSYVJQejJ>04@ar9aI?$+M
%,`0iPe7jL<*K_A?l@p[+YIJbt@heS<+VO.PXt_\?qcOc=_&RMIUq0&fEthU,\lFEh[0X']D;r+B14OE58#eb=fi_W[BLD#Ukg#)F
%od(Ju^0<*=W5\L)k=C5N]p?<O"f%2BWmeH-<0AN13$6W,edrGX_brtikVs6C3Z'FpYG.4PUG5nrObGGD^rl?2\M5qWA(7uC2H69P
%+-GI3;[uYYOqsjG#0k%35G$7n0IK^e?$VQSi,N&qKU$5.gjL\M1+,Vmmg\.N'R!\$J(1/.$S9p;KmQZqMjg#A5!#IJW!VE78Y?IM
%^_g\4l!>,]WM5!6Y8=3!b9`gflr6nc2_!0$<GqMVN5JHVjG.O:FFdH!.ZsYGoqZWcWH<=NjE:]<QG,R/h&YcuX6Yg/[N)X'+;1BD
%A.^6uS2mm]57m.\6u0$&=0ZFB]4dRB\<--8"];DO-k9aW[sIQhhhsP*29,$7B`n#^8VF`s\)nkJ+1QI\P/=>iCuEagWDrC]pY?P`
%I+iF[rAUuN0#*eQs7t:2hbS0^?g`D-gj]+a"FTdbrl*h<\,35diV);m?G,.03UHGu2jA^b@J\UD`U2XWh5f;Jme+b)5Cr=!q$3O>
%o(9,8rqN8g!q@\g[f~>
%AI9_PrivateDataEnd
